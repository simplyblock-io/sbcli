apiVersion: batch/v1
kind: Job
metadata:
  name: {{ JOBNAME }}
  namespace: {{ NAMESPACE }}
spec:
  template:
    spec:
      restartPolicy: OnFailure
      nodeSelector:
        kubernetes.io/hostname: {{ HOSTNAME }}
      hostNetwork: true
      hostPID: true
      serviceAccountName: simplyblock-storage-node-sa
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
      volumes:
        - name: grub
          hostPath:
            path: /etc/default/grub
        - name: boot
          hostPath:
            path: /boot
        - name: usr-bin
          hostPath:
            path: /usr/bin
        - name: usr-sbin
          hostPath:
            path: /usr/sbin
        - name: lib
          hostPath:
            path: /lib
        - name: lib64
          hostPath:
            path: /lib64
        - name: usr-lib
          hostPath:
            path: /usr/lib
        - name: dev
          hostPath:
            path: /dev
        - name: run
          hostPath:
            path: /run
        - name: proc
          hostPath:
            path: /proc
        - name: sys
          hostPath:
            path: /sys
        - name: usr-share
          hostPath:
            path: /usr/share
        - name: os-release
          hostPath:
            path: /etc/os-release
        - name: rootfs
          hostPath:
            path: /
      containers:
        - name: init-setup
          image: ubuntu:22.04
          securityContext:
            privileged: true
          volumeMounts:
            - name: grub
              mountPath: /host/etc/default/grub
            - name: boot
              mountPath: /host/boot
            - name: usr-bin
              mountPath: /host/usr/bin
            - name: usr-sbin
              mountPath: /host/usr/sbin
            - name: lib
              mountPath: /host/lib
            - name: lib64
              mountPath: /host/lib64
            - name: usr-lib
              mountPath: /host/usr/lib
            - name: dev
              mountPath: /host/dev
            - name: run
              mountPath: /host/run
            - name: proc
              mountPath: /host/proc
            - name: sys
              mountPath: /host/sys
            - name: usr-share
              mountPath: /host/usr/share
            - name: os-release
              mountPath: /host/etc/os-release
            - name: rootfs
              mountPath: /host
          command: ["/bin/bash", "-c"]
          args:
            - |
              set -e

              echo "--- Installing curl & networking tools ---"
              apt-get update && apt-get install -y iproute2 curl grep

              NODE_IP=$(ip route get 1.1.1.1 | grep -oE 'src [0-9.]+' | awk '{print $2}')
              echo "Detected node IP: $NODE_IP"

              echo "--- Sending config to $NODE_IP ---"
              RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -X POST http://$NODE_IP:5000/snode/apply_config -H "Content-Type: application/json" -d '{}')
              echo "HTTP status: $RESPONSE"
              if [ "$RESPONSE" -lt 200 ] || [ "$RESPONSE" -ge 300 ]; then
                echo "Failed to apply config"
                exit 1
              fi

              echo "--- Restarting kubelet ---"
              nsenter --target 1 --mount --uts --ipc --net --pid -- bash -c '
                if command -v systemctl >/dev/null 2>&1; then
                  echo "Restarting kubelet..."
                  systemctl restart kubelet && echo "Kubelet restarted" || echo "Kubelet restart failed"
                else
                  echo "systemctl not found; skipping kubelet restart"
                fi
              '

              echo "--- Init setup complete ---"
