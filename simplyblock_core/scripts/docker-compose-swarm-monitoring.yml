version: '3.8'

services:
  ### monitoring ###
  mongodb:
    image: "mongo:5.0"
    volumes:
      - "mongodb_data:/data/db"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - monitoring-net

  opensearch:
    image: "opensearchproject/opensearch:2.4.0"
    environment:
      - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"
      - "bootstrap.memory_lock=true"
      - "discovery.type=single-node"
      - "action.auto_create_index=false"
      - "plugins.security.ssl.http.enabled=false"
      - "plugins.security.disabled=true"
    volumes:
      - "os_data:/usr/share/opensearch/data"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - monitoring-net

  graylog:
    hostname: "server"
    image: "graylog/graylog:5.0"
    entrypoint: "/usr/bin/tini -- wait-for-it opensearch:9200 --  /docker-entrypoint.sh"
    environment:
      GRAYLOG_NODE_ID_FILE: "/usr/share/graylog/data/config/node-id"
      GRAYLOG_PASSWORD_SECRET: "${GRAYLOG_PASSWORD_SECRET}"
      GRAYLOG_ROOT_PASSWORD_SHA2: "${GRAYLOG_ROOT_PASSWORD_SHA2}"
      GRAYLOG_HTTP_BIND_ADDRESS: "0.0.0.0:9000"
      GRAYLOG_HTTP_EXTERNAL_URI: "http://localhost/graylog/"
      GRAYLOG_ELASTICSEARCH_HOSTS: "http://opensearch:9200"
      GRAYLOG_MONGODB_URI: "mongodb://mongodb:27017/graylog"
      GRAYLOG_SKIP_PREFLIGHT_CHECKS: "true"
      GRAYLOG_ROTATION_STRATEGY: "time"
      GRAYLOG_RETENTION_STRATEGY: "delete"
      GRAYLOG_ELASTICSEARCH_MAX_NUMBER_OF_INDICES: "${MAX_NUMBER_OF_INDICES}"
      GRAYLOG_ELASTICSEARCH_MAX_TIME_PER_INDEX: "1d"
      GRAYLOG_RING_SIZE: "4096"
      GRAYLOG_INPUTBUFFER_RING_SIZE: "8192"
    ports:
    - "5044:5044/tcp"   # Beats
    - "5140:5140/udp"   # Syslog
    - "5140:5140/tcp"   # Syslog
    - "5555:5555/tcp"   # RAW TCP
    - "5555:5555/udp"   # RAW TCP
    - "12201:12201/tcp" # GELF TCP
    - "12201:12201/udp" # GELF UDP
    - "13301:13301/tcp" # Forwarder data
    - "13302:13302/tcp" # Forwarder config
    volumes:
      - "graylog_data:/usr/share/graylog/data/data"
      - "graylog_journal:/usr/share/graylog/data/journal"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - monitoring-net

  promagent:
    image: simplyblock/promagent
    environment:
      ClusterID: "${CLUSTER_ID}"
      ClusterIP: "HAProxy"
      ClusterSecret: "${CLUSTER_SECRET}"
    deploy:
      mode: global
      placement:
        constraints: [node.role == manager]
    networks:
      - monitoring-net

  pushgateway:
    image: prom/pushgateway
    deploy:
      mode: global
      placement:
        constraints: [node.role == manager]
    networks:
      - monitoring-net

  prometheus:
    image: prom/prometheus:v2.44.0
    user: root
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.no-lockfile"
      - "--storage.tsdb.retention.time=${RETENTION_PERIOD}"
      - "--storage.tsdb.min-block-duration=2h"
      - "--storage.tsdb.max-block-duration=2h"
    restart: "always"
    deploy:
      mode: global
      placement:
        constraints: [node.role == manager]
    networks:
      - monitoring-net

  thanos-sidecar:
    image: thanosio/thanos:v0.31.0
    user: root
    command:
      - sidecar
      - --tsdb.path=/prometheus
      - --prometheus.url=http://prometheus:9090
      - --objstore.config-file=/etc/thanos/objstore.yml
    volumes:
      - prometheus_data:/prometheus
      - ./objstore.yml:/etc/thanos/objstore.yml
    deploy:
      mode: global
      placement:
        constraints: [node.role == manager]
    networks:
      - monitoring-net

  thanos-store:
    image: thanosio/thanos:v0.31.0
    command:
      - store
      - --objstore.config-file=/etc/thanos/objstore.yml
      - --index-cache-size=500MB
      - --chunk-pool-size=500MB
    volumes:
      - ./objstore.yml:/etc/thanos/objstore.yml
    deploy:
      mode: global
      placement:
        constraints: [node.role == manager]
    networks:
      - monitoring-net

  thanos-query:
    image: thanosio/thanos:v0.31.0
    command:
      - query
      - --http-address=0.0.0.0:9091
      - --store=thanos-store:10901
      - --store=thanos-sidecar:10901
    deploy:
      mode: global
      placement:
        constraints: [node.role == manager]
    networks:
      - monitoring-net

  thanos-compactor:
    image: thanosio/thanos:v0.31.0
    command:
      - compact
      - --data-dir=/data
      - --objstore.config-file=/etc/thanos/objstore.yml
      - --retention.resolution-raw=30d
      - --retention.resolution-5m=60d
      - --retention.resolution-1h=90d
      - --compact.concurrency=1
      - --wait
    volumes:
      - ./objstore.yml:/etc/thanos/objstore.yml
      - thanos_compactor_data:/data
    deploy:
      mode: global
      placement:
        constraints: [node.role == manager]
    networks:
      - monitoring-net

  node-exporter:
    image: prom/node-exporter:v1.7.0
    user: root
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/host'
      - '--collector.filesystem.ignored-mount-points="^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)"'
      - '--collector.filesystem.ignored-fs-types="^(sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"'
      - '--no-collector.ipvs'
    restart: "always"
    deploy:
      mode: global
    networks:
      - monitoring-net

  grafana:
    image: grafana/grafana:10.0.12
    environment:
      GF_SECURITY_ADMIN_USER: "admin"
      GF_SECURITY_ADMIN_PASSWORD: "${CLUSTER_SECRET}"
      GF_ALERTING_ENABLED: "true"
      GF_PATHS_PROVISIONING: "/etc/grafana/provisioning"
      GF_INSTALL_PLUGINS: "grafana-opensearch-datasource"
      GF_SERVER_ROOT_URL: "${GRAFANA_ENDPOINT}"
    volumes:
      - ./datasource.yml:/etc/grafana/provisioning/datasources/datasource.yaml
      - grafana_data:/var/lib/grafana
      - ./alerting:/etc/grafana/provisioning/alerting
      - ./dashboard.yml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./dashboards:/var/lib/grafana/dashboards
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - monitoring-net

volumes:
  mongodb_data:
  os_data:
  graylog_data:
  graylog_journal:
  grafana_data:
  graylog_config:
  prometheus_data:
  thanos_compactor_data:

networks:
  monitoring-net:
    external: true
