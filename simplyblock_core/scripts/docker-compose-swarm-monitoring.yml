version: '3.8'

services:
  ### monitoring ###
  mongodb:
    image: "mongo:5.0"
    volumes:
      - "mongodb_data:/data/db"
    networks:
      - monitoring-net
    deploy:
      placement:
        constraints: [node.role == manager]

  opensearch:
    image: "opensearchproject/opensearch:2.4.0"
    environment:
      - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"
      - "bootstrap.memory_lock=true"
      - "discovery.type=single-node"
      - "action.auto_create_index=false"
      - "plugins.security.ssl.http.enabled=false"
      - "plugins.security.disabled=true"
    volumes:
      - "os_data:/usr/share/opensearch/data"
    networks:
      - monitoring-net
    deploy:
      placement:
        constraints: [node.role == manager]

  graylog:
    hostname: "server"
    image: "graylog/graylog:5.0"
    entrypoint: "/usr/bin/tini -- wait-for-it opensearch:9200 --  /docker-entrypoint.sh"
    environment:
      GRAYLOG_NODE_ID_FILE: "/usr/share/graylog/data/config/node-id"
      GRAYLOG_PASSWORD_SECRET: "${GRAYLOG_PASSWORD_SECRET}"
      GRAYLOG_ROOT_PASSWORD_SHA2: "${GRAYLOG_ROOT_PASSWORD_SHA2}"
      GRAYLOG_HTTP_BIND_ADDRESS: "0.0.0.0:9000"
      GRAYLOG_HTTP_EXTERNAL_URI: "http://localhost:9000/"
      GRAYLOG_ELASTICSEARCH_HOSTS: "http://opensearch:9200"
      GRAYLOG_MONGODB_URI: "mongodb://mongodb:27017/graylog"
    ports:
    - "5044:5044/tcp"   # Beats
    - "5140:5140/udp"   # Syslog
    - "5140:5140/tcp"   # Syslog
    - "5555:5555/tcp"   # RAW TCP
    - "5555:5555/udp"   # RAW TCP
    - "9000:9000/tcp"   # Server API
    - "12201:12201/tcp" # GELF TCP
    - "12201:12201/udp" # GELF UDP
    - "13301:13301/tcp" # Forwarder data
    - "13302:13302/tcp" # Forwarder config
    volumes:
      - "graylog_data:/usr/share/graylog/data/data"
      - "graylog_journal:/usr/share/graylog/data/journal"
      - "graylog_config:/usr/share/graylog/data/config" 
    networks:
      - monitoring-net
    deploy:
      placement:
        constraints: [node.role == manager]

  promagent:
    image: simplyblock/promagent
    environment:
      ClusterID: "${CLUSTER_ID}"
      ClusterIP: "HAProxy"
      ClusterSecret: "${CLUSTER_SECRET}"
    networks:
      - monitoring-net
    deploy:
      placement:
        constraints: [node.role == manager]

  pushgateway:
    image: prom/pushgateway
    networks:
      - monitoring-net
    deploy:
      placement:
        constraints: [node.role == manager]

  prometheus:
    image: prom/prometheus:v2.44.0
    user: root
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=${RETENTION_PERIOD}"
    networks:
      - monitoring-net
    deploy:
      placement:
        constraints: [node.role == manager]

  node-exporter:
    image: prom/node-exporter:v1.7.0
    user: root
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/host'
      - '--collector.filesystem.ignored-mount-points="^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)"'
      - '--collector.filesystem.ignored-fs-types="^(sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"'
      - '--no-collector.ipvs'
    networks:
      - monitoring-net
    deploy:
      mode: global
      placement:
        constraints: [node.role == worker]
        
  grafana:
    image: grafana/grafana:10.0.12
    environment:
      GF_SECURITY_ADMIN_USER: "admin"
      GF_SECURITY_ADMIN_PASSWORD: "${CLUSTER_SECRET}"
      GF_ALERTING_ENABLED: "true"
      GF_PATHS_PROVISIONING: "/etc/grafana/provisioning"
      GF_INSTALL_PLUGINS: "grafana-opensearch-datasource"
    volumes:
      - ./datasource.yml:/etc/grafana/provisioning/datasources/datasource.yaml
      - grafana_data:/var/lib/grafana
      - ./alerting:/etc/grafana/provisioning/alerting
    ports:
      - target: 3000
        published: 3000
        protocol: tcp
        mode: host
    networks:
      - monitoring-net
    deploy:
      placement:
        constraints: [node.role == manager]

  CleanupGraylog:
    image: $SIMPLYBLOCK_DOCKER_IMAGE
    environment:
      LOG_DELETION_INTERVAL: "${LOG_DELETION_INTERVAL}"
    command: "python simplyblock_core/workers/cleanup_graylog.py"
    networks:
      - monitoring-net
    deploy:
      placement:
        constraints: [node.role == manager]

  ### monitoring ###

volumes:
  mongodb_data:
    driver: ${USE_EBS:-local}
  os_data:
    driver: ${USE_EBS:-local}
  graylog_data:
    driver: ${USE_EBS:-local}
  graylog_journal:
    driver: ${USE_EBS:-local}
  grafana_data:
    driver: ${USE_EBS:-local}
  graylog_config:
    driver: ${USE_EBS:-local}  
  prometheus_data:
    driver: ${USE_EBS:-local}

networks:
  monitoring-net:
    external: true
