version: '3.8'

services:
  fdb-server:
    image: foundationdb/foundationdb:7.3.2
    networks:
      - hostnet
    environment:
      FDB_CLUSTER_FILE_CONTENTS: '$FDB_CLUSTER_FILE_CONTENTS'
      FDB_NETWORKING_MODE: 'container'
      FDB_CLUSTER_FILE: '/etc/foundationdb/fdb.cluster'
    volumes:
      - "/etc/foundationdb:/etc/foundationdb"
      - "/etc/foundationdb/data:/var/fdb/data"
      - "/etc/foundationdb/logs:/var/fdb/logs"

    deploy:
      mode: global
      placement:
        constraints: [ node.role == manager ]

  WebAppAPI:
    image: $SIMPLYBLOCK_DOCKER_IMAGE
    command: "python simplyblock_web/app.py"
    networks:
      - localnet
    deploy:
      endpoint_mode: dnsrr
      mode: global
      placement:
        constraints: [node.role == manager]
    volumes:
      - "/etc/foundationdb:/etc/foundationdb"
    environment:
      - FLASK_DEBUG=False
      - FLASK_ENV=production

  StorageNodeMonitor:
    image: $SIMPLYBLOCK_DOCKER_IMAGE
    command: "python simplyblock_core/services/storage_node_monitor.py"
    deploy:
      placement:
        constraints: [node.role == manager]
    volumes:
      - "/etc/foundationdb:/etc/foundationdb"
    networks:
      - hostnet

  MgmtNodeMonitor:
    image: $SIMPLYBLOCK_DOCKER_IMAGE
    command: "python simplyblock_core/services/mgmt_node_monitor.py"
    deploy:
      placement:
        constraints: [node.role == manager]
    volumes:
      - "/etc/foundationdb:/etc/foundationdb"
    networks:
      - hostnet

  CachingNodeMonitor:
    image: $SIMPLYBLOCK_DOCKER_IMAGE
    command: "python simplyblock_core/services/caching_node_monitor.py"
    deploy:
      placement:
        constraints: [node.role == manager]
    volumes:
      - "/etc/foundationdb:/etc/foundationdb"
    networks:
      - hostnet

  LVolStatsCollector:
    image: $SIMPLYBLOCK_DOCKER_IMAGE
    command: "python simplyblock_core/services/lvol_stat_collector.py"
    deploy:
      placement:
        constraints: [node.role == manager]
    volumes:
      - "/etc/foundationdb:/etc/foundationdb"
    networks:
      - hostnet

  PortStatsCollector:
    image: $SIMPLYBLOCK_DOCKER_IMAGE
    command: "python simplyblock_core/services/port_stat_collector.py"
    networks:
      - hostnet
    deploy:
      mode: global
      placement:
        constraints: [node.role == worker]
    volumes:
      - "/etc/foundationdb:/etc/foundationdb"

  DistrEventCollector:
    image: $SIMPLYBLOCK_DOCKER_IMAGE
    command: "python simplyblock_core/services/distr_event_collector.py"
    networks:
      - hostnet
    deploy:
      mode: global
      placement:
        constraints: [node.role == worker]
    volumes:
      - "/etc/foundationdb:/etc/foundationdb"

  HAProxy:
    image: haproxytech/haproxy-debian:latest
    deploy:
      mode: global
      placement:
        constraints: [node.role == manager]
    ports:
      - 80:80
      - 8404:8404
    networks:
      - localnet
      - monitoring-net
    volumes:
      - "$DIR/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg"

  CapacityAndStatsCollector:
    image: $SIMPLYBLOCK_DOCKER_IMAGE
    command: "python simplyblock_core/services/capacity_and_stats_collector.py"
    deploy:
      placement:
        constraints: [node.role == manager]
    volumes:
      - "/etc/foundationdb:/etc/foundationdb"
    networks:
      - hostnet

  CapacityMonitor:
    image: $SIMPLYBLOCK_DOCKER_IMAGE
    command: "python simplyblock_core/services/cap_monitor.py"
    deploy:
      placement:
        constraints: [node.role == manager]
    volumes:
      - "/etc/foundationdb:/etc/foundationdb"
    networks:
      - hostnet

  HealthCheck:
    image: $SIMPLYBLOCK_DOCKER_IMAGE
    command: "python simplyblock_core/services/health_check_service.py"
    deploy:
      placement:
        constraints: [node.role == manager]
    volumes:
      - "/etc/foundationdb:/etc/foundationdb"
    networks:
      - hostnet

  DeviceMonitor:
    image: $SIMPLYBLOCK_DOCKER_IMAGE
    command: "python simplyblock_core/services/device_monitor.py"
    deploy:
      placement:
        constraints: [node.role == manager]
    volumes:
      - "/etc/foundationdb:/etc/foundationdb"
    networks:
      - hostnet

  LVolMonitor:
    image: $SIMPLYBLOCK_DOCKER_IMAGE
    command: "python simplyblock_core/services/lvol_monitor.py"
    deploy:
      placement:
        constraints: [node.role == manager]
    volumes:
      - "/etc/foundationdb:/etc/foundationdb"
    networks:
      - hostnet

  CleanupFDB:
    image: $SIMPLYBLOCK_DOCKER_IMAGE
    environment:
      LOG_DELETION_INTERVAL: "${LOG_DELETION_INTERVAL}"
    command: "python simplyblock_core/workers/cleanup_foundationdb.py"
    deploy:
      placement:
        constraints: [node.role == manager]
    volumes:
      - "/etc/foundationdb:/etc/foundationdb"
    networks:
      - hostnet

  TasksRunnerRestart:
    image: $SIMPLYBLOCK_DOCKER_IMAGE
    command: "python simplyblock_core/services/tasks_runner_restart.py"
    deploy:
      placement:
        constraints: [node.role == manager]
    volumes:
      - "/etc/foundationdb:/etc/foundationdb"
    networks:
      - hostnet

  TasksRunnerMigration:
    image: $SIMPLYBLOCK_DOCKER_IMAGE
    command: "python simplyblock_core/services/tasks_runner_migration.py"
    deploy:
      placement:
        constraints: [node.role == manager]
    volumes:
      - "/etc/foundationdb:/etc/foundationdb"
    networks:
      - hostnet

volumes:
  os_data:

networks:
  monitoring-net:
    external: true

  hostnet:
    external: true
    name: host

  localnet:
    driver: overlay
    ipam:
      config:
        - subnet: 192.168.1.0/24
