{
    "info": {
        "_postman_id": "4f0ccde4-75b2-4bf2-a224-9ea62d8eb18c",
        "name": "SimplyBlock-API",
        "description": "SimblyBlock Web API",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "_exporter_id": "31801197",
        "_collection_link": "https://red-firefly-736457.postman.co/workspace/SimplyBlock~91867c59-4e78-4ca3-97cc-af3fdb72f0a8/collection/434798-4f0ccde4-75b2-4bf2-a224-9ea62d8eb18c?action=share&source=collection_link&creator=31801197"
    },
    "item": [
        {
            "name": "Cluster",
            "item": [
                {
                    "name": "cluster list",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/cluster/",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "cluster",
                                ""
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "cluster list",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/cluster/",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "cluster",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Thu, 30 Nov 2023 14:20:26 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "785"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"auth_hosts_only\": false,\n            \"blk_size\": 512,\n            \"cli_pass\": \"pdsYoTug1r\",\n            \"db_connection\": \"LO2n1LCa:839nBCbHkpS4lPe6bVcq3lp5N1TVQF6Q@172.30.213.48:4500\",\n            \"deleted\": false,\n            \"dhchap\": \"\",\n            \"ha_type\": \"ha\",\n            \"id\": \"cf600f7c-4bc5-4c86-8bcf-00b914f7d0dc\",\n            \"iscsi\": \"\",\n            \"model_ids\": [\n                \"Amazon EC2 NVMe Instance Storage\"\n            ],\n            \"name\": \"Cluster\",\n            \"nqn\": \"nqn.2023-02.io.simplyblock:cf600f7c-4bc5-4c86-8bcf-00b914f7d0dc\",\n            \"object_type\": \"object\",\n            \"page_size_in_blocks\": 2097152,\n            \"secret\": \"EsuCFnejDDkrSxl0bvBU\",\n            \"status\": \"active\",\n            \"tls\": false,\n            \"updated_at\": \"1701261604\",\n            \"uuid\": \"cf600f7c-4bc5-4c86-8bcf-00b914f7d0dc\"\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "cluster status",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/cluster/status/{{CLUSTER_ID}}",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "cluster",
                                "status",
                                "{{CLUSTER_ID}}"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "cluster status",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/cluster/status/2d240a9a-eed0-476d-9175-289483f7e738",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "cluster",
                                        "status",
                                        "2d240a9a-eed0-476d-9175-289483f7e738"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:11:34 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "1459"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"Hostname\": \"ip-172-30-33-64\",\n            \"Size\": \"1.1 TB\",\n            \"Status\": \"online\",\n            \"Storage ID\": 0,\n            \"UUID\": \"19a8b4e4-c376-4b5b-9624-ddebbf92de3f\"\n        },\n        {\n            \"Hostname\": \"ip-172-30-152-207\",\n            \"Size\": \"1.1 TB\",\n            \"Status\": \"online\",\n            \"Storage ID\": 1,\n            \"UUID\": \"27dc5122-6db2-427a-8cf3-e5b89262f767\"\n        },\n        {\n            \"Hostname\": \"ip-172-30-100-75\",\n            \"Size\": \"1.1 TB\",\n            \"Status\": \"online\",\n            \"Storage ID\": 2,\n            \"UUID\": \"127baa8f-fde3-4707-84cd-240672c0a9d4\"\n        },\n        {\n            \"Hostname\": \"ip-172-30-164-21\",\n            \"Size\": \"1.1 TB\",\n            \"Status\": \"online\",\n            \"Storage ID\": 3,\n            \"UUID\": \"83b134f4-879b-4fcc-b73d-b4df7347efb3\"\n        },\n        {\n            \"Hostname\": \"ip-172-30-231-190\",\n            \"Size\": \"1.1 TB\",\n            \"Status\": \"online\",\n            \"Storage ID\": 4,\n            \"UUID\": \"9e65d303-e7a1-4791-946f-0bb354c61a8a\"\n        },\n        {\n            \"Hostname\": \"ip-172-30-112-96\",\n            \"Size\": \"1.1 TB\",\n            \"Status\": \"online\",\n            \"Storage ID\": 5,\n            \"UUID\": \"e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\"\n        },\n        {\n            \"Hostname\": \"ip-172-30-201-126\",\n            \"Size\": \"1.1 TB\",\n            \"Status\": \"online\",\n            \"Storage ID\": 6,\n            \"UUID\": \"6467eb23-bcab-4efa-8c2a-abda7e036dff\"\n        },\n        {\n            \"Hostname\": \"ip-172-30-252-216\",\n            \"Size\": \"1.1 TB\",\n            \"Status\": \"online\",\n            \"Storage ID\": 7,\n            \"UUID\": \"4be977ee-b1e0-411b-aeac-2a7d66324295\"\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "cluster getlogs",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/cluster/get-logs/{{CLUSTER_ID}}",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "cluster",
                                "get-logs",
                                "{{CLUSTER_ID}}"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "cluster getlogs",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/cluster/get-logs/2d240a9a-eed0-476d-9175-289483f7e738",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "cluster",
                                        "get-logs",
                                        "2d240a9a-eed0-476d-9175-289483f7e738"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:12:38 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "2496"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"Date\": \"21:43:54, 23/11/2023\",\n            \"Event\": \"OBJ_CREATED\",\n            \"Message\": \"Management node added ip-172-30-32-227\",\n            \"NodeId\": \"\",\n            \"Status\": \"\",\n            \"Storage_ID\": \"None\",\n            \"VUID\": \"None\"\n        },\n        {\n            \"Date\": \"21:43:54, 23/11/2023\",\n            \"Event\": \"OBJ_CREATED\",\n            \"Message\": \"Cluster created 2d240a9a-eed0-476d-9175-289483f7e738\",\n            \"NodeId\": \"\",\n            \"Status\": \"\",\n            \"Storage_ID\": \"None\",\n            \"VUID\": \"None\"\n        },\n        {\n            \"Date\": \"21:45:47, 23/11/2023\",\n            \"Event\": \"OBJ_CREATED\",\n            \"Message\": \"Storage node created 92856305-a295-4deb-bb17-f37413779c26\",\n            \"NodeId\": \"\",\n            \"Status\": \"\",\n            \"Storage_ID\": \"None\",\n            \"VUID\": \"None\"\n        },\n        {\n            \"Date\": \"21:47:50, 23/11/2023\",\n            \"Event\": \"OBJ_CREATED\",\n            \"Message\": \"Storage node created f23bb38f-7386-4614-bc7f-d8a8fa1e9dbb\",\n            \"NodeId\": \"\",\n            \"Status\": \"\",\n            \"Storage_ID\": \"None\",\n            \"VUID\": \"None\"\n        },\n        {\n            \"Date\": \"21:50:07, 23/11/2023\",\n            \"Event\": \"OBJ_CREATED\",\n            \"Message\": \"Storage node created 7a2415bd-9d45-478b-b8d3-3fe770a39d6d\",\n            \"NodeId\": \"\",\n            \"Status\": \"\",\n            \"Storage_ID\": \"None\",\n            \"VUID\": \"None\"\n        },\n        {\n            \"Date\": \"21:52:02, 23/11/2023\",\n            \"Event\": \"OBJ_CREATED\",\n            \"Message\": \"Storage node created ad3e6da0-2bb9-464e-b172-ba4dc6d59fad\",\n            \"NodeId\": \"\",\n            \"Status\": \"\",\n            \"Storage_ID\": \"None\",\n            \"VUID\": \"None\"\n        },\n        {\n            \"Date\": \"21:54:11, 23/11/2023\",\n            \"Event\": \"OBJ_CREATED\",\n            \"Message\": \"Storage node created da86a7e6-913e-452f-acee-9d3de08f2f23\",\n            \"NodeId\": \"\",\n            \"Status\": \"\",\n            \"Storage_ID\": \"None\",\n            \"VUID\": \"None\"\n        },\n        {\n            \"Date\": \"21:56:25, 23/11/2023\",\n            \"Event\": \"OBJ_CREATED\",\n            \"Message\": \"Storage node created dfab280f-dcbe-47c4-82de-5e7706bbc4b8\",\n            \"NodeId\": \"\",\n            \"Status\": \"\",\n            \"Storage_ID\": \"None\",\n            \"VUID\": \"None\"\n        },\n        {\n            \"Date\": \"21:58:26, 23/11/2023\",\n            \"Event\": \"OBJ_CREATED\",\n            \"Message\": \"Storage node created 40ba55f5-4d83-4996-aa59-3d43395e7398\",\n            \"NodeId\": \"\",\n            \"Status\": \"\",\n            \"Storage_ID\": \"None\",\n            \"VUID\": \"None\"\n        },\n        {\n            \"Date\": \"22:00:39, 23/11/2023\",\n            \"Event\": \"OBJ_CREATED\",\n            \"Message\": \"Storage node created 1450af0b-ae55-47e4-b434-19c3c9c3123e\",\n            \"NodeId\": \"\",\n            \"Status\": \"\",\n            \"Storage_ID\": \"None\",\n            \"VUID\": \"None\"\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "cluster capacity",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/cluster/capacity/{{CLUSTER_ID}}",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "cluster",
                                "capacity",
                                "{{CLUSTER_ID}}"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "cluster capacity",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/cluster/capacity/2d240a9a-eed0-476d-9175-289483f7e738",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "cluster",
                                        "capacity",
                                        "2d240a9a-eed0-476d-9175-289483f7e738"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:13:57 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "1641"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"Device Name\": \"nvme_1fn1\",\n            \"Node ID\": \"19a8b4e4-c376-4b5b-9624-ddebbf92de3f\",\n            \"Provisioned\": \"1.1 TB\",\n            \"Util\": \"818.0 MB\",\n            \"Util %\": \"0%\"\n        },\n        {\n            \"Device Name\": \"nvme_1fn1\",\n            \"Node ID\": \"27dc5122-6db2-427a-8cf3-e5b89262f767\",\n            \"Provisioned\": \"1.1 TB\",\n            \"Util\": \"824.0 MB\",\n            \"Util %\": \"0%\"\n        },\n        {\n            \"Device Name\": \"nvme_1fn1\",\n            \"Node ID\": \"127baa8f-fde3-4707-84cd-240672c0a9d4\",\n            \"Provisioned\": \"1.1 TB\",\n            \"Util\": \"778.0 MB\",\n            \"Util %\": \"0%\"\n        },\n        {\n            \"Device Name\": \"nvme_1fn1\",\n            \"Node ID\": \"83b134f4-879b-4fcc-b73d-b4df7347efb3\",\n            \"Provisioned\": \"1.1 TB\",\n            \"Util\": \"770.0 MB\",\n            \"Util %\": \"0%\"\n        },\n        {\n            \"Device Name\": \"nvme_1fn1\",\n            \"Node ID\": \"9e65d303-e7a1-4791-946f-0bb354c61a8a\",\n            \"Provisioned\": \"1.1 TB\",\n            \"Util\": \"830.0 MB\",\n            \"Util %\": \"0%\"\n        },\n        {\n            \"Device Name\": \"nvme_1fn1\",\n            \"Node ID\": \"e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\",\n            \"Provisioned\": \"1.1 TB\",\n            \"Util\": \"792.0 MB\",\n            \"Util %\": \"0%\"\n        },\n        {\n            \"Device Name\": \"nvme_1fn1\",\n            \"Node ID\": \"6467eb23-bcab-4efa-8c2a-abda7e036dff\",\n            \"Provisioned\": \"1.1 TB\",\n            \"Util\": \"822.0 MB\",\n            \"Util %\": \"0%\"\n        },\n        {\n            \"Device Name\": \"nvme_1fn1\",\n            \"Node ID\": \"4be977ee-b1e0-411b-aeac-2a7d66324295\",\n            \"Provisioned\": \"1.1 TB\",\n            \"Util\": \"766.0 MB\",\n            \"Util %\": \"0%\"\n        },\n        {\n            \"Device Name\": \"Total\",\n            \"Node ID\": \"Total\",\n            \"Provisioned\": \"9.1 TB\",\n            \"Util\": \"6.2 GB\",\n            \"Util %\": \"0%\"\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "cluster capacity history",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/cluster/capacity/{{CLUSTER_ID}}/history/1m",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "cluster",
                                "capacity",
                                "{{CLUSTER_ID}}",
                                "history",
                                "1m"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "cluster capacity",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/cluster/capacity/2d240a9a-eed0-476d-9175-289483f7e738",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "cluster",
                                        "capacity",
                                        "2d240a9a-eed0-476d-9175-289483f7e738"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:13:57 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "1641"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"Device Name\": \"nvme_1fn1\",\n            \"Node ID\": \"19a8b4e4-c376-4b5b-9624-ddebbf92de3f\",\n            \"Provisioned\": \"1.1 TB\",\n            \"Util\": \"818.0 MB\",\n            \"Util %\": \"0%\"\n        },\n        {\n            \"Device Name\": \"nvme_1fn1\",\n            \"Node ID\": \"27dc5122-6db2-427a-8cf3-e5b89262f767\",\n            \"Provisioned\": \"1.1 TB\",\n            \"Util\": \"824.0 MB\",\n            \"Util %\": \"0%\"\n        },\n        {\n            \"Device Name\": \"nvme_1fn1\",\n            \"Node ID\": \"127baa8f-fde3-4707-84cd-240672c0a9d4\",\n            \"Provisioned\": \"1.1 TB\",\n            \"Util\": \"778.0 MB\",\n            \"Util %\": \"0%\"\n        },\n        {\n            \"Device Name\": \"nvme_1fn1\",\n            \"Node ID\": \"83b134f4-879b-4fcc-b73d-b4df7347efb3\",\n            \"Provisioned\": \"1.1 TB\",\n            \"Util\": \"770.0 MB\",\n            \"Util %\": \"0%\"\n        },\n        {\n            \"Device Name\": \"nvme_1fn1\",\n            \"Node ID\": \"9e65d303-e7a1-4791-946f-0bb354c61a8a\",\n            \"Provisioned\": \"1.1 TB\",\n            \"Util\": \"830.0 MB\",\n            \"Util %\": \"0%\"\n        },\n        {\n            \"Device Name\": \"nvme_1fn1\",\n            \"Node ID\": \"e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\",\n            \"Provisioned\": \"1.1 TB\",\n            \"Util\": \"792.0 MB\",\n            \"Util %\": \"0%\"\n        },\n        {\n            \"Device Name\": \"nvme_1fn1\",\n            \"Node ID\": \"6467eb23-bcab-4efa-8c2a-abda7e036dff\",\n            \"Provisioned\": \"1.1 TB\",\n            \"Util\": \"822.0 MB\",\n            \"Util %\": \"0%\"\n        },\n        {\n            \"Device Name\": \"nvme_1fn1\",\n            \"Node ID\": \"4be977ee-b1e0-411b-aeac-2a7d66324295\",\n            \"Provisioned\": \"1.1 TB\",\n            \"Util\": \"766.0 MB\",\n            \"Util %\": \"0%\"\n        },\n        {\n            \"Device Name\": \"Total\",\n            \"Node ID\": \"Total\",\n            \"Provisioned\": \"9.1 TB\",\n            \"Util\": \"6.2 GB\",\n            \"Util %\": \"0%\"\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "cluster iostats",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/cluster/iostats/{{CLUSTER_ID}}",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "cluster",
                                "iostats",
                                "{{CLUSTER_ID}}"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "cluster iostats",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/cluster/iostats/2d240a9a-eed0-476d-9175-289483f7e738",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "cluster",
                                        "iostats",
                                        "2d240a9a-eed0-476d-9175-289483f7e738"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:14:28 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "2870"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"Node\": \"92856305-a295-4deb-bb17-f37413779c26\",\n            \"bytes_read (MB/s)\": 0,\n            \"bytes_unmapped (MB/s)\": 0,\n            \"bytes_write (MB/s)\": 8235008,\n            \"num_read_ops (IOPS)\": 0,\n            \"num_write_ops (IOPS)\": 8042,\n            \"read_latency_ticks\": 13781999746,\n            \"write_latency_ticks\": 123707255324620\n        },\n        {\n            \"Node\": \"f23bb38f-7386-4614-bc7f-d8a8fa1e9dbb\",\n            \"bytes_read (MB/s)\": 0,\n            \"bytes_unmapped (MB/s)\": 0,\n            \"bytes_write (MB/s)\": 8203264,\n            \"num_read_ops (IOPS)\": 0,\n            \"num_write_ops (IOPS)\": 8011,\n            \"read_latency_ticks\": 0,\n            \"write_latency_ticks\": 141687852296236\n        },\n        {\n            \"Node\": \"7a2415bd-9d45-478b-b8d3-3fe770a39d6d\",\n            \"bytes_read (MB/s)\": 0,\n            \"bytes_unmapped (MB/s)\": 0,\n            \"bytes_write (MB/s)\": 7699456,\n            \"num_read_ops (IOPS)\": 0,\n            \"num_write_ops (IOPS)\": 7519,\n            \"read_latency_ticks\": 16705808434,\n            \"write_latency_ticks\": 143113621034512\n        },\n        {\n            \"Node\": \"ad3e6da0-2bb9-464e-b172-ba4dc6d59fad\",\n            \"bytes_read (MB/s)\": 0,\n            \"bytes_unmapped (MB/s)\": 0,\n            \"bytes_write (MB/s)\": 7657472,\n            \"num_read_ops (IOPS)\": 0,\n            \"num_write_ops (IOPS)\": 7478,\n            \"read_latency_ticks\": 0,\n            \"write_latency_ticks\": 117198405416468\n        },\n        {\n            \"Node\": \"da86a7e6-913e-452f-acee-9d3de08f2f23\",\n            \"bytes_read (MB/s)\": 0,\n            \"bytes_unmapped (MB/s)\": 0,\n            \"bytes_write (MB/s)\": 8202752,\n            \"num_read_ops (IOPS)\": 0,\n            \"num_write_ops (IOPS)\": 8010,\n            \"read_latency_ticks\": 0,\n            \"write_latency_ticks\": 127757882713408\n        },\n        {\n            \"Node\": \"dfab280f-dcbe-47c4-82de-5e7706bbc4b8\",\n            \"bytes_read (MB/s)\": 0,\n            \"bytes_unmapped (MB/s)\": 0,\n            \"bytes_write (MB/s)\": 7883264,\n            \"num_read_ops (IOPS)\": 0,\n            \"num_write_ops (IOPS)\": 7698,\n            \"read_latency_ticks\": 0,\n            \"write_latency_ticks\": 388468169070826\n        },\n        {\n            \"Node\": \"40ba55f5-4d83-4996-aa59-3d43395e7398\",\n            \"bytes_read (MB/s)\": 0,\n            \"bytes_unmapped (MB/s)\": 0,\n            \"bytes_write (MB/s)\": 8254976,\n            \"num_read_ops (IOPS)\": 0,\n            \"num_write_ops (IOPS)\": 8061,\n            \"read_latency_ticks\": 15637110234,\n            \"write_latency_ticks\": 154054017158696\n        },\n        {\n            \"Node\": \"1450af0b-ae55-47e4-b434-19c3c9c3123e\",\n            \"bytes_read (MB/s)\": 0,\n            \"bytes_unmapped (MB/s)\": 0,\n            \"bytes_write (MB/s)\": 7561728,\n            \"num_read_ops (IOPS)\": 0,\n            \"num_write_ops (IOPS)\": 7384,\n            \"read_latency_ticks\": 12345152184,\n            \"write_latency_ticks\": 113295751028476\n        },\n        {\n            \"Node\": \"Total\",\n            \"bytes_read (MB/s)\": 0,\n            \"bytes_unmapped (MB/s)\": 0,\n            \"bytes_write (MB/s)\": 63697920,\n            \"num_read_ops (IOPS)\": 0,\n            \"num_write_ops (IOPS)\": 62203,\n            \"read_latency_ticks\": 58470070598,\n            \"write_latency_ticks\": 1309282954043242\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "cluster iostats  history",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/cluster/iostats/{{CLUSTER_ID}}/history/1m",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "cluster",
                                "iostats",
                                "{{CLUSTER_ID}}",
                                "history",
                                "1m"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "cluster iostats",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/cluster/iostats/2d240a9a-eed0-476d-9175-289483f7e738",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "cluster",
                                        "iostats",
                                        "2d240a9a-eed0-476d-9175-289483f7e738"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:14:28 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "2870"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"Node\": \"92856305-a295-4deb-bb17-f37413779c26\",\n            \"bytes_read (MB/s)\": 0,\n            \"bytes_unmapped (MB/s)\": 0,\n            \"bytes_write (MB/s)\": 8235008,\n            \"num_read_ops (IOPS)\": 0,\n            \"num_write_ops (IOPS)\": 8042,\n            \"read_latency_ticks\": 13781999746,\n            \"write_latency_ticks\": 123707255324620\n        },\n        {\n            \"Node\": \"f23bb38f-7386-4614-bc7f-d8a8fa1e9dbb\",\n            \"bytes_read (MB/s)\": 0,\n            \"bytes_unmapped (MB/s)\": 0,\n            \"bytes_write (MB/s)\": 8203264,\n            \"num_read_ops (IOPS)\": 0,\n            \"num_write_ops (IOPS)\": 8011,\n            \"read_latency_ticks\": 0,\n            \"write_latency_ticks\": 141687852296236\n        },\n        {\n            \"Node\": \"7a2415bd-9d45-478b-b8d3-3fe770a39d6d\",\n            \"bytes_read (MB/s)\": 0,\n            \"bytes_unmapped (MB/s)\": 0,\n            \"bytes_write (MB/s)\": 7699456,\n            \"num_read_ops (IOPS)\": 0,\n            \"num_write_ops (IOPS)\": 7519,\n            \"read_latency_ticks\": 16705808434,\n            \"write_latency_ticks\": 143113621034512\n        },\n        {\n            \"Node\": \"ad3e6da0-2bb9-464e-b172-ba4dc6d59fad\",\n            \"bytes_read (MB/s)\": 0,\n            \"bytes_unmapped (MB/s)\": 0,\n            \"bytes_write (MB/s)\": 7657472,\n            \"num_read_ops (IOPS)\": 0,\n            \"num_write_ops (IOPS)\": 7478,\n            \"read_latency_ticks\": 0,\n            \"write_latency_ticks\": 117198405416468\n        },\n        {\n            \"Node\": \"da86a7e6-913e-452f-acee-9d3de08f2f23\",\n            \"bytes_read (MB/s)\": 0,\n            \"bytes_unmapped (MB/s)\": 0,\n            \"bytes_write (MB/s)\": 8202752,\n            \"num_read_ops (IOPS)\": 0,\n            \"num_write_ops (IOPS)\": 8010,\n            \"read_latency_ticks\": 0,\n            \"write_latency_ticks\": 127757882713408\n        },\n        {\n            \"Node\": \"dfab280f-dcbe-47c4-82de-5e7706bbc4b8\",\n            \"bytes_read (MB/s)\": 0,\n            \"bytes_unmapped (MB/s)\": 0,\n            \"bytes_write (MB/s)\": 7883264,\n            \"num_read_ops (IOPS)\": 0,\n            \"num_write_ops (IOPS)\": 7698,\n            \"read_latency_ticks\": 0,\n            \"write_latency_ticks\": 388468169070826\n        },\n        {\n            \"Node\": \"40ba55f5-4d83-4996-aa59-3d43395e7398\",\n            \"bytes_read (MB/s)\": 0,\n            \"bytes_unmapped (MB/s)\": 0,\n            \"bytes_write (MB/s)\": 8254976,\n            \"num_read_ops (IOPS)\": 0,\n            \"num_write_ops (IOPS)\": 8061,\n            \"read_latency_ticks\": 15637110234,\n            \"write_latency_ticks\": 154054017158696\n        },\n        {\n            \"Node\": \"1450af0b-ae55-47e4-b434-19c3c9c3123e\",\n            \"bytes_read (MB/s)\": 0,\n            \"bytes_unmapped (MB/s)\": 0,\n            \"bytes_write (MB/s)\": 7561728,\n            \"num_read_ops (IOPS)\": 0,\n            \"num_write_ops (IOPS)\": 7384,\n            \"read_latency_ticks\": 12345152184,\n            \"write_latency_ticks\": 113295751028476\n        },\n        {\n            \"Node\": \"Total\",\n            \"bytes_read (MB/s)\": 0,\n            \"bytes_unmapped (MB/s)\": 0,\n            \"bytes_write (MB/s)\": 63697920,\n            \"num_read_ops (IOPS)\": 0,\n            \"num_write_ops (IOPS)\": 62203,\n            \"read_latency_ticks\": 58470070598,\n            \"write_latency_ticks\": 1309282954043242\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                }
            ]
        },
        {
            "name": "Storage node",
            "item": [
                {
                    "name": "storage node list",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/storagenode/",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "storagenode",
                                ""
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "storage node list",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/storagenode/",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "storagenode",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:14:47 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "90416"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"api_endpoint\": \"172.30.33.64:5000\",\n            \"baseboard_sn\": \"ec27a01d-395a-90bc-066a-5ccbe76e6a1d\",\n            \"cluster_id\": \"2d240a9a-eed0-476d-9175-289483f7e738\",\n            \"create_dt\": \"2023-11-23 21:44:06.685484\",\n            \"ctrl_secret\": \"Ibv5P3M1oW3PBYNAe3qR\",\n            \"data_nics\": [\n                {\n                    \"deleted\": false,\n                    \"id\": \"f5c62499-8c85-4408-84f7-63cd65f4845c\",\n                    \"if_name\": \"eth0\",\n                    \"ip4_address\": \"172.30.33.64\",\n                    \"name\": \"IFace\",\n                    \"net_type\": \"ether\",\n                    \"object_type\": \"object\",\n                    \"port_number\": -1,\n                    \"status\": \"UP\",\n                    \"uuid\": \"f5c62499-8c85-4408-84f7-63cd65f4845c\"\n                }\n            ],\n            \"deleted\": false,\n            \"host_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-33-64\",\n            \"host_secret\": \"DaJO4PR8qmca498YRAER\",\n            \"hostname\": \"ip-172-30-33-64\",\n            \"ib_devices\": [],\n            \"id\": \"92856305-a295-4deb-bb17-f37413779c26\",\n            \"lvols\": [],\n            \"mgmt_ip\": \"172.30.33.64\",\n            \"name\": \"StorageNode\",\n            \"node_lvs\": \"lvs\",\n            \"nvme_devices\": [\n                {\n                    \"alceml_bdev\": \"node_f37413779c26_dev_ddebbf92de3f\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 0,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"19a8b4e4-c376-4b5b-9624-ddebbf92de3f\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"92856305-a295-4deb-bb17-f37413779c26\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.33.64\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-33-64:dev:19a8b4e4-c376-4b5b-9624-ddebbf92de3f\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_f37413779c26_dev_ddebbf92de3f_PT\",\n                    \"remote_bdev\": \"\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS146DEE55A13505C8B\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"19a8b4e4-c376-4b5b-9624-ddebbf92de3f\"\n                }\n            ],\n            \"object_type\": \"object\",\n            \"partitions_count\": 0,\n            \"remote_devices\": [\n                {\n                    \"alceml_bdev\": \"node_d8a8fa1e9dbb_dev_e5b89262f767\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 1,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"27dc5122-6db2-427a-8cf3-e5b89262f767\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"f23bb38f-7386-4614-bc7f-d8a8fa1e9dbb\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.152.207\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-152-207:dev:27dc5122-6db2-427a-8cf3-e5b89262f767\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_d8a8fa1e9dbb_dev_e5b89262f767_PT\",\n                    \"remote_bdev\": \"remote_node_d8a8fa1e9dbb_dev_e5b89262f767n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS49513CDACE54DD8A2\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"27dc5122-6db2-427a-8cf3-e5b89262f767\"\n                },\n                {\n                    \"alceml_bdev\": \"node_3fe770a39d6d_dev_240672c0a9d4\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 2,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"127baa8f-fde3-4707-84cd-240672c0a9d4\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"7a2415bd-9d45-478b-b8d3-3fe770a39d6d\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.100.75\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-100-75:dev:127baa8f-fde3-4707-84cd-240672c0a9d4\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_3fe770a39d6d_dev_240672c0a9d4_PT\",\n                    \"remote_bdev\": \"remote_node_3fe770a39d6d_dev_240672c0a9d4n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS2515B96D35D7DB270\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"127baa8f-fde3-4707-84cd-240672c0a9d4\"\n                },\n                {\n                    \"alceml_bdev\": \"node_ba4dc6d59fad_dev_b4df7347efb3\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 3,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"83b134f4-879b-4fcc-b73d-b4df7347efb3\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"ad3e6da0-2bb9-464e-b172-ba4dc6d59fad\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.164.21\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-164-21:dev:83b134f4-879b-4fcc-b73d-b4df7347efb3\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_ba4dc6d59fad_dev_b4df7347efb3_PT\",\n                    \"remote_bdev\": \"remote_node_ba4dc6d59fad_dev_b4df7347efb3n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS3104FAD9F87B096C8\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"83b134f4-879b-4fcc-b73d-b4df7347efb3\"\n                },\n                {\n                    \"alceml_bdev\": \"node_9d3de08f2f23_dev_0bb354c61a8a\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 4,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"9e65d303-e7a1-4791-946f-0bb354c61a8a\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"da86a7e6-913e-452f-acee-9d3de08f2f23\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.231.190\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-231-190:dev:9e65d303-e7a1-4791-946f-0bb354c61a8a\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_9d3de08f2f23_dev_0bb354c61a8a_PT\",\n                    \"remote_bdev\": \"remote_node_9d3de08f2f23_dev_0bb354c61a8an1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS450D1FE4D3408026E\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"9e65d303-e7a1-4791-946f-0bb354c61a8a\"\n                },\n                {\n                    \"alceml_bdev\": \"node_5e7706bbc4b8_dev_9384fc8b7c91\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 5,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"dfab280f-dcbe-47c4-82de-5e7706bbc4b8\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.112.96\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-112-96:dev:e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_5e7706bbc4b8_dev_9384fc8b7c91_PT\",\n                    \"remote_bdev\": \"remote_node_5e7706bbc4b8_dev_9384fc8b7c91n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS1B5682FAC516D6A45\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\"\n                },\n                {\n                    \"alceml_bdev\": \"node_3d43395e7398_dev_abda7e036dff\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 6,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"6467eb23-bcab-4efa-8c2a-abda7e036dff\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"40ba55f5-4d83-4996-aa59-3d43395e7398\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.201.126\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-201-126:dev:6467eb23-bcab-4efa-8c2a-abda7e036dff\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_3d43395e7398_dev_abda7e036dff_PT\",\n                    \"remote_bdev\": \"remote_node_3d43395e7398_dev_abda7e036dffn1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS1E22E52D9A7C66323\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"6467eb23-bcab-4efa-8c2a-abda7e036dff\"\n                },\n                {\n                    \"alceml_bdev\": \"node_19c3c9c3123e_dev_2a7d66324295\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 7,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"4be977ee-b1e0-411b-aeac-2a7d66324295\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"1450af0b-ae55-47e4-b434-19c3c9c3123e\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.252.216\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-252-216:dev:4be977ee-b1e0-411b-aeac-2a7d66324295\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_19c3c9c3123e_dev_2a7d66324295_PT\",\n                    \"remote_bdev\": \"remote_node_19c3c9c3123e_dev_2a7d66324295n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS1ECEC833656E3B404\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"4be977ee-b1e0-411b-aeac-2a7d66324295\"\n                }\n            ],\n            \"remove_dt\": \"2023-11-23 21:44:06.685486\",\n            \"rpc_password\": \"auMwjHPpc9k6YEZt\",\n            \"rpc_port\": 8080,\n            \"rpc_username\": \"d6vT5wCu\",\n            \"sequential_number\": 0,\n            \"services\": [],\n            \"status\": \"online\",\n            \"subsystem\": \"nqn.2023-02.io.simplyblock:ip-172-30-33-64\",\n            \"system_uuid\": \"ec27a01d-395a-90bc-066a-5ccbe76e6a1d\",\n            \"updated_at\": \"2023-11-23 21:44:06.685474\",\n            \"uuid\": \"92856305-a295-4deb-bb17-f37413779c26\"\n        },\n        {\n            \"api_endpoint\": \"172.30.152.207:5000\",\n            \"baseboard_sn\": \"ec2ca2ea-206f-9104-969d-d395f32b34ea\",\n            \"cluster_id\": \"2d240a9a-eed0-476d-9175-289483f7e738\",\n            \"create_dt\": \"2023-11-23 21:46:12.301196\",\n            \"ctrl_secret\": \"S5JXUakv1QgO22UFhWAh\",\n            \"data_nics\": [\n                {\n                    \"deleted\": false,\n                    \"id\": \"7cd26b3e-6f47-49ed-9520-cef03b265db9\",\n                    \"if_name\": \"eth0\",\n                    \"ip4_address\": \"172.30.152.207\",\n                    \"name\": \"IFace\",\n                    \"net_type\": \"ether\",\n                    \"object_type\": \"object\",\n                    \"port_number\": -1,\n                    \"status\": \"UP\",\n                    \"uuid\": \"7cd26b3e-6f47-49ed-9520-cef03b265db9\"\n                }\n            ],\n            \"deleted\": false,\n            \"host_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-152-207\",\n            \"host_secret\": \"Yo71pIc5vtoWOy10SAyp\",\n            \"hostname\": \"ip-172-30-152-207\",\n            \"ib_devices\": [],\n            \"id\": \"f23bb38f-7386-4614-bc7f-d8a8fa1e9dbb\",\n            \"lvols\": [],\n            \"mgmt_ip\": \"172.30.152.207\",\n            \"name\": \"StorageNode\",\n            \"node_lvs\": \"lvs\",\n            \"nvme_devices\": [\n                {\n                    \"alceml_bdev\": \"node_d8a8fa1e9dbb_dev_e5b89262f767\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 1,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"27dc5122-6db2-427a-8cf3-e5b89262f767\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"f23bb38f-7386-4614-bc7f-d8a8fa1e9dbb\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.152.207\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-152-207:dev:27dc5122-6db2-427a-8cf3-e5b89262f767\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_d8a8fa1e9dbb_dev_e5b89262f767_PT\",\n                    \"remote_bdev\": \"\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS49513CDACE54DD8A2\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"27dc5122-6db2-427a-8cf3-e5b89262f767\"\n                }\n            ],\n            \"object_type\": \"object\",\n            \"partitions_count\": 0,\n            \"remote_devices\": [\n                {\n                    \"alceml_bdev\": \"node_f37413779c26_dev_ddebbf92de3f\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 0,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"19a8b4e4-c376-4b5b-9624-ddebbf92de3f\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"92856305-a295-4deb-bb17-f37413779c26\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.33.64\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-33-64:dev:19a8b4e4-c376-4b5b-9624-ddebbf92de3f\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_f37413779c26_dev_ddebbf92de3f_PT\",\n                    \"remote_bdev\": \"remote_node_f37413779c26_dev_ddebbf92de3fn1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS146DEE55A13505C8B\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"19a8b4e4-c376-4b5b-9624-ddebbf92de3f\"\n                },\n                {\n                    \"alceml_bdev\": \"node_3fe770a39d6d_dev_240672c0a9d4\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 2,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"127baa8f-fde3-4707-84cd-240672c0a9d4\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"7a2415bd-9d45-478b-b8d3-3fe770a39d6d\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.100.75\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-100-75:dev:127baa8f-fde3-4707-84cd-240672c0a9d4\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_3fe770a39d6d_dev_240672c0a9d4_PT\",\n                    \"remote_bdev\": \"remote_node_3fe770a39d6d_dev_240672c0a9d4n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS2515B96D35D7DB270\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"127baa8f-fde3-4707-84cd-240672c0a9d4\"\n                },\n                {\n                    \"alceml_bdev\": \"node_ba4dc6d59fad_dev_b4df7347efb3\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 3,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"83b134f4-879b-4fcc-b73d-b4df7347efb3\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"ad3e6da0-2bb9-464e-b172-ba4dc6d59fad\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.164.21\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-164-21:dev:83b134f4-879b-4fcc-b73d-b4df7347efb3\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_ba4dc6d59fad_dev_b4df7347efb3_PT\",\n                    \"remote_bdev\": \"remote_node_ba4dc6d59fad_dev_b4df7347efb3n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS3104FAD9F87B096C8\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"83b134f4-879b-4fcc-b73d-b4df7347efb3\"\n                },\n                {\n                    \"alceml_bdev\": \"node_9d3de08f2f23_dev_0bb354c61a8a\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 4,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"9e65d303-e7a1-4791-946f-0bb354c61a8a\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"da86a7e6-913e-452f-acee-9d3de08f2f23\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.231.190\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-231-190:dev:9e65d303-e7a1-4791-946f-0bb354c61a8a\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_9d3de08f2f23_dev_0bb354c61a8a_PT\",\n                    \"remote_bdev\": \"remote_node_9d3de08f2f23_dev_0bb354c61a8an1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS450D1FE4D3408026E\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"9e65d303-e7a1-4791-946f-0bb354c61a8a\"\n                },\n                {\n                    \"alceml_bdev\": \"node_5e7706bbc4b8_dev_9384fc8b7c91\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 5,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"dfab280f-dcbe-47c4-82de-5e7706bbc4b8\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.112.96\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-112-96:dev:e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_5e7706bbc4b8_dev_9384fc8b7c91_PT\",\n                    \"remote_bdev\": \"remote_node_5e7706bbc4b8_dev_9384fc8b7c91n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS1B5682FAC516D6A45\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\"\n                },\n                {\n                    \"alceml_bdev\": \"node_3d43395e7398_dev_abda7e036dff\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 6,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"6467eb23-bcab-4efa-8c2a-abda7e036dff\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"40ba55f5-4d83-4996-aa59-3d43395e7398\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.201.126\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-201-126:dev:6467eb23-bcab-4efa-8c2a-abda7e036dff\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_3d43395e7398_dev_abda7e036dff_PT\",\n                    \"remote_bdev\": \"remote_node_3d43395e7398_dev_abda7e036dffn1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS1E22E52D9A7C66323\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"6467eb23-bcab-4efa-8c2a-abda7e036dff\"\n                },\n                {\n                    \"alceml_bdev\": \"node_19c3c9c3123e_dev_2a7d66324295\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 7,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"4be977ee-b1e0-411b-aeac-2a7d66324295\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"1450af0b-ae55-47e4-b434-19c3c9c3123e\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.252.216\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-252-216:dev:4be977ee-b1e0-411b-aeac-2a7d66324295\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_19c3c9c3123e_dev_2a7d66324295_PT\",\n                    \"remote_bdev\": \"remote_node_19c3c9c3123e_dev_2a7d66324295n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS1ECEC833656E3B404\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"4be977ee-b1e0-411b-aeac-2a7d66324295\"\n                }\n            ],\n            \"remove_dt\": \"2023-11-23 21:46:12.301198\",\n            \"rpc_password\": \"lfC3Vy9lPdSsPnpp\",\n            \"rpc_port\": 8080,\n            \"rpc_username\": \"Z2h6ki1o\",\n            \"sequential_number\": 0,\n            \"services\": [],\n            \"status\": \"online\",\n            \"subsystem\": \"nqn.2023-02.io.simplyblock:ip-172-30-152-207\",\n            \"system_uuid\": \"ec2ca2ea-206f-9104-969d-d395f32b34ea\",\n            \"updated_at\": \"2023-11-23 21:46:12.301186\",\n            \"uuid\": \"f23bb38f-7386-4614-bc7f-d8a8fa1e9dbb\"\n        },\n        {\n            \"api_endpoint\": \"172.30.100.75:5000\",\n            \"baseboard_sn\": \"ec2d51f1-e705-c3e2-2713-2eae30412c91\",\n            \"cluster_id\": \"2d240a9a-eed0-476d-9175-289483f7e738\",\n            \"create_dt\": \"2023-11-23 21:48:17.899310\",\n            \"ctrl_secret\": \"nLaazM1fcjT4we8Y7D6A\",\n            \"data_nics\": [\n                {\n                    \"deleted\": false,\n                    \"id\": \"5fd676b8-e3d2-448c-aafd-9c1ec71f33ce\",\n                    \"if_name\": \"eth0\",\n                    \"ip4_address\": \"172.30.100.75\",\n                    \"name\": \"IFace\",\n                    \"net_type\": \"ether\",\n                    \"object_type\": \"object\",\n                    \"port_number\": -1,\n                    \"status\": \"UP\",\n                    \"uuid\": \"5fd676b8-e3d2-448c-aafd-9c1ec71f33ce\"\n                }\n            ],\n            \"deleted\": false,\n            \"host_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-100-75\",\n            \"host_secret\": \"28zgxLi9qFe8CHxq3VNM\",\n            \"hostname\": \"ip-172-30-100-75\",\n            \"ib_devices\": [],\n            \"id\": \"7a2415bd-9d45-478b-b8d3-3fe770a39d6d\",\n            \"lvols\": [],\n            \"mgmt_ip\": \"172.30.100.75\",\n            \"name\": \"StorageNode\",\n            \"node_lvs\": \"lvs\",\n            \"nvme_devices\": [\n                {\n                    \"alceml_bdev\": \"node_3fe770a39d6d_dev_240672c0a9d4\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 2,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"127baa8f-fde3-4707-84cd-240672c0a9d4\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"7a2415bd-9d45-478b-b8d3-3fe770a39d6d\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.100.75\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-100-75:dev:127baa8f-fde3-4707-84cd-240672c0a9d4\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_3fe770a39d6d_dev_240672c0a9d4_PT\",\n                    \"remote_bdev\": \"\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS2515B96D35D7DB270\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"127baa8f-fde3-4707-84cd-240672c0a9d4\"\n                }\n            ],\n            \"object_type\": \"object\",\n            \"partitions_count\": 0,\n            \"remote_devices\": [\n                {\n                    \"alceml_bdev\": \"node_f37413779c26_dev_ddebbf92de3f\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 0,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"19a8b4e4-c376-4b5b-9624-ddebbf92de3f\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"92856305-a295-4deb-bb17-f37413779c26\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.33.64\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-33-64:dev:19a8b4e4-c376-4b5b-9624-ddebbf92de3f\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_f37413779c26_dev_ddebbf92de3f_PT\",\n                    \"remote_bdev\": \"remote_node_f37413779c26_dev_ddebbf92de3fn1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS146DEE55A13505C8B\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"19a8b4e4-c376-4b5b-9624-ddebbf92de3f\"\n                },\n                {\n                    \"alceml_bdev\": \"node_d8a8fa1e9dbb_dev_e5b89262f767\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 1,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"27dc5122-6db2-427a-8cf3-e5b89262f767\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"f23bb38f-7386-4614-bc7f-d8a8fa1e9dbb\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.152.207\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-152-207:dev:27dc5122-6db2-427a-8cf3-e5b89262f767\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_d8a8fa1e9dbb_dev_e5b89262f767_PT\",\n                    \"remote_bdev\": \"remote_node_d8a8fa1e9dbb_dev_e5b89262f767n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS49513CDACE54DD8A2\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"27dc5122-6db2-427a-8cf3-e5b89262f767\"\n                },\n                {\n                    \"alceml_bdev\": \"node_ba4dc6d59fad_dev_b4df7347efb3\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 3,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"83b134f4-879b-4fcc-b73d-b4df7347efb3\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"ad3e6da0-2bb9-464e-b172-ba4dc6d59fad\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.164.21\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-164-21:dev:83b134f4-879b-4fcc-b73d-b4df7347efb3\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_ba4dc6d59fad_dev_b4df7347efb3_PT\",\n                    \"remote_bdev\": \"remote_node_ba4dc6d59fad_dev_b4df7347efb3n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS3104FAD9F87B096C8\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"83b134f4-879b-4fcc-b73d-b4df7347efb3\"\n                },\n                {\n                    \"alceml_bdev\": \"node_9d3de08f2f23_dev_0bb354c61a8a\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 4,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"9e65d303-e7a1-4791-946f-0bb354c61a8a\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"da86a7e6-913e-452f-acee-9d3de08f2f23\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.231.190\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-231-190:dev:9e65d303-e7a1-4791-946f-0bb354c61a8a\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_9d3de08f2f23_dev_0bb354c61a8a_PT\",\n                    \"remote_bdev\": \"remote_node_9d3de08f2f23_dev_0bb354c61a8an1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS450D1FE4D3408026E\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"9e65d303-e7a1-4791-946f-0bb354c61a8a\"\n                },\n                {\n                    \"alceml_bdev\": \"node_5e7706bbc4b8_dev_9384fc8b7c91\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 5,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"dfab280f-dcbe-47c4-82de-5e7706bbc4b8\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.112.96\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-112-96:dev:e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_5e7706bbc4b8_dev_9384fc8b7c91_PT\",\n                    \"remote_bdev\": \"remote_node_5e7706bbc4b8_dev_9384fc8b7c91n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS1B5682FAC516D6A45\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\"\n                },\n                {\n                    \"alceml_bdev\": \"node_3d43395e7398_dev_abda7e036dff\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 6,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"6467eb23-bcab-4efa-8c2a-abda7e036dff\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"40ba55f5-4d83-4996-aa59-3d43395e7398\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.201.126\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-201-126:dev:6467eb23-bcab-4efa-8c2a-abda7e036dff\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_3d43395e7398_dev_abda7e036dff_PT\",\n                    \"remote_bdev\": \"remote_node_3d43395e7398_dev_abda7e036dffn1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS1E22E52D9A7C66323\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"6467eb23-bcab-4efa-8c2a-abda7e036dff\"\n                },\n                {\n                    \"alceml_bdev\": \"node_19c3c9c3123e_dev_2a7d66324295\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 7,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"4be977ee-b1e0-411b-aeac-2a7d66324295\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"1450af0b-ae55-47e4-b434-19c3c9c3123e\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.252.216\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-252-216:dev:4be977ee-b1e0-411b-aeac-2a7d66324295\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_19c3c9c3123e_dev_2a7d66324295_PT\",\n                    \"remote_bdev\": \"remote_node_19c3c9c3123e_dev_2a7d66324295n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS1ECEC833656E3B404\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"4be977ee-b1e0-411b-aeac-2a7d66324295\"\n                }\n            ],\n            \"remove_dt\": \"2023-11-23 21:48:17.899311\",\n            \"rpc_password\": \"neZYzqzRMO6PsANZ\",\n            \"rpc_port\": 8080,\n            \"rpc_username\": \"xoRC4QMN\",\n            \"sequential_number\": 0,\n            \"services\": [],\n            \"status\": \"online\",\n            \"subsystem\": \"nqn.2023-02.io.simplyblock:ip-172-30-100-75\",\n            \"system_uuid\": \"ec2d51f1-e705-c3e2-2713-2eae30412c91\",\n            \"updated_at\": \"2023-11-23 21:48:17.899301\",\n            \"uuid\": \"7a2415bd-9d45-478b-b8d3-3fe770a39d6d\"\n        },\n        {\n            \"api_endpoint\": \"172.30.164.21:5000\",\n            \"baseboard_sn\": \"ec21a5d3-ae0f-df38-4c34-4c0fc0cb83bb\",\n            \"cluster_id\": \"2d240a9a-eed0-476d-9175-289483f7e738\",\n            \"create_dt\": \"2023-11-23 21:50:23.490994\",\n            \"ctrl_secret\": \"GbVgYQJidnzsQFVaKrLB\",\n            \"data_nics\": [\n                {\n                    \"deleted\": false,\n                    \"id\": \"52887748-fe29-4750-b9d8-44a03be56d90\",\n                    \"if_name\": \"eth0\",\n                    \"ip4_address\": \"172.30.164.21\",\n                    \"name\": \"IFace\",\n                    \"net_type\": \"ether\",\n                    \"object_type\": \"object\",\n                    \"port_number\": -1,\n                    \"status\": \"UP\",\n                    \"uuid\": \"52887748-fe29-4750-b9d8-44a03be56d90\"\n                }\n            ],\n            \"deleted\": false,\n            \"host_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-164-21\",\n            \"host_secret\": \"qVWhk30MsnEhorIJidOm\",\n            \"hostname\": \"ip-172-30-164-21\",\n            \"ib_devices\": [],\n            \"id\": \"ad3e6da0-2bb9-464e-b172-ba4dc6d59fad\",\n            \"lvols\": [],\n            \"mgmt_ip\": \"172.30.164.21\",\n            \"name\": \"StorageNode\",\n            \"node_lvs\": \"lvs\",\n            \"nvme_devices\": [\n                {\n                    \"alceml_bdev\": \"node_ba4dc6d59fad_dev_b4df7347efb3\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 3,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"83b134f4-879b-4fcc-b73d-b4df7347efb3\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"ad3e6da0-2bb9-464e-b172-ba4dc6d59fad\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.164.21\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-164-21:dev:83b134f4-879b-4fcc-b73d-b4df7347efb3\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_ba4dc6d59fad_dev_b4df7347efb3_PT\",\n                    \"remote_bdev\": \"\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS3104FAD9F87B096C8\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"83b134f4-879b-4fcc-b73d-b4df7347efb3\"\n                }\n            ],\n            \"object_type\": \"object\",\n            \"partitions_count\": 0,\n            \"remote_devices\": [\n                {\n                    \"alceml_bdev\": \"node_f37413779c26_dev_ddebbf92de3f\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 0,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"19a8b4e4-c376-4b5b-9624-ddebbf92de3f\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"92856305-a295-4deb-bb17-f37413779c26\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.33.64\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-33-64:dev:19a8b4e4-c376-4b5b-9624-ddebbf92de3f\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_f37413779c26_dev_ddebbf92de3f_PT\",\n                    \"remote_bdev\": \"remote_node_f37413779c26_dev_ddebbf92de3fn1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS146DEE55A13505C8B\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"19a8b4e4-c376-4b5b-9624-ddebbf92de3f\"\n                },\n                {\n                    \"alceml_bdev\": \"node_d8a8fa1e9dbb_dev_e5b89262f767\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 1,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"27dc5122-6db2-427a-8cf3-e5b89262f767\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"f23bb38f-7386-4614-bc7f-d8a8fa1e9dbb\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.152.207\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-152-207:dev:27dc5122-6db2-427a-8cf3-e5b89262f767\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_d8a8fa1e9dbb_dev_e5b89262f767_PT\",\n                    \"remote_bdev\": \"remote_node_d8a8fa1e9dbb_dev_e5b89262f767n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS49513CDACE54DD8A2\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"27dc5122-6db2-427a-8cf3-e5b89262f767\"\n                },\n                {\n                    \"alceml_bdev\": \"node_3fe770a39d6d_dev_240672c0a9d4\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 2,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"127baa8f-fde3-4707-84cd-240672c0a9d4\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"7a2415bd-9d45-478b-b8d3-3fe770a39d6d\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.100.75\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-100-75:dev:127baa8f-fde3-4707-84cd-240672c0a9d4\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_3fe770a39d6d_dev_240672c0a9d4_PT\",\n                    \"remote_bdev\": \"remote_node_3fe770a39d6d_dev_240672c0a9d4n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS2515B96D35D7DB270\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"127baa8f-fde3-4707-84cd-240672c0a9d4\"\n                },\n                {\n                    \"alceml_bdev\": \"node_9d3de08f2f23_dev_0bb354c61a8a\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 4,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"9e65d303-e7a1-4791-946f-0bb354c61a8a\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"da86a7e6-913e-452f-acee-9d3de08f2f23\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.231.190\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-231-190:dev:9e65d303-e7a1-4791-946f-0bb354c61a8a\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_9d3de08f2f23_dev_0bb354c61a8a_PT\",\n                    \"remote_bdev\": \"remote_node_9d3de08f2f23_dev_0bb354c61a8an1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS450D1FE4D3408026E\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"9e65d303-e7a1-4791-946f-0bb354c61a8a\"\n                },\n                {\n                    \"alceml_bdev\": \"node_5e7706bbc4b8_dev_9384fc8b7c91\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 5,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"dfab280f-dcbe-47c4-82de-5e7706bbc4b8\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.112.96\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-112-96:dev:e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_5e7706bbc4b8_dev_9384fc8b7c91_PT\",\n                    \"remote_bdev\": \"remote_node_5e7706bbc4b8_dev_9384fc8b7c91n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS1B5682FAC516D6A45\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\"\n                },\n                {\n                    \"alceml_bdev\": \"node_3d43395e7398_dev_abda7e036dff\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 6,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"6467eb23-bcab-4efa-8c2a-abda7e036dff\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"40ba55f5-4d83-4996-aa59-3d43395e7398\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.201.126\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-201-126:dev:6467eb23-bcab-4efa-8c2a-abda7e036dff\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_3d43395e7398_dev_abda7e036dff_PT\",\n                    \"remote_bdev\": \"remote_node_3d43395e7398_dev_abda7e036dffn1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS1E22E52D9A7C66323\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"6467eb23-bcab-4efa-8c2a-abda7e036dff\"\n                },\n                {\n                    \"alceml_bdev\": \"node_19c3c9c3123e_dev_2a7d66324295\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 7,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"4be977ee-b1e0-411b-aeac-2a7d66324295\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"1450af0b-ae55-47e4-b434-19c3c9c3123e\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.252.216\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-252-216:dev:4be977ee-b1e0-411b-aeac-2a7d66324295\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_19c3c9c3123e_dev_2a7d66324295_PT\",\n                    \"remote_bdev\": \"remote_node_19c3c9c3123e_dev_2a7d66324295n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS1ECEC833656E3B404\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"4be977ee-b1e0-411b-aeac-2a7d66324295\"\n                }\n            ],\n            \"remove_dt\": \"2023-11-23 21:50:23.490996\",\n            \"rpc_password\": \"OGbI4LjUpG9HhkVg\",\n            \"rpc_port\": 8080,\n            \"rpc_username\": \"g6aRYSng\",\n            \"sequential_number\": 0,\n            \"services\": [],\n            \"status\": \"online\",\n            \"subsystem\": \"nqn.2023-02.io.simplyblock:ip-172-30-164-21\",\n            \"system_uuid\": \"ec21a5d3-ae0f-df38-4c34-4c0fc0cb83bb\",\n            \"updated_at\": \"2023-11-23 21:50:23.490984\",\n            \"uuid\": \"ad3e6da0-2bb9-464e-b172-ba4dc6d59fad\"\n        },\n        {\n            \"api_endpoint\": \"172.30.231.190:5000\",\n            \"baseboard_sn\": \"ec200980-7395-c027-9148-069ddfbe7cd9\",\n            \"cluster_id\": \"2d240a9a-eed0-476d-9175-289483f7e738\",\n            \"create_dt\": \"2023-11-23 21:52:29.150284\",\n            \"ctrl_secret\": \"0esJJwQKTow9e0Idej4p\",\n            \"data_nics\": [\n                {\n                    \"deleted\": false,\n                    \"id\": \"eab8e25b-e468-4aee-8501-46c70833dca0\",\n                    \"if_name\": \"eth0\",\n                    \"ip4_address\": \"172.30.231.190\",\n                    \"name\": \"IFace\",\n                    \"net_type\": \"ether\",\n                    \"object_type\": \"object\",\n                    \"port_number\": -1,\n                    \"status\": \"UP\",\n                    \"uuid\": \"eab8e25b-e468-4aee-8501-46c70833dca0\"\n                }\n            ],\n            \"deleted\": false,\n            \"host_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-231-190\",\n            \"host_secret\": \"0SY3oTU0eaF2O1zvt7d7\",\n            \"hostname\": \"ip-172-30-231-190\",\n            \"ib_devices\": [],\n            \"id\": \"da86a7e6-913e-452f-acee-9d3de08f2f23\",\n            \"lvols\": [],\n            \"mgmt_ip\": \"172.30.231.190\",\n            \"name\": \"StorageNode\",\n            \"node_lvs\": \"lvs\",\n            \"nvme_devices\": [\n                {\n                    \"alceml_bdev\": \"node_9d3de08f2f23_dev_0bb354c61a8a\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 4,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"9e65d303-e7a1-4791-946f-0bb354c61a8a\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"da86a7e6-913e-452f-acee-9d3de08f2f23\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.231.190\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-231-190:dev:9e65d303-e7a1-4791-946f-0bb354c61a8a\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_9d3de08f2f23_dev_0bb354c61a8a_PT\",\n                    \"remote_bdev\": \"\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS450D1FE4D3408026E\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"9e65d303-e7a1-4791-946f-0bb354c61a8a\"\n                }\n            ],\n            \"object_type\": \"object\",\n            \"partitions_count\": 0,\n            \"remote_devices\": [\n                {\n                    \"alceml_bdev\": \"node_f37413779c26_dev_ddebbf92de3f\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 0,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"19a8b4e4-c376-4b5b-9624-ddebbf92de3f\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"92856305-a295-4deb-bb17-f37413779c26\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.33.64\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-33-64:dev:19a8b4e4-c376-4b5b-9624-ddebbf92de3f\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_f37413779c26_dev_ddebbf92de3f_PT\",\n                    \"remote_bdev\": \"remote_node_f37413779c26_dev_ddebbf92de3fn1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS146DEE55A13505C8B\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"19a8b4e4-c376-4b5b-9624-ddebbf92de3f\"\n                },\n                {\n                    \"alceml_bdev\": \"node_d8a8fa1e9dbb_dev_e5b89262f767\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 1,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"27dc5122-6db2-427a-8cf3-e5b89262f767\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"f23bb38f-7386-4614-bc7f-d8a8fa1e9dbb\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.152.207\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-152-207:dev:27dc5122-6db2-427a-8cf3-e5b89262f767\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_d8a8fa1e9dbb_dev_e5b89262f767_PT\",\n                    \"remote_bdev\": \"remote_node_d8a8fa1e9dbb_dev_e5b89262f767n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS49513CDACE54DD8A2\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"27dc5122-6db2-427a-8cf3-e5b89262f767\"\n                },\n                {\n                    \"alceml_bdev\": \"node_3fe770a39d6d_dev_240672c0a9d4\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 2,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"127baa8f-fde3-4707-84cd-240672c0a9d4\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"7a2415bd-9d45-478b-b8d3-3fe770a39d6d\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.100.75\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-100-75:dev:127baa8f-fde3-4707-84cd-240672c0a9d4\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_3fe770a39d6d_dev_240672c0a9d4_PT\",\n                    \"remote_bdev\": \"remote_node_3fe770a39d6d_dev_240672c0a9d4n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS2515B96D35D7DB270\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"127baa8f-fde3-4707-84cd-240672c0a9d4\"\n                },\n                {\n                    \"alceml_bdev\": \"node_ba4dc6d59fad_dev_b4df7347efb3\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 3,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"83b134f4-879b-4fcc-b73d-b4df7347efb3\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"ad3e6da0-2bb9-464e-b172-ba4dc6d59fad\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.164.21\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-164-21:dev:83b134f4-879b-4fcc-b73d-b4df7347efb3\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_ba4dc6d59fad_dev_b4df7347efb3_PT\",\n                    \"remote_bdev\": \"remote_node_ba4dc6d59fad_dev_b4df7347efb3n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS3104FAD9F87B096C8\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"83b134f4-879b-4fcc-b73d-b4df7347efb3\"\n                },\n                {\n                    \"alceml_bdev\": \"node_5e7706bbc4b8_dev_9384fc8b7c91\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 5,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"dfab280f-dcbe-47c4-82de-5e7706bbc4b8\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.112.96\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-112-96:dev:e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_5e7706bbc4b8_dev_9384fc8b7c91_PT\",\n                    \"remote_bdev\": \"remote_node_5e7706bbc4b8_dev_9384fc8b7c91n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS1B5682FAC516D6A45\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\"\n                },\n                {\n                    \"alceml_bdev\": \"node_3d43395e7398_dev_abda7e036dff\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 6,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"6467eb23-bcab-4efa-8c2a-abda7e036dff\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"40ba55f5-4d83-4996-aa59-3d43395e7398\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.201.126\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-201-126:dev:6467eb23-bcab-4efa-8c2a-abda7e036dff\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_3d43395e7398_dev_abda7e036dff_PT\",\n                    \"remote_bdev\": \"remote_node_3d43395e7398_dev_abda7e036dffn1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS1E22E52D9A7C66323\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"6467eb23-bcab-4efa-8c2a-abda7e036dff\"\n                },\n                {\n                    \"alceml_bdev\": \"node_19c3c9c3123e_dev_2a7d66324295\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 7,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"4be977ee-b1e0-411b-aeac-2a7d66324295\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"1450af0b-ae55-47e4-b434-19c3c9c3123e\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.252.216\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-252-216:dev:4be977ee-b1e0-411b-aeac-2a7d66324295\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_19c3c9c3123e_dev_2a7d66324295_PT\",\n                    \"remote_bdev\": \"remote_node_19c3c9c3123e_dev_2a7d66324295n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS1ECEC833656E3B404\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"4be977ee-b1e0-411b-aeac-2a7d66324295\"\n                }\n            ],\n            \"remove_dt\": \"2023-11-23 21:52:29.150285\",\n            \"rpc_password\": \"1ramfBxNkGzkEYMf\",\n            \"rpc_port\": 8080,\n            \"rpc_username\": \"XKPdKzev\",\n            \"sequential_number\": 0,\n            \"services\": [],\n            \"status\": \"online\",\n            \"subsystem\": \"nqn.2023-02.io.simplyblock:ip-172-30-231-190\",\n            \"system_uuid\": \"ec200980-7395-c027-9148-069ddfbe7cd9\",\n            \"updated_at\": \"2023-11-23 21:52:29.150274\",\n            \"uuid\": \"da86a7e6-913e-452f-acee-9d3de08f2f23\"\n        },\n        {\n            \"api_endpoint\": \"172.30.112.96:5000\",\n            \"baseboard_sn\": \"ec25ffaf-fa9d-fc92-75a7-8783a554e0aa\",\n            \"cluster_id\": \"2d240a9a-eed0-476d-9175-289483f7e738\",\n            \"create_dt\": \"2023-11-23 21:54:34.739863\",\n            \"ctrl_secret\": \"r3HsM1HlVWi8iFRFj8m3\",\n            \"data_nics\": [\n                {\n                    \"deleted\": false,\n                    \"id\": \"85c65dad-a41d-4321-9dc3-b19a7102f87a\",\n                    \"if_name\": \"eth0\",\n                    \"ip4_address\": \"172.30.112.96\",\n                    \"name\": \"IFace\",\n                    \"net_type\": \"ether\",\n                    \"object_type\": \"object\",\n                    \"port_number\": -1,\n                    \"status\": \"UP\",\n                    \"uuid\": \"85c65dad-a41d-4321-9dc3-b19a7102f87a\"\n                }\n            ],\n            \"deleted\": false,\n            \"host_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-112-96\",\n            \"host_secret\": \"5RObKNxT3GHZCzSa2zJo\",\n            \"hostname\": \"ip-172-30-112-96\",\n            \"ib_devices\": [],\n            \"id\": \"dfab280f-dcbe-47c4-82de-5e7706bbc4b8\",\n            \"lvols\": [\n                \"061412bc-6903-4951-aab8-60b7edcef18f\"\n            ],\n            \"mgmt_ip\": \"172.30.112.96\",\n            \"name\": \"StorageNode\",\n            \"node_lvs\": \"lvs\",\n            \"nvme_devices\": [\n                {\n                    \"alceml_bdev\": \"node_5e7706bbc4b8_dev_9384fc8b7c91\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 5,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"dfab280f-dcbe-47c4-82de-5e7706bbc4b8\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.112.96\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-112-96:dev:e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_5e7706bbc4b8_dev_9384fc8b7c91_PT\",\n                    \"remote_bdev\": \"\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS1B5682FAC516D6A45\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\"\n                }\n            ],\n            \"object_type\": \"object\",\n            \"partitions_count\": 0,\n            \"remote_devices\": [\n                {\n                    \"alceml_bdev\": \"node_f37413779c26_dev_ddebbf92de3f\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 0,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"19a8b4e4-c376-4b5b-9624-ddebbf92de3f\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"92856305-a295-4deb-bb17-f37413779c26\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.33.64\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-33-64:dev:19a8b4e4-c376-4b5b-9624-ddebbf92de3f\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_f37413779c26_dev_ddebbf92de3f_PT\",\n                    \"remote_bdev\": \"remote_node_f37413779c26_dev_ddebbf92de3fn1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS146DEE55A13505C8B\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"19a8b4e4-c376-4b5b-9624-ddebbf92de3f\"\n                },\n                {\n                    \"alceml_bdev\": \"node_d8a8fa1e9dbb_dev_e5b89262f767\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 1,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"27dc5122-6db2-427a-8cf3-e5b89262f767\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"f23bb38f-7386-4614-bc7f-d8a8fa1e9dbb\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.152.207\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-152-207:dev:27dc5122-6db2-427a-8cf3-e5b89262f767\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_d8a8fa1e9dbb_dev_e5b89262f767_PT\",\n                    \"remote_bdev\": \"remote_node_d8a8fa1e9dbb_dev_e5b89262f767n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS49513CDACE54DD8A2\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"27dc5122-6db2-427a-8cf3-e5b89262f767\"\n                },\n                {\n                    \"alceml_bdev\": \"node_3fe770a39d6d_dev_240672c0a9d4\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 2,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"127baa8f-fde3-4707-84cd-240672c0a9d4\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"7a2415bd-9d45-478b-b8d3-3fe770a39d6d\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.100.75\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-100-75:dev:127baa8f-fde3-4707-84cd-240672c0a9d4\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_3fe770a39d6d_dev_240672c0a9d4_PT\",\n                    \"remote_bdev\": \"remote_node_3fe770a39d6d_dev_240672c0a9d4n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS2515B96D35D7DB270\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"127baa8f-fde3-4707-84cd-240672c0a9d4\"\n                },\n                {\n                    \"alceml_bdev\": \"node_ba4dc6d59fad_dev_b4df7347efb3\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 3,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"83b134f4-879b-4fcc-b73d-b4df7347efb3\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"ad3e6da0-2bb9-464e-b172-ba4dc6d59fad\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.164.21\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-164-21:dev:83b134f4-879b-4fcc-b73d-b4df7347efb3\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_ba4dc6d59fad_dev_b4df7347efb3_PT\",\n                    \"remote_bdev\": \"remote_node_ba4dc6d59fad_dev_b4df7347efb3n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS3104FAD9F87B096C8\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"83b134f4-879b-4fcc-b73d-b4df7347efb3\"\n                },\n                {\n                    \"alceml_bdev\": \"node_9d3de08f2f23_dev_0bb354c61a8a\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 4,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"9e65d303-e7a1-4791-946f-0bb354c61a8a\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"da86a7e6-913e-452f-acee-9d3de08f2f23\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.231.190\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-231-190:dev:9e65d303-e7a1-4791-946f-0bb354c61a8a\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_9d3de08f2f23_dev_0bb354c61a8a_PT\",\n                    \"remote_bdev\": \"remote_node_9d3de08f2f23_dev_0bb354c61a8an1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS450D1FE4D3408026E\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"9e65d303-e7a1-4791-946f-0bb354c61a8a\"\n                },\n                {\n                    \"alceml_bdev\": \"node_3d43395e7398_dev_abda7e036dff\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 6,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"6467eb23-bcab-4efa-8c2a-abda7e036dff\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"40ba55f5-4d83-4996-aa59-3d43395e7398\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.201.126\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-201-126:dev:6467eb23-bcab-4efa-8c2a-abda7e036dff\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_3d43395e7398_dev_abda7e036dff_PT\",\n                    \"remote_bdev\": \"remote_node_3d43395e7398_dev_abda7e036dffn1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS1E22E52D9A7C66323\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"6467eb23-bcab-4efa-8c2a-abda7e036dff\"\n                },\n                {\n                    \"alceml_bdev\": \"node_19c3c9c3123e_dev_2a7d66324295\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 7,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"4be977ee-b1e0-411b-aeac-2a7d66324295\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"1450af0b-ae55-47e4-b434-19c3c9c3123e\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.252.216\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-252-216:dev:4be977ee-b1e0-411b-aeac-2a7d66324295\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_19c3c9c3123e_dev_2a7d66324295_PT\",\n                    \"remote_bdev\": \"remote_node_19c3c9c3123e_dev_2a7d66324295n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS1ECEC833656E3B404\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"4be977ee-b1e0-411b-aeac-2a7d66324295\"\n                }\n            ],\n            \"remove_dt\": \"2023-11-23 21:54:34.739864\",\n            \"rpc_password\": \"6KPleaqSIeEkTtCp\",\n            \"rpc_port\": 8080,\n            \"rpc_username\": \"5sfVCLoo\",\n            \"sequential_number\": 0,\n            \"services\": [],\n            \"status\": \"online\",\n            \"subsystem\": \"nqn.2023-02.io.simplyblock:ip-172-30-112-96\",\n            \"system_uuid\": \"ec25ffaf-fa9d-fc92-75a7-8783a554e0aa\",\n            \"updated_at\": \"2023-11-23 21:54:34.739853\",\n            \"uuid\": \"dfab280f-dcbe-47c4-82de-5e7706bbc4b8\"\n        },\n        {\n            \"api_endpoint\": \"172.30.201.126:5000\",\n            \"baseboard_sn\": \"ec2b2c89-c760-1c40-ee48-c6588232cc51\",\n            \"cluster_id\": \"2d240a9a-eed0-476d-9175-289483f7e738\",\n            \"create_dt\": \"2023-11-23 21:56:40.358648\",\n            \"ctrl_secret\": \"ZMCAnlq9qbgMe6PAxs6o\",\n            \"data_nics\": [\n                {\n                    \"deleted\": false,\n                    \"id\": \"3d2932b0-4d30-4963-86db-ad87cc6b7bbb\",\n                    \"if_name\": \"eth0\",\n                    \"ip4_address\": \"172.30.201.126\",\n                    \"name\": \"IFace\",\n                    \"net_type\": \"ether\",\n                    \"object_type\": \"object\",\n                    \"port_number\": -1,\n                    \"status\": \"UP\",\n                    \"uuid\": \"3d2932b0-4d30-4963-86db-ad87cc6b7bbb\"\n                }\n            ],\n            \"deleted\": false,\n            \"host_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-201-126\",\n            \"host_secret\": \"tGMC2wsuH5xarH3N0Yvp\",\n            \"hostname\": \"ip-172-30-201-126\",\n            \"ib_devices\": [],\n            \"id\": \"40ba55f5-4d83-4996-aa59-3d43395e7398\",\n            \"lvols\": [],\n            \"mgmt_ip\": \"172.30.201.126\",\n            \"name\": \"StorageNode\",\n            \"node_lvs\": \"lvs\",\n            \"nvme_devices\": [\n                {\n                    \"alceml_bdev\": \"node_3d43395e7398_dev_abda7e036dff\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 6,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"6467eb23-bcab-4efa-8c2a-abda7e036dff\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"40ba55f5-4d83-4996-aa59-3d43395e7398\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.201.126\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-201-126:dev:6467eb23-bcab-4efa-8c2a-abda7e036dff\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_3d43395e7398_dev_abda7e036dff_PT\",\n                    \"remote_bdev\": \"\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS1E22E52D9A7C66323\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"6467eb23-bcab-4efa-8c2a-abda7e036dff\"\n                }\n            ],\n            \"object_type\": \"object\",\n            \"partitions_count\": 0,\n            \"remote_devices\": [\n                {\n                    \"alceml_bdev\": \"node_f37413779c26_dev_ddebbf92de3f\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 0,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"19a8b4e4-c376-4b5b-9624-ddebbf92de3f\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"92856305-a295-4deb-bb17-f37413779c26\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.33.64\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-33-64:dev:19a8b4e4-c376-4b5b-9624-ddebbf92de3f\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_f37413779c26_dev_ddebbf92de3f_PT\",\n                    \"remote_bdev\": \"remote_node_f37413779c26_dev_ddebbf92de3fn1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS146DEE55A13505C8B\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"19a8b4e4-c376-4b5b-9624-ddebbf92de3f\"\n                },\n                {\n                    \"alceml_bdev\": \"node_d8a8fa1e9dbb_dev_e5b89262f767\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 1,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"27dc5122-6db2-427a-8cf3-e5b89262f767\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"f23bb38f-7386-4614-bc7f-d8a8fa1e9dbb\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.152.207\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-152-207:dev:27dc5122-6db2-427a-8cf3-e5b89262f767\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_d8a8fa1e9dbb_dev_e5b89262f767_PT\",\n                    \"remote_bdev\": \"remote_node_d8a8fa1e9dbb_dev_e5b89262f767n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS49513CDACE54DD8A2\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"27dc5122-6db2-427a-8cf3-e5b89262f767\"\n                },\n                {\n                    \"alceml_bdev\": \"node_3fe770a39d6d_dev_240672c0a9d4\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 2,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"127baa8f-fde3-4707-84cd-240672c0a9d4\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"7a2415bd-9d45-478b-b8d3-3fe770a39d6d\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.100.75\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-100-75:dev:127baa8f-fde3-4707-84cd-240672c0a9d4\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_3fe770a39d6d_dev_240672c0a9d4_PT\",\n                    \"remote_bdev\": \"remote_node_3fe770a39d6d_dev_240672c0a9d4n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS2515B96D35D7DB270\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"127baa8f-fde3-4707-84cd-240672c0a9d4\"\n                },\n                {\n                    \"alceml_bdev\": \"node_ba4dc6d59fad_dev_b4df7347efb3\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 3,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"83b134f4-879b-4fcc-b73d-b4df7347efb3\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"ad3e6da0-2bb9-464e-b172-ba4dc6d59fad\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.164.21\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-164-21:dev:83b134f4-879b-4fcc-b73d-b4df7347efb3\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_ba4dc6d59fad_dev_b4df7347efb3_PT\",\n                    \"remote_bdev\": \"remote_node_ba4dc6d59fad_dev_b4df7347efb3n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS3104FAD9F87B096C8\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"83b134f4-879b-4fcc-b73d-b4df7347efb3\"\n                },\n                {\n                    \"alceml_bdev\": \"node_9d3de08f2f23_dev_0bb354c61a8a\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 4,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"9e65d303-e7a1-4791-946f-0bb354c61a8a\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"da86a7e6-913e-452f-acee-9d3de08f2f23\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.231.190\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-231-190:dev:9e65d303-e7a1-4791-946f-0bb354c61a8a\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_9d3de08f2f23_dev_0bb354c61a8a_PT\",\n                    \"remote_bdev\": \"remote_node_9d3de08f2f23_dev_0bb354c61a8an1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS450D1FE4D3408026E\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"9e65d303-e7a1-4791-946f-0bb354c61a8a\"\n                },\n                {\n                    \"alceml_bdev\": \"node_5e7706bbc4b8_dev_9384fc8b7c91\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 5,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"dfab280f-dcbe-47c4-82de-5e7706bbc4b8\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.112.96\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-112-96:dev:e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_5e7706bbc4b8_dev_9384fc8b7c91_PT\",\n                    \"remote_bdev\": \"remote_node_5e7706bbc4b8_dev_9384fc8b7c91n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS1B5682FAC516D6A45\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\"\n                },\n                {\n                    \"alceml_bdev\": \"node_19c3c9c3123e_dev_2a7d66324295\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 7,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"4be977ee-b1e0-411b-aeac-2a7d66324295\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"1450af0b-ae55-47e4-b434-19c3c9c3123e\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.252.216\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-252-216:dev:4be977ee-b1e0-411b-aeac-2a7d66324295\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_19c3c9c3123e_dev_2a7d66324295_PT\",\n                    \"remote_bdev\": \"remote_node_19c3c9c3123e_dev_2a7d66324295n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS1ECEC833656E3B404\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"4be977ee-b1e0-411b-aeac-2a7d66324295\"\n                }\n            ],\n            \"remove_dt\": \"2023-11-23 21:56:40.358650\",\n            \"rpc_password\": \"2EZf0THFLeRPWE71\",\n            \"rpc_port\": 8080,\n            \"rpc_username\": \"vVr0u25X\",\n            \"sequential_number\": 0,\n            \"services\": [],\n            \"status\": \"online\",\n            \"subsystem\": \"nqn.2023-02.io.simplyblock:ip-172-30-201-126\",\n            \"system_uuid\": \"ec2b2c89-c760-1c40-ee48-c6588232cc51\",\n            \"updated_at\": \"2023-11-23 21:56:40.358639\",\n            \"uuid\": \"40ba55f5-4d83-4996-aa59-3d43395e7398\"\n        },\n        {\n            \"api_endpoint\": \"172.30.252.216:5000\",\n            \"baseboard_sn\": \"ec25104d-4ee7-1496-8a16-a983da4874d1\",\n            \"cluster_id\": \"2d240a9a-eed0-476d-9175-289483f7e738\",\n            \"create_dt\": \"2023-11-23 21:58:45.980192\",\n            \"ctrl_secret\": \"KWP5z302T4mArScZurtL\",\n            \"data_nics\": [\n                {\n                    \"deleted\": false,\n                    \"id\": \"bd5a54d0-f5fc-4e32-9d58-99989072bda6\",\n                    \"if_name\": \"eth0\",\n                    \"ip4_address\": \"172.30.252.216\",\n                    \"name\": \"IFace\",\n                    \"net_type\": \"ether\",\n                    \"object_type\": \"object\",\n                    \"port_number\": -1,\n                    \"status\": \"UP\",\n                    \"uuid\": \"bd5a54d0-f5fc-4e32-9d58-99989072bda6\"\n                }\n            ],\n            \"deleted\": false,\n            \"host_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-252-216\",\n            \"host_secret\": \"VxruEVJ0t26MFUp746Ry\",\n            \"hostname\": \"ip-172-30-252-216\",\n            \"ib_devices\": [],\n            \"id\": \"1450af0b-ae55-47e4-b434-19c3c9c3123e\",\n            \"lvols\": [],\n            \"mgmt_ip\": \"172.30.252.216\",\n            \"name\": \"StorageNode\",\n            \"node_lvs\": \"lvs\",\n            \"nvme_devices\": [\n                {\n                    \"alceml_bdev\": \"node_19c3c9c3123e_dev_2a7d66324295\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 7,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"4be977ee-b1e0-411b-aeac-2a7d66324295\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"1450af0b-ae55-47e4-b434-19c3c9c3123e\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.252.216\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-252-216:dev:4be977ee-b1e0-411b-aeac-2a7d66324295\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_19c3c9c3123e_dev_2a7d66324295_PT\",\n                    \"remote_bdev\": \"\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS1ECEC833656E3B404\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"4be977ee-b1e0-411b-aeac-2a7d66324295\"\n                }\n            ],\n            \"object_type\": \"object\",\n            \"partitions_count\": 0,\n            \"remote_devices\": [\n                {\n                    \"alceml_bdev\": \"node_f37413779c26_dev_ddebbf92de3f\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 0,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"19a8b4e4-c376-4b5b-9624-ddebbf92de3f\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"92856305-a295-4deb-bb17-f37413779c26\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.33.64\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-33-64:dev:19a8b4e4-c376-4b5b-9624-ddebbf92de3f\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_f37413779c26_dev_ddebbf92de3f_PT\",\n                    \"remote_bdev\": \"remote_node_f37413779c26_dev_ddebbf92de3fn1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS146DEE55A13505C8B\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"19a8b4e4-c376-4b5b-9624-ddebbf92de3f\"\n                },\n                {\n                    \"alceml_bdev\": \"node_d8a8fa1e9dbb_dev_e5b89262f767\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 1,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"27dc5122-6db2-427a-8cf3-e5b89262f767\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"f23bb38f-7386-4614-bc7f-d8a8fa1e9dbb\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.152.207\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-152-207:dev:27dc5122-6db2-427a-8cf3-e5b89262f767\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_d8a8fa1e9dbb_dev_e5b89262f767_PT\",\n                    \"remote_bdev\": \"remote_node_d8a8fa1e9dbb_dev_e5b89262f767n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS49513CDACE54DD8A2\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"27dc5122-6db2-427a-8cf3-e5b89262f767\"\n                },\n                {\n                    \"alceml_bdev\": \"node_3fe770a39d6d_dev_240672c0a9d4\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 2,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"127baa8f-fde3-4707-84cd-240672c0a9d4\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"7a2415bd-9d45-478b-b8d3-3fe770a39d6d\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.100.75\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-100-75:dev:127baa8f-fde3-4707-84cd-240672c0a9d4\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_3fe770a39d6d_dev_240672c0a9d4_PT\",\n                    \"remote_bdev\": \"remote_node_3fe770a39d6d_dev_240672c0a9d4n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS2515B96D35D7DB270\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"127baa8f-fde3-4707-84cd-240672c0a9d4\"\n                },\n                {\n                    \"alceml_bdev\": \"node_ba4dc6d59fad_dev_b4df7347efb3\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 3,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"83b134f4-879b-4fcc-b73d-b4df7347efb3\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"ad3e6da0-2bb9-464e-b172-ba4dc6d59fad\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.164.21\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-164-21:dev:83b134f4-879b-4fcc-b73d-b4df7347efb3\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_ba4dc6d59fad_dev_b4df7347efb3_PT\",\n                    \"remote_bdev\": \"remote_node_ba4dc6d59fad_dev_b4df7347efb3n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS3104FAD9F87B096C8\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"83b134f4-879b-4fcc-b73d-b4df7347efb3\"\n                },\n                {\n                    \"alceml_bdev\": \"node_9d3de08f2f23_dev_0bb354c61a8a\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 4,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"9e65d303-e7a1-4791-946f-0bb354c61a8a\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"da86a7e6-913e-452f-acee-9d3de08f2f23\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.231.190\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-231-190:dev:9e65d303-e7a1-4791-946f-0bb354c61a8a\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_9d3de08f2f23_dev_0bb354c61a8a_PT\",\n                    \"remote_bdev\": \"remote_node_9d3de08f2f23_dev_0bb354c61a8an1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS450D1FE4D3408026E\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"9e65d303-e7a1-4791-946f-0bb354c61a8a\"\n                },\n                {\n                    \"alceml_bdev\": \"node_5e7706bbc4b8_dev_9384fc8b7c91\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 5,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"dfab280f-dcbe-47c4-82de-5e7706bbc4b8\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.112.96\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-112-96:dev:e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_5e7706bbc4b8_dev_9384fc8b7c91_PT\",\n                    \"remote_bdev\": \"remote_node_5e7706bbc4b8_dev_9384fc8b7c91n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS1B5682FAC516D6A45\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"e9db0751-7dcb-4aa6-9eb6-9384fc8b7c91\"\n                },\n                {\n                    \"alceml_bdev\": \"node_3d43395e7398_dev_abda7e036dff\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 6,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"6467eb23-bcab-4efa-8c2a-abda7e036dff\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"40ba55f5-4d83-4996-aa59-3d43395e7398\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"172.30.201.126\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-172-30-201-126:dev:6467eb23-bcab-4efa-8c2a-abda7e036dff\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_3d43395e7398_dev_abda7e036dff_PT\",\n                    \"remote_bdev\": \"remote_node_3d43395e7398_dev_abda7e036dffn1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS1E22E52D9A7C66323\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"6467eb23-bcab-4efa-8c2a-abda7e036dff\"\n                }\n            ],\n            \"remove_dt\": \"2023-11-23 21:58:45.980193\",\n            \"rpc_password\": \"W9EBQg8MQW8TxD6b\",\n            \"rpc_port\": 8080,\n            \"rpc_username\": \"XUB9IcPw\",\n            \"sequential_number\": 0,\n            \"services\": [],\n            \"status\": \"online\",\n            \"subsystem\": \"nqn.2023-02.io.simplyblock:ip-172-30-252-216\",\n            \"system_uuid\": \"ec25104d-4ee7-1496-8a16-a983da4874d1\",\n            \"updated_at\": \"2023-11-23 21:58:45.980182\",\n            \"uuid\": \"1450af0b-ae55-47e4-b434-19c3c9c3123e\"\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "storage node details",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/storagenode/71e37018-384f-4fbf-b296-7c1ccec1274e",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "storagenode",
                                "71e37018-384f-4fbf-b296-7c1ccec1274e"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "storage node details",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/storagenode/71e37018-384f-4fbf-b296-7c1ccec1274e",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "storagenode",
                                        "71e37018-384f-4fbf-b296-7c1ccec1274e"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:14:47 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "90416"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"api_endpoint\": \"10.0.4.240:5000\",\n            \"baseboard_sn\": \"ec2222b8-1f1f-5a01-5bcb-4821107de4c1\",\n            \"cluster_id\": \"6bc41403-6d7e-45b7-9922-fee0b04a6dca\",\n            \"cmd_params\": [],\n            \"create_dt\": \"2023-12-13 23:27:21.193186\",\n            \"ctrl_secret\": \"ULcCWU5jG0ErjB9DllD4\",\n            \"data_nics\": [\n                {\n                    \"deleted\": false,\n                    \"id\": \"100e9fe8-bec5-4d3e-957d-99e364fac47f\",\n                    \"if_name\": \"eth0\",\n                    \"ip4_address\": \"10.0.4.240\",\n                    \"name\": \"IFace\",\n                    \"net_type\": \"ether\",\n                    \"object_type\": \"object\",\n                    \"port_number\": -1,\n                    \"status\": \"UP\",\n                    \"uuid\": \"100e9fe8-bec5-4d3e-957d-99e364fac47f\"\n                }\n            ],\n            \"deleted\": false,\n            \"host_nqn\": \"nqn.2023-02.io.simplyblock:ip-10-0-4-240\",\n            \"host_secret\": \"xWQzJk2VRTrE98QAHr2f\",\n            \"hostname\": \"ip-10-0-4-240\",\n            \"ib_devices\": [],\n            \"id\": \"71e37018-384f-4fbf-b296-7c1ccec1274e\",\n            \"lvols\": [],\n            \"mgmt_ip\": \"10.0.4.240\",\n            \"name\": \"StorageNode\",\n            \"node_lvs\": \"lvs\",\n            \"nvme_devices\": [\n                {\n                    \"alceml_bdev\": \"node_7c1ccec1274e_dev_e1a57b75a5dc\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 1,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"db50c1b6-e9f5-470c-8b53-e1a57b75a5dc\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"71e37018-384f-4fbf-b296-7c1ccec1274e\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"10.0.4.240\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-10-0-4-240:dev:db50c1b6-e9f5-470c-8b53-e1a57b75a5dc\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_7c1ccec1274e_dev_e1a57b75a5dc_PT\",\n                    \"remote_bdev\": \"\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS23AC6C17E00CA2E7C\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"db50c1b6-e9f5-470c-8b53-e1a57b75a5dc\"\n                }\n            ],\n            \"object_type\": \"object\",\n            \"partitions_count\": 0,\n            \"remote_devices\": [\n                {\n                    \"alceml_bdev\": \"node_5ea5f4f5c596_dev_45ad8182b62a\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 0,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"7de9ccbd-0877-4ecc-aa25-45ad8182b62a\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"0defd039-72ff-4c06-83d3-5ea5f4f5c596\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"10.0.4.130\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-10-0-4-130:dev:7de9ccbd-0877-4ecc-aa25-45ad8182b62a\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_5ea5f4f5c596_dev_45ad8182b62a_PT\",\n                    \"remote_bdev\": \"remote_node_5ea5f4f5c596_dev_45ad8182b62an1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS65929E01368A31680\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"7de9ccbd-0877-4ecc-aa25-45ad8182b62a\"\n                },\n                {\n                    \"alceml_bdev\": \"node_84fb06fc9105_dev_961c771b3cea\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 2,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"6ce9232d-d512-47ab-9537-961c771b3cea\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"b35bdfc0-e8a5-4c97-96a7-84fb06fc9105\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"10.0.4.171\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-10-0-4-171:dev:6ce9232d-d512-47ab-9537-961c771b3cea\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_84fb06fc9105_dev_961c771b3cea_PT\",\n                    \"remote_bdev\": \"remote_node_84fb06fc9105_dev_961c771b3cean1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS30315C2D8D5F12865\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"6ce9232d-d512-47ab-9537-961c771b3cea\"\n                },\n                {\n                    \"alceml_bdev\": \"node_ccfb0957b7b0_dev_9bbf06a65aa2\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 3,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"3b8efa5e-7aee-4dba-addf-9bbf06a65aa2\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"47668fa7-db52-46e7-a4a4-ccfb0957b7b0\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"10.0.4.248\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-10-0-4-248:dev:3b8efa5e-7aee-4dba-addf-9bbf06a65aa2\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_ccfb0957b7b0_dev_9bbf06a65aa2_PT\",\n                    \"remote_bdev\": \"remote_node_ccfb0957b7b0_dev_9bbf06a65aa2n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS278D0EBB46AAD4DDD\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"3b8efa5e-7aee-4dba-addf-9bbf06a65aa2\"\n                },\n                {\n                    \"alceml_bdev\": \"node_31bf3cff4d4a_dev_884dc19d1294\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 4,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"c329e860-94ce-4f32-a0fe-884dc19d1294\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"fde13532-7609-4418-82dc-31bf3cff4d4a\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"10.0.4.69\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-10-0-4-69:dev:c329e860-94ce-4f32-a0fe-884dc19d1294\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_31bf3cff4d4a_dev_884dc19d1294_PT\",\n                    \"remote_bdev\": \"remote_node_31bf3cff4d4a_dev_884dc19d1294n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS23D3FBC50519E758D\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"c329e860-94ce-4f32-a0fe-884dc19d1294\"\n                },\n                {\n                    \"alceml_bdev\": \"node_c9e889c24e7b_dev_2a886d90efc1\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 5,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"4c51328f-1460-40f7-a09b-2a886d90efc1\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"8abecf8e-21ac-429b-81ff-c9e889c24e7b\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"10.0.4.195\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-10-0-4-195:dev:4c51328f-1460-40f7-a09b-2a886d90efc1\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_c9e889c24e7b_dev_2a886d90efc1_PT\",\n                    \"remote_bdev\": \"remote_node_c9e889c24e7b_dev_2a886d90efc1n1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS27560ACA5A222AE83\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"4c51328f-1460-40f7-a09b-2a886d90efc1\"\n                },\n                {\n                    \"alceml_bdev\": \"node_9e4c93d5f2ca_dev_b99c84bf7ffa\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 6,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"277fab0d-490c-4836-8843-b99c84bf7ffa\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"843fcd9a-0174-480b-b777-9e4c93d5f2ca\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"10.0.4.110\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-10-0-4-110:dev:277fab0d-490c-4836-8843-b99c84bf7ffa\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_9e4c93d5f2ca_dev_b99c84bf7ffa_PT\",\n                    \"remote_bdev\": \"remote_node_9e4c93d5f2ca_dev_b99c84bf7ffan1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS197C081F209E6985F\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"277fab0d-490c-4836-8843-b99c84bf7ffa\"\n                },\n                {\n                    \"alceml_bdev\": \"node_6737d23978ab_dev_ba467ece451f\",\n                    \"alloc_bdev\": \"nvme_1fn1\",\n                    \"capacity\": 1250000000000,\n                    \"cluster_device_order\": 7,\n                    \"deleted\": false,\n                    \"device_name\": \"nvme_1fn1\",\n                    \"id\": \"e209874d-bf06-4036-a07c-ba467ece451f\",\n                    \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n                    \"name\": \"NVMeDevice\",\n                    \"node_id\": \"5293eed9-4891-481d-84a5-6737d23978ab\",\n                    \"nvme_bdev\": \"nvme_1fn1\",\n                    \"nvmf_ip\": \"10.0.4.232\",\n                    \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-10-0-4-232:dev:e209874d-bf06-4036-a07c-ba467ece451f\",\n                    \"nvmf_port\": 4420,\n                    \"object_type\": \"object\",\n                    \"overload_percentage\": 0,\n                    \"partitions_count\": 1164,\n                    \"pcie_address\": \"0000:00:1f.0\",\n                    \"pt_bdev\": \"node_6737d23978ab_dev_ba467ece451f_PT\",\n                    \"remote_bdev\": \"remote_node_6737d23978ab_dev_ba467ece451fn1\",\n                    \"sequential_number\": 0,\n                    \"serial_number\": \"AWS504A56486CC288A6C\",\n                    \"size\": 1250000000000,\n                    \"status\": \"online\",\n                    \"testing_bdev\": \"nvme_1fn1_test\",\n                    \"uuid\": \"e209874d-bf06-4036-a07c-ba467ece451f\"\n                }\n            ],\n            \"remove_dt\": \"2023-12-13 23:27:21.193188\",\n            \"rpc_password\": \"m9yrrr0hu8TW2UqC\",\n            \"rpc_port\": 8080,\n            \"rpc_username\": \"eBZZwW3M\",\n            \"sequential_number\": 0,\n            \"services\": [],\n            \"spdk_cpu_mask\": \"0x3\",\n            \"spdk_image\": \"\",\n            \"spdk_mem\": 17179869184,\n            \"status\": \"online\",\n            \"status_code\": 0,\n            \"subsystem\": \"nqn.2023-02.io.simplyblock:ip-10-0-4-240\",\n            \"system_uuid\": \"ec2222b8-1f1f-5a01-5bcb-4821107de4c1\",\n            \"updated_at\": \"2023-12-13 23:27:21.193182\",\n            \"uuid\": \"71e37018-384f-4fbf-b296-7c1ccec1274e\"\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "storage node capacity",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/storagenode/capacity/71e37018-384f-4fbf-b296-7c1ccec1274e",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "storagenode",
                                "capacity",
                                "71e37018-384f-4fbf-b296-7c1ccec1274e"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "storage node capacity",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/storagenode/capacity/92856305-a295-4deb-bb17-f37413779c26",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "storagenode",
                                        "capacity",
                                        "92856305-a295-4deb-bb17-f37413779c26"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:16:08 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "284"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"device name\": \"nvme_1fn1\",\n            \"provisioned\": 1250000000000,\n            \"util\": 0,\n            \"util_percent\": 0\n        },\n        {\n            \"device name\": \"Total\",\n            \"provisioned\": 1250000000000,\n            \"util\": 0,\n            \"util_percent\": 0\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "storage node capacity history",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/storagenode/capacity/71e37018-384f-4fbf-b296-7c1ccec1274e/history/1d",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "storagenode",
                                "capacity",
                                "71e37018-384f-4fbf-b296-7c1ccec1274e",
                                "history",
                                "1d"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "storage node capacity",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/storagenode/capacity/92856305-a295-4deb-bb17-f37413779c26",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "storagenode",
                                        "capacity",
                                        "92856305-a295-4deb-bb17-f37413779c26"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:16:08 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "284"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"device name\": \"nvme_1fn1\",\n            \"provisioned\": 1250000000000,\n            \"util\": 0,\n            \"util_percent\": 0\n        },\n        {\n            \"device name\": \"Total\",\n            \"provisioned\": 1250000000000,\n            \"util\": 0,\n            \"util_percent\": 0\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "storage node iostats",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/storagenode/iostats/71e37018-384f-4fbf-b296-7c1ccec1274e",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "storagenode",
                                "iostats",
                                "71e37018-384f-4fbf-b296-7c1ccec1274e"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "storage node iostats",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/storagenode/iostats/92856305-a295-4deb-bb17-f37413779c26",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "storagenode",
                                        "iostats",
                                        "92856305-a295-4deb-bb17-f37413779c26"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:16:26 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "630"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"Device\": \"nvme_1fn1\",\n            \"bytes_read (MB/s)\": 0,\n            \"bytes_unmapped (MB/s)\": 0,\n            \"bytes_write (MB/s)\": 7796736,\n            \"num_read_ops (IOPS)\": 0,\n            \"num_write_ops (IOPS)\": 7614,\n            \"read_latency_ticks\": 13828404124,\n            \"write_latency_ticks\": 124163195046470\n        },\n        {\n            \"Device\": \"Total\",\n            \"bytes_read (MB/s)\": 0,\n            \"bytes_unmapped (MB/s)\": 0,\n            \"bytes_write (MB/s)\": 7796736,\n            \"num_read_ops (IOPS)\": 0,\n            \"num_write_ops (IOPS)\": 7614,\n            \"read_latency_ticks\": 13828404124,\n            \"write_latency_ticks\": 124163195046470\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "storage node iostats history",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/storagenode/iostats/eb1c4404-d4a4-4165-9040-8e5fe087b068/history/1d",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "storagenode",
                                "iostats",
                                "eb1c4404-d4a4-4165-9040-8e5fe087b068",
                                "history",
                                "1d"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "storage node iostats",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/storagenode/iostats/92856305-a295-4deb-bb17-f37413779c26",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "storagenode",
                                        "iostats",
                                        "92856305-a295-4deb-bb17-f37413779c26"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:16:26 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "630"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"Device\": \"nvme_1fn1\",\n            \"bytes_read (MB/s)\": 0,\n            \"bytes_unmapped (MB/s)\": 0,\n            \"bytes_write (MB/s)\": 7796736,\n            \"num_read_ops (IOPS)\": 0,\n            \"num_write_ops (IOPS)\": 7614,\n            \"read_latency_ticks\": 13828404124,\n            \"write_latency_ticks\": 124163195046470\n        },\n        {\n            \"Device\": \"Total\",\n            \"bytes_read (MB/s)\": 0,\n            \"bytes_unmapped (MB/s)\": 0,\n            \"bytes_write (MB/s)\": 7796736,\n            \"num_read_ops (IOPS)\": 0,\n            \"num_write_ops (IOPS)\": 7614,\n            \"read_latency_ticks\": 13828404124,\n            \"write_latency_ticks\": 124163195046470\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "storage node ports list",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/storagenode/port/71e37018-384f-4fbf-b296-7c1ccec1274e",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "storagenode",
                                "port",
                                "71e37018-384f-4fbf-b296-7c1ccec1274e"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "storage node ports list",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/storagenode/port/92856305-a295-4deb-bb17-f37413779c26",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "storagenode",
                                        "port",
                                        "92856305-a295-4deb-bb17-f37413779c26"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:16:33 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "213"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"Address\": \"172.30.33.64\",\n            \"Device name\": \"eth0\",\n            \"ID\": \"f5c62499-8c85-4408-84f7-63cd65f4845c\",\n            \"Net type\": \"TCP\",\n            \"Status\": \"UP\"\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "storage node port get-io-stats",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/storagenode/port-io-stats/100e9fe8-bec5-4d3e-957d-99e364fac47f",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "storagenode",
                                "port-io-stats",
                                "100e9fe8-bec5-4d3e-957d-99e364fac47f"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "storage node port get-io-stats",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/storagenode/port-io-stats/f5c62499-8c85-4408-84f7-63cd65f4845c",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "storagenode",
                                        "port-io-stats",
                                        "f5c62499-8c85-4408-84f7-63cd65f4845c"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:16:58 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "3560"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"Date\": \"08:16:58, 24/11/2023\",\n            \"bytes_received\": \"260.0 GB\",\n            \"bytes_sent\": \"19.1 GB\",\n            \"in_speed\": \"8.0 MB\",\n            \"out_speed\": \"605.9 KB\"\n        },\n        {\n            \"Date\": \"08:16:56, 24/11/2023\",\n            \"bytes_received\": \"259.9 GB\",\n            \"bytes_sent\": \"19.1 GB\",\n            \"in_speed\": \"7.9 MB\",\n            \"out_speed\": \"579.1 KB\"\n        },\n        {\n            \"Date\": \"08:16:54, 24/11/2023\",\n            \"bytes_received\": \"259.9 GB\",\n            \"bytes_sent\": \"19.1 GB\",\n            \"in_speed\": \"7.9 MB\",\n            \"out_speed\": \"578.6 KB\"\n        },\n        {\n            \"Date\": \"08:16:52, 24/11/2023\",\n            \"bytes_received\": \"259.9 GB\",\n            \"bytes_sent\": \"19.1 GB\",\n            \"in_speed\": \"7.6 MB\",\n            \"out_speed\": \"571.5 KB\"\n        },\n        {\n            \"Date\": \"08:16:50, 24/11/2023\",\n            \"bytes_received\": \"259.9 GB\",\n            \"bytes_sent\": \"19.1 GB\",\n            \"in_speed\": \"5.3 MB\",\n            \"out_speed\": \"390.2 KB\"\n        },\n        {\n            \"Date\": \"08:16:47, 24/11/2023\",\n            \"bytes_received\": \"259.9 GB\",\n            \"bytes_sent\": \"19.0 GB\",\n            \"in_speed\": \"8.0 MB\",\n            \"out_speed\": \"580.6 KB\"\n        },\n        {\n            \"Date\": \"08:16:45, 24/11/2023\",\n            \"bytes_received\": \"259.9 GB\",\n            \"bytes_sent\": \"19.0 GB\",\n            \"in_speed\": \"8.0 MB\",\n            \"out_speed\": \"579.4 KB\"\n        },\n        {\n            \"Date\": \"08:16:43, 24/11/2023\",\n            \"bytes_received\": \"259.9 GB\",\n            \"bytes_sent\": \"19.0 GB\",\n            \"in_speed\": \"8.0 MB\",\n            \"out_speed\": \"582.4 KB\"\n        },\n        {\n            \"Date\": \"08:16:41, 24/11/2023\",\n            \"bytes_received\": \"259.8 GB\",\n            \"bytes_sent\": \"19.0 GB\",\n            \"in_speed\": \"7.8 MB\",\n            \"out_speed\": \"572.6 KB\"\n        },\n        {\n            \"Date\": \"08:16:39, 24/11/2023\",\n            \"bytes_received\": \"259.8 GB\",\n            \"bytes_sent\": \"19.0 GB\",\n            \"in_speed\": \"7.9 MB\",\n            \"out_speed\": \"571.8 KB\"\n        },\n        {\n            \"Date\": \"08:16:37, 24/11/2023\",\n            \"bytes_received\": \"259.8 GB\",\n            \"bytes_sent\": \"19.0 GB\",\n            \"in_speed\": \"8.0 MB\",\n            \"out_speed\": \"583.3 KB\"\n        },\n        {\n            \"Date\": \"08:16:35, 24/11/2023\",\n            \"bytes_received\": \"259.8 GB\",\n            \"bytes_sent\": \"19.0 GB\",\n            \"in_speed\": \"7.8 MB\",\n            \"out_speed\": \"563.4 KB\"\n        },\n        {\n            \"Date\": \"08:16:33, 24/11/2023\",\n            \"bytes_received\": \"259.8 GB\",\n            \"bytes_sent\": \"19.0 GB\",\n            \"in_speed\": \"7.9 MB\",\n            \"out_speed\": \"575.4 KB\"\n        },\n        {\n            \"Date\": \"08:16:31, 24/11/2023\",\n            \"bytes_received\": \"259.8 GB\",\n            \"bytes_sent\": \"19.0 GB\",\n            \"in_speed\": \"8.0 MB\",\n            \"out_speed\": \"578.9 KB\"\n        },\n        {\n            \"Date\": \"08:16:29, 24/11/2023\",\n            \"bytes_received\": \"259.7 GB\",\n            \"bytes_sent\": \"19.0 GB\",\n            \"in_speed\": \"7.7 MB\",\n            \"out_speed\": \"564.5 KB\"\n        },\n        {\n            \"Date\": \"08:16:27, 24/11/2023\",\n            \"bytes_received\": \"259.7 GB\",\n            \"bytes_sent\": \"19.0 GB\",\n            \"in_speed\": \"7.7 MB\",\n            \"out_speed\": \"569.2 KB\"\n        },\n        {\n            \"Date\": \"08:16:25, 24/11/2023\",\n            \"bytes_received\": \"259.7 GB\",\n            \"bytes_sent\": \"19.0 GB\",\n            \"in_speed\": \"7.7 MB\",\n            \"out_speed\": \"563.6 KB\"\n        },\n        {\n            \"Date\": \"08:16:23, 24/11/2023\",\n            \"bytes_received\": \"259.7 GB\",\n            \"bytes_sent\": \"19.0 GB\",\n            \"in_speed\": \"7.8 MB\",\n            \"out_speed\": \"565.0 KB\"\n        },\n        {\n            \"Date\": \"08:16:21, 24/11/2023\",\n            \"bytes_received\": \"259.7 GB\",\n            \"bytes_sent\": \"19.0 GB\",\n            \"in_speed\": \"7.8 MB\",\n            \"out_speed\": \"564.4 KB\"\n        },\n        {\n            \"Date\": \"08:16:19, 24/11/2023\",\n            \"bytes_received\": \"259.7 GB\",\n            \"bytes_sent\": \"19.0 GB\",\n            \"in_speed\": \"7.9 MB\",\n            \"out_speed\": \"573.5 KB\"\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "storage node device list",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/device/list/837cc2eb-4bd7-48cf-8fa6-bc0add222614",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "device",
                                "list",
                                "837cc2eb-4bd7-48cf-8fa6-bc0add222614"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "storage node device list",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/device/list/71e37018-384f-4fbf-b296-7c1ccec1274e",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "device",
                                        "list",
                                        "71e37018-384f-4fbf-b296-7c1ccec1274e"
                                    ]
                                }
                            },
                            "status": "INTERNAL SERVER ERROR",
                            "code": 500,
                            "_postman_previewlanguage": "html",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:18:15 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "text/html; charset=utf-8"
                                },
                                {
                                    "key": "content-length",
                                    "value": "13047"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"alceml_bdev\": \"node_7c1ccec1274e_dev_e1a57b75a5dc\",\n            \"alloc_bdev\": \"nvme_1fn1\",\n            \"capacity\": 1250000000000,\n            \"cluster_device_order\": 1,\n            \"deleted\": false,\n            \"device_name\": \"nvme_1fn1\",\n            \"id\": \"db50c1b6-e9f5-470c-8b53-e1a57b75a5dc\",\n            \"model_id\": \"Amazon EC2 NVMe Instance Storage\",\n            \"name\": \"NVMeDevice\",\n            \"node_id\": \"71e37018-384f-4fbf-b296-7c1ccec1274e\",\n            \"nvme_bdev\": \"nvme_1fn1\",\n            \"nvmf_ip\": \"10.0.4.240\",\n            \"nvmf_nqn\": \"nqn.2023-02.io.simplyblock:ip-10-0-4-240:dev:db50c1b6-e9f5-470c-8b53-e1a57b75a5dc\",\n            \"nvmf_port\": 4420,\n            \"object_type\": \"object\",\n            \"overload_percentage\": 0,\n            \"partitions_count\": 1164,\n            \"pcie_address\": \"0000:00:1f.0\",\n            \"pt_bdev\": \"node_7c1ccec1274e_dev_e1a57b75a5dc_PT\",\n            \"remote_bdev\": \"\",\n            \"sequential_number\": 0,\n            \"serial_number\": \"AWS23AC6C17E00CA2E7C\",\n            \"size\": 1250000000000,\n            \"status\": \"online\",\n            \"testing_bdev\": \"nvme_1fn1_test\",\n            \"uuid\": \"db50c1b6-e9f5-470c-8b53-e1a57b75a5dc\"\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "storage node device capacity",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/device/capacity/db50c1b6-e9f5-470c-8b53-e1a57b75a5dc",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "device",
                                "capacity",
                                "db50c1b6-e9f5-470c-8b53-e1a57b75a5dc"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "storage node device capacity",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/device/capacity/19a8b4e4-c376-4b5b-9624-ddebbf92de3f",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "device",
                                        "capacity",
                                        "19a8b4e4-c376-4b5b-9624-ddebbf92de3f"
                                    ]
                                }
                            },
                            "status": "INTERNAL SERVER ERROR",
                            "code": 500,
                            "_postman_previewlanguage": "html",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:04 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "text/html; charset=utf-8"
                                },
                                {
                                    "key": "content-length",
                                    "value": "13061"
                                }
                            ],
                            "cookie": [],
                            "body": "<!doctype html><html lang=en><head><title>TypeError: &#39;NVMeDevice&#39; object is not subscriptable\n // Werkzeug Debugger</title><link rel=\"stylesheet\" href=\"?__debugger__=yes&amp;cmd=resource&amp;f=style.css\"><link rel=\"shortcut icon\"\n        href=\"?__debugger__=yes&amp;cmd=resource&amp;f=console.png\"><script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js\"></script><script>\n      var CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED = false,\n          SECRET = \"MuKdQXFWjw6cXpMK8BE0\";\n    </script></head><body style=\"background-color: #fff\"><div class=\"debugger\"><h1>TypeError</h1><div class=\"detail\"><p class=\"errormsg\">TypeError: &#39;NVMeDevice&#39; object is not subscriptable\n</p></div><h2 class=\"traceback\">Traceback <em>(most recent call last)</em></h2><div class=\"traceback\"><h3></h3><ul><li><div class=\"frame\" id=\"frame-140267026186640\"><h4>File <cite class=\"filename\">\"/usr/local/lib/python3.8/site-packages/flask/app.py\"</cite>,\n      line<em class=\"line\">1478</em>,\n      in<code class=\"function\">__call__</code></h4><div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><pre class=\"line before\"><span class=\"ws\">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><pre class=\"line before\"><span class=\"ws\">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><pre class=\"line before\"><span class=\"ws\">        </span>wrapped to apply middleware.</pre><pre class=\"line before\"><span class=\"ws\">        </span>&#34;&#34;&#34;</pre><pre class=\"line current\"><span class=\"ws\">        </span>return self.wsgi_app(environ, start_response)</pre></div></div><li><div class=\"frame\" id=\"frame-140267026189552\"><h4>File <cite class=\"filename\">\"/usr/local/lib/python3.8/site-packages/flask/app.py\"</cite>,\n      line<em class=\"line\">1458</em>,\n      in<code class=\"function\">wsgi_app</code></h4><div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>try:</pre><pre class=\"line before\"><span class=\"ws\">                </span>ctx.push()</pre><pre class=\"line before\"><span class=\"ws\">                </span>response = self.full_dispatch_request()</pre><pre class=\"line before\"><span class=\"ws\">            </span>except Exception as e:</pre><pre class=\"line before\"><span class=\"ws\">                </span>error = e</pre><pre class=\"line current\"><span class=\"ws\">                </span>response = self.handle_exception(e)</pre><pre class=\"line after\"><span class=\"ws\">            </span>except:  # noqa: B001</pre><pre class=\"line after\"><span class=\"ws\">                </span>error = sys.exc_info()[1]</pre><pre class=\"line after\"><span class=\"ws\">                </span>raise</pre><pre class=\"line after\"><span class=\"ws\">            </span>return response(environ, start_response)</pre><pre class=\"line after\"><span class=\"ws\">        </span>finally:</pre></div></div><li><div class=\"frame\" id=\"frame-140267043291200\"><h4>File <cite class=\"filename\">\"/usr/local/lib/python3.8/site-packages/flask/app.py\"</cite>,\n      line<em class=\"line\">1455</em>,\n      in<code class=\"function\">wsgi_app</code></h4><div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">        </span>ctx = self.request_context(environ)</pre><pre class=\"line before\"><span class=\"ws\">        </span>error: BaseException | None = None</pre><pre class=\"line before\"><span class=\"ws\">        </span>try:</pre><pre class=\"line before\"><span class=\"ws\">            </span>try:</pre><pre class=\"line before\"><span class=\"ws\">                </span>ctx.push()</pre><pre class=\"line current\"><span class=\"ws\">                </span>response = self.full_dispatch_request()</pre><pre class=\"line after\"><span class=\"ws\">            </span>except Exception as e:</pre><pre class=\"line after\"><span class=\"ws\">                </span>error = e</pre><pre class=\"line after\"><span class=\"ws\">                </span>response = self.handle_exception(e)</pre><pre class=\"line after\"><span class=\"ws\">            </span>except:  # noqa: B001</pre><pre class=\"line after\"><span class=\"ws\">                </span>error = sys.exc_info()[1]</pre></div></div><li><div class=\"frame\" id=\"frame-140267026182992\"><h4>File <cite class=\"filename\">\"/usr/local/lib/python3.8/site-packages/flask/app.py\"</cite>,\n      line<em class=\"line\">869</em>,\n      in<code class=\"function\">full_dispatch_request</code></h4><div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre><pre class=\"line before\"><span class=\"ws\">            </span>rv = self.preprocess_request()</pre><pre class=\"line before\"><span class=\"ws\">            </span>if rv is None:</pre><pre class=\"line before\"><span class=\"ws\">                </span>rv = self.dispatch_request()</pre><pre class=\"line before\"><span class=\"ws\">        </span>except Exception as e:</pre><pre class=\"line current\"><span class=\"ws\">            </span>rv = self.handle_user_exception(e)</pre><pre class=\"line after\"><span class=\"ws\">        </span>return self.finalize_request(rv)</pre><pre class=\"line after\"><span class=\"ws\"></span></pre><pre class=\"line after\"><span class=\"ws\">    </span>def finalize_request(</pre><pre class=\"line after\"><span class=\"ws\">        </span>self,</pre><pre class=\"line after\"><span class=\"ws\">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div></div><li><div class=\"frame\" id=\"frame-140267026184896\"><h4>File <cite class=\"filename\">\"/usr/local/lib/python3.8/site-packages/flask/app.py\"</cite>,\n      line<em class=\"line\">867</em>,\n      in<code class=\"function\">full_dispatch_request</code></h4><div class=\"source library\"><pre class=\"line before\"><span class=\"ws\"></span></pre><pre class=\"line before\"><span class=\"ws\">        </span>try:</pre><pre class=\"line before\"><span class=\"ws\">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre><pre class=\"line before\"><span class=\"ws\">            </span>rv = self.preprocess_request()</pre><pre class=\"line before\"><span class=\"ws\">            </span>if rv is None:</pre><pre class=\"line current\"><span class=\"ws\">                </span>rv = self.dispatch_request()</pre><pre class=\"line after\"><span class=\"ws\">        </span>except Exception as e:</pre><pre class=\"line after\"><span class=\"ws\">            </span>rv = self.handle_user_exception(e)</pre><pre class=\"line after\"><span class=\"ws\">        </span>return self.finalize_request(rv)</pre><pre class=\"line after\"><span class=\"ws\"></span></pre><pre class=\"line after\"><span class=\"ws\">    </span>def finalize_request(</pre></div></div><li><div class=\"frame\" id=\"frame-140267026182208\"><h4>File <cite class=\"filename\">\"/usr/local/lib/python3.8/site-packages/flask/app.py\"</cite>,\n      line<em class=\"line\">852</em>,\n      in<code class=\"function\">dispatch_request</code></h4><div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>and req.method == &#34;OPTIONS&#34;</pre><pre class=\"line before\"><span class=\"ws\">        </span>):</pre><pre class=\"line before\"><span class=\"ws\">            </span>return self.make_default_options_response()</pre><pre class=\"line before\"><span class=\"ws\">        </span># otherwise dispatch to the handler for that endpoint</pre><pre class=\"line before\"><span class=\"ws\">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><pre class=\"line current\"><span class=\"ws\">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><pre class=\"line after\"><span class=\"ws\"></span></pre><pre class=\"line after\"><span class=\"ws\">    </span>def full_dispatch_request(self) -&gt; Response:</pre><pre class=\"line after\"><span class=\"ws\">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><pre class=\"line after\"><span class=\"ws\">        </span>pre and postprocessing as well as HTTP exception catching and</pre><pre class=\"line after\"><span class=\"ws\">        </span>error handling.</pre></div></div><li><div class=\"frame\" id=\"frame-140267026185008\"><h4>File <cite class=\"filename\">\"/app/WebApp/blueprints/web_api_device.py\"</cite>,\n      line<em class=\"line\">52</em>,\n      in<code class=\"function\">device_capacity</code></h4><div class=\"source \"><pre class=\"line before\"><span class=\"ws\"></span>def device_capacity(uuid):</pre><pre class=\"line before\"><span class=\"ws\">    </span>devices = db_controller.get_storage_devices(uuid)</pre><pre class=\"line before\"><span class=\"ws\">    </span>if not devices:</pre><pre class=\"line before\"><span class=\"ws\">        </span>return utils.get_response_error(f&#34;devices not found: {uuid}&#34;, 404)</pre><pre class=\"line before\"><span class=\"ws\">    </span>out = {</pre><pre class=\"line current\"><span class=\"ws\">        </span>&#34;provisioned&#34;: devices[0].size,</pre><pre class=\"line after\"><span class=\"ws\">        </span>&#34;util_percent&#34;: 0,</pre><pre class=\"line after\"><span class=\"ws\">        </span>&#34;util&#34;: 0,</pre><pre class=\"line after\"><span class=\"ws\">    </span>}</pre><pre class=\"line after\"><span class=\"ws\">    </span>return utils.get_response(out)</pre><pre class=\"line after\"><span class=\"ws\"></span></pre></div></div></ul><blockquote>TypeError: &#39;NVMeDevice&#39; object is not subscriptable\n</blockquote></div><div class=\"plain\"><p>\n      This is the Copy/Paste friendly version of the traceback.\n    </p><textarea cols=\"50\" rows=\"10\" name=\"code\" readonly>Traceback (most recent call last):\n  File &#34;/usr/local/lib/python3.8/site-packages/flask/app.py&#34;, line 1478, in __call__\n    return self.wsgi_app(environ, start_response)\n  File &#34;/usr/local/lib/python3.8/site-packages/flask/app.py&#34;, line 1458, in wsgi_app\n    response = self.handle_exception(e)\n  File &#34;/usr/local/lib/python3.8/site-packages/flask/app.py&#34;, line 1455, in wsgi_app\n    response = self.full_dispatch_request()\n  File &#34;/usr/local/lib/python3.8/site-packages/flask/app.py&#34;, line 869, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File &#34;/usr/local/lib/python3.8/site-packages/flask/app.py&#34;, line 867, in full_dispatch_request\n    rv = self.dispatch_request()\n  File &#34;/usr/local/lib/python3.8/site-packages/flask/app.py&#34;, line 852, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)\n  File &#34;/app/WebApp/blueprints/web_api_device.py&#34;, line 52, in device_capacity\n    &#34;provisioned&#34;: devices[0].size,\nTypeError: &#39;NVMeDevice&#39; object is not subscriptable\n</textarea></div><div class=\"explanation\">\n  The debugger caught an exception in your WSGI application.  You can now\n  look at the traceback which led to the error.  <span class=\"nojavascript\">\n  If you enable JavaScript you can also use additional features such as code\n  execution (if the evalex feature is enabled), automatic pasting of the\n  exceptions and much more.</span></div><div class=\"footer\">\n        Brought to you by <strong class=\"arthur\">DON'T PANIC</strong>, your\n        friendly Werkzeug powered traceback interpreter.</div>\n    </div><div class=\"pin-prompt\"><div class=\"inner\"><h3>Console Locked</h3><p>\n          The console is locked and needs to be unlocked by entering the PIN.\n          You can find the PIN printed out on the standard output of your\n          shell that runs the server.\n        <form><p>PIN:\n            <input type=text name=pin size=14><input type=submit name=btn value=\"Confirm Pin\">\n        </form>\n      </div>\n    </div>\n  </body></html>\n<!--\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.8/site-packages/flask/app.py\", line 1478, in __call__\n    return self.wsgi_app(environ, start_response)\n  File \"/usr/local/lib/python3.8/site-packages/flask/app.py\", line 1458, in wsgi_app\n    response = self.handle_exception(e)\n  File \"/usr/local/lib/python3.8/site-packages/flask/app.py\", line 1455, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"/usr/local/lib/python3.8/site-packages/flask/app.py\", line 869, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File \"/usr/local/lib/python3.8/site-packages/flask/app.py\", line 867, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"/usr/local/lib/python3.8/site-packages/flask/app.py\", line 852, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)\n  File \"/app/WebApp/blueprints/web_api_device.py\", line 52, in device_capacity\n    \"provisioned\": devices[0].size,\nTypeError: 'NVMeDevice' object is not subscriptable\n\n\n-->\n"
                        }
                    ]
                },
                {
                    "name": "storage node device capacity history",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/device/capacity/db50c1b6-e9f5-470c-8b53-e1a57b75a5dc/history/1h",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "device",
                                "capacity",
                                "db50c1b6-e9f5-470c-8b53-e1a57b75a5dc",
                                "history",
                                "1h"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "storage node device capacity",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/device/capacity/19a8b4e4-c376-4b5b-9624-ddebbf92de3f",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "device",
                                        "capacity",
                                        "19a8b4e4-c376-4b5b-9624-ddebbf92de3f"
                                    ]
                                }
                            },
                            "status": "INTERNAL SERVER ERROR",
                            "code": 500,
                            "_postman_previewlanguage": "html",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:04 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "text/html; charset=utf-8"
                                },
                                {
                                    "key": "content-length",
                                    "value": "13061"
                                }
                            ],
                            "cookie": [],
                            "body": "<!doctype html><html lang=en><head><title>TypeError: &#39;NVMeDevice&#39; object is not subscriptable\n // Werkzeug Debugger</title><link rel=\"stylesheet\" href=\"?__debugger__=yes&amp;cmd=resource&amp;f=style.css\"><link rel=\"shortcut icon\"\n        href=\"?__debugger__=yes&amp;cmd=resource&amp;f=console.png\"><script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js\"></script><script>\n      var CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED = false,\n          SECRET = \"MuKdQXFWjw6cXpMK8BE0\";\n    </script></head><body style=\"background-color: #fff\"><div class=\"debugger\"><h1>TypeError</h1><div class=\"detail\"><p class=\"errormsg\">TypeError: &#39;NVMeDevice&#39; object is not subscriptable\n</p></div><h2 class=\"traceback\">Traceback <em>(most recent call last)</em></h2><div class=\"traceback\"><h3></h3><ul><li><div class=\"frame\" id=\"frame-140267026186640\"><h4>File <cite class=\"filename\">\"/usr/local/lib/python3.8/site-packages/flask/app.py\"</cite>,\n      line<em class=\"line\">1478</em>,\n      in<code class=\"function\">__call__</code></h4><div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><pre class=\"line before\"><span class=\"ws\">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><pre class=\"line before\"><span class=\"ws\">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><pre class=\"line before\"><span class=\"ws\">        </span>wrapped to apply middleware.</pre><pre class=\"line before\"><span class=\"ws\">        </span>&#34;&#34;&#34;</pre><pre class=\"line current\"><span class=\"ws\">        </span>return self.wsgi_app(environ, start_response)</pre></div></div><li><div class=\"frame\" id=\"frame-140267026189552\"><h4>File <cite class=\"filename\">\"/usr/local/lib/python3.8/site-packages/flask/app.py\"</cite>,\n      line<em class=\"line\">1458</em>,\n      in<code class=\"function\">wsgi_app</code></h4><div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>try:</pre><pre class=\"line before\"><span class=\"ws\">                </span>ctx.push()</pre><pre class=\"line before\"><span class=\"ws\">                </span>response = self.full_dispatch_request()</pre><pre class=\"line before\"><span class=\"ws\">            </span>except Exception as e:</pre><pre class=\"line before\"><span class=\"ws\">                </span>error = e</pre><pre class=\"line current\"><span class=\"ws\">                </span>response = self.handle_exception(e)</pre><pre class=\"line after\"><span class=\"ws\">            </span>except:  # noqa: B001</pre><pre class=\"line after\"><span class=\"ws\">                </span>error = sys.exc_info()[1]</pre><pre class=\"line after\"><span class=\"ws\">                </span>raise</pre><pre class=\"line after\"><span class=\"ws\">            </span>return response(environ, start_response)</pre><pre class=\"line after\"><span class=\"ws\">        </span>finally:</pre></div></div><li><div class=\"frame\" id=\"frame-140267043291200\"><h4>File <cite class=\"filename\">\"/usr/local/lib/python3.8/site-packages/flask/app.py\"</cite>,\n      line<em class=\"line\">1455</em>,\n      in<code class=\"function\">wsgi_app</code></h4><div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">        </span>ctx = self.request_context(environ)</pre><pre class=\"line before\"><span class=\"ws\">        </span>error: BaseException | None = None</pre><pre class=\"line before\"><span class=\"ws\">        </span>try:</pre><pre class=\"line before\"><span class=\"ws\">            </span>try:</pre><pre class=\"line before\"><span class=\"ws\">                </span>ctx.push()</pre><pre class=\"line current\"><span class=\"ws\">                </span>response = self.full_dispatch_request()</pre><pre class=\"line after\"><span class=\"ws\">            </span>except Exception as e:</pre><pre class=\"line after\"><span class=\"ws\">                </span>error = e</pre><pre class=\"line after\"><span class=\"ws\">                </span>response = self.handle_exception(e)</pre><pre class=\"line after\"><span class=\"ws\">            </span>except:  # noqa: B001</pre><pre class=\"line after\"><span class=\"ws\">                </span>error = sys.exc_info()[1]</pre></div></div><li><div class=\"frame\" id=\"frame-140267026182992\"><h4>File <cite class=\"filename\">\"/usr/local/lib/python3.8/site-packages/flask/app.py\"</cite>,\n      line<em class=\"line\">869</em>,\n      in<code class=\"function\">full_dispatch_request</code></h4><div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre><pre class=\"line before\"><span class=\"ws\">            </span>rv = self.preprocess_request()</pre><pre class=\"line before\"><span class=\"ws\">            </span>if rv is None:</pre><pre class=\"line before\"><span class=\"ws\">                </span>rv = self.dispatch_request()</pre><pre class=\"line before\"><span class=\"ws\">        </span>except Exception as e:</pre><pre class=\"line current\"><span class=\"ws\">            </span>rv = self.handle_user_exception(e)</pre><pre class=\"line after\"><span class=\"ws\">        </span>return self.finalize_request(rv)</pre><pre class=\"line after\"><span class=\"ws\"></span></pre><pre class=\"line after\"><span class=\"ws\">    </span>def finalize_request(</pre><pre class=\"line after\"><span class=\"ws\">        </span>self,</pre><pre class=\"line after\"><span class=\"ws\">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div></div><li><div class=\"frame\" id=\"frame-140267026184896\"><h4>File <cite class=\"filename\">\"/usr/local/lib/python3.8/site-packages/flask/app.py\"</cite>,\n      line<em class=\"line\">867</em>,\n      in<code class=\"function\">full_dispatch_request</code></h4><div class=\"source library\"><pre class=\"line before\"><span class=\"ws\"></span></pre><pre class=\"line before\"><span class=\"ws\">        </span>try:</pre><pre class=\"line before\"><span class=\"ws\">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre><pre class=\"line before\"><span class=\"ws\">            </span>rv = self.preprocess_request()</pre><pre class=\"line before\"><span class=\"ws\">            </span>if rv is None:</pre><pre class=\"line current\"><span class=\"ws\">                </span>rv = self.dispatch_request()</pre><pre class=\"line after\"><span class=\"ws\">        </span>except Exception as e:</pre><pre class=\"line after\"><span class=\"ws\">            </span>rv = self.handle_user_exception(e)</pre><pre class=\"line after\"><span class=\"ws\">        </span>return self.finalize_request(rv)</pre><pre class=\"line after\"><span class=\"ws\"></span></pre><pre class=\"line after\"><span class=\"ws\">    </span>def finalize_request(</pre></div></div><li><div class=\"frame\" id=\"frame-140267026182208\"><h4>File <cite class=\"filename\">\"/usr/local/lib/python3.8/site-packages/flask/app.py\"</cite>,\n      line<em class=\"line\">852</em>,\n      in<code class=\"function\">dispatch_request</code></h4><div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>and req.method == &#34;OPTIONS&#34;</pre><pre class=\"line before\"><span class=\"ws\">        </span>):</pre><pre class=\"line before\"><span class=\"ws\">            </span>return self.make_default_options_response()</pre><pre class=\"line before\"><span class=\"ws\">        </span># otherwise dispatch to the handler for that endpoint</pre><pre class=\"line before\"><span class=\"ws\">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><pre class=\"line current\"><span class=\"ws\">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><pre class=\"line after\"><span class=\"ws\"></span></pre><pre class=\"line after\"><span class=\"ws\">    </span>def full_dispatch_request(self) -&gt; Response:</pre><pre class=\"line after\"><span class=\"ws\">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><pre class=\"line after\"><span class=\"ws\">        </span>pre and postprocessing as well as HTTP exception catching and</pre><pre class=\"line after\"><span class=\"ws\">        </span>error handling.</pre></div></div><li><div class=\"frame\" id=\"frame-140267026185008\"><h4>File <cite class=\"filename\">\"/app/WebApp/blueprints/web_api_device.py\"</cite>,\n      line<em class=\"line\">52</em>,\n      in<code class=\"function\">device_capacity</code></h4><div class=\"source \"><pre class=\"line before\"><span class=\"ws\"></span>def device_capacity(uuid):</pre><pre class=\"line before\"><span class=\"ws\">    </span>devices = db_controller.get_storage_devices(uuid)</pre><pre class=\"line before\"><span class=\"ws\">    </span>if not devices:</pre><pre class=\"line before\"><span class=\"ws\">        </span>return utils.get_response_error(f&#34;devices not found: {uuid}&#34;, 404)</pre><pre class=\"line before\"><span class=\"ws\">    </span>out = {</pre><pre class=\"line current\"><span class=\"ws\">        </span>&#34;provisioned&#34;: devices[0].size,</pre><pre class=\"line after\"><span class=\"ws\">        </span>&#34;util_percent&#34;: 0,</pre><pre class=\"line after\"><span class=\"ws\">        </span>&#34;util&#34;: 0,</pre><pre class=\"line after\"><span class=\"ws\">    </span>}</pre><pre class=\"line after\"><span class=\"ws\">    </span>return utils.get_response(out)</pre><pre class=\"line after\"><span class=\"ws\"></span></pre></div></div></ul><blockquote>TypeError: &#39;NVMeDevice&#39; object is not subscriptable\n</blockquote></div><div class=\"plain\"><p>\n      This is the Copy/Paste friendly version of the traceback.\n    </p><textarea cols=\"50\" rows=\"10\" name=\"code\" readonly>Traceback (most recent call last):\n  File &#34;/usr/local/lib/python3.8/site-packages/flask/app.py&#34;, line 1478, in __call__\n    return self.wsgi_app(environ, start_response)\n  File &#34;/usr/local/lib/python3.8/site-packages/flask/app.py&#34;, line 1458, in wsgi_app\n    response = self.handle_exception(e)\n  File &#34;/usr/local/lib/python3.8/site-packages/flask/app.py&#34;, line 1455, in wsgi_app\n    response = self.full_dispatch_request()\n  File &#34;/usr/local/lib/python3.8/site-packages/flask/app.py&#34;, line 869, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File &#34;/usr/local/lib/python3.8/site-packages/flask/app.py&#34;, line 867, in full_dispatch_request\n    rv = self.dispatch_request()\n  File &#34;/usr/local/lib/python3.8/site-packages/flask/app.py&#34;, line 852, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)\n  File &#34;/app/WebApp/blueprints/web_api_device.py&#34;, line 52, in device_capacity\n    &#34;provisioned&#34;: devices[0].size,\nTypeError: &#39;NVMeDevice&#39; object is not subscriptable\n</textarea></div><div class=\"explanation\">\n  The debugger caught an exception in your WSGI application.  You can now\n  look at the traceback which led to the error.  <span class=\"nojavascript\">\n  If you enable JavaScript you can also use additional features such as code\n  execution (if the evalex feature is enabled), automatic pasting of the\n  exceptions and much more.</span></div><div class=\"footer\">\n        Brought to you by <strong class=\"arthur\">DON'T PANIC</strong>, your\n        friendly Werkzeug powered traceback interpreter.</div>\n    </div><div class=\"pin-prompt\"><div class=\"inner\"><h3>Console Locked</h3><p>\n          The console is locked and needs to be unlocked by entering the PIN.\n          You can find the PIN printed out on the standard output of your\n          shell that runs the server.\n        <form><p>PIN:\n            <input type=text name=pin size=14><input type=submit name=btn value=\"Confirm Pin\">\n        </form>\n      </div>\n    </div>\n  </body></html>\n<!--\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.8/site-packages/flask/app.py\", line 1478, in __call__\n    return self.wsgi_app(environ, start_response)\n  File \"/usr/local/lib/python3.8/site-packages/flask/app.py\", line 1458, in wsgi_app\n    response = self.handle_exception(e)\n  File \"/usr/local/lib/python3.8/site-packages/flask/app.py\", line 1455, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"/usr/local/lib/python3.8/site-packages/flask/app.py\", line 869, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File \"/usr/local/lib/python3.8/site-packages/flask/app.py\", line 867, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"/usr/local/lib/python3.8/site-packages/flask/app.py\", line 852, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)\n  File \"/app/WebApp/blueprints/web_api_device.py\", line 52, in device_capacity\n    \"provisioned\": devices[0].size,\nTypeError: 'NVMeDevice' object is not subscriptable\n\n\n-->\n"
                        }
                    ]
                },
                {
                    "name": "storage node device iostats",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/device/iostats/837cc2eb-4bd7-48cf-8fa6-bc0add222614",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "device",
                                "iostats",
                                "837cc2eb-4bd7-48cf-8fa6-bc0add222614"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "storage node device iostats",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/device/iostats/19a8b4e4-c376-4b5b-9624-ddebbf92de3f",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "device",
                                        "iostats",
                                        "19a8b4e4-c376-4b5b-9624-ddebbf92de3f"
                                    ]
                                }
                            },
                            "status": "INTERNAL SERVER ERROR",
                            "code": 500,
                            "_postman_previewlanguage": "html",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:16 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "text/html; charset=utf-8"
                                },
                                {
                                    "key": "content-length",
                                    "value": "13093"
                                }
                            ],
                            "cookie": [],
                            "body": "<!doctype html><html lang=en><head><title>TypeError: &#39;NVMeDevice&#39; object is not subscriptable\n // Werkzeug Debugger</title><link rel=\"stylesheet\" href=\"?__debugger__=yes&amp;cmd=resource&amp;f=style.css\"><link rel=\"shortcut icon\"\n        href=\"?__debugger__=yes&amp;cmd=resource&amp;f=console.png\"><script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js\"></script><script>\n      var CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED = false,\n          SECRET = \"MuKdQXFWjw6cXpMK8BE0\";\n    </script></head><body style=\"background-color: #fff\"><div class=\"debugger\"><h1>TypeError</h1><div class=\"detail\"><p class=\"errormsg\">TypeError: &#39;NVMeDevice&#39; object is not subscriptable\n</p></div><h2 class=\"traceback\">Traceback <em>(most recent call last)</em></h2><div class=\"traceback\"><h3></h3><ul><li><div class=\"frame\" id=\"frame-140267016927936\"><h4>File <cite class=\"filename\">\"/usr/local/lib/python3.8/site-packages/flask/app.py\"</cite>,\n      line<em class=\"line\">1478</em>,\n      in<code class=\"function\">__call__</code></h4><div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><pre class=\"line before\"><span class=\"ws\">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><pre class=\"line before\"><span class=\"ws\">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><pre class=\"line before\"><span class=\"ws\">        </span>wrapped to apply middleware.</pre><pre class=\"line before\"><span class=\"ws\">        </span>&#34;&#34;&#34;</pre><pre class=\"line current\"><span class=\"ws\">        </span>return self.wsgi_app(environ, start_response)</pre></div></div><li><div class=\"frame\" id=\"frame-140267016928496\"><h4>File <cite class=\"filename\">\"/usr/local/lib/python3.8/site-packages/flask/app.py\"</cite>,\n      line<em class=\"line\">1458</em>,\n      in<code class=\"function\">wsgi_app</code></h4><div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>try:</pre><pre class=\"line before\"><span class=\"ws\">                </span>ctx.push()</pre><pre class=\"line before\"><span class=\"ws\">                </span>response = self.full_dispatch_request()</pre><pre class=\"line before\"><span class=\"ws\">            </span>except Exception as e:</pre><pre class=\"line before\"><span class=\"ws\">                </span>error = e</pre><pre class=\"line current\"><span class=\"ws\">                </span>response = self.handle_exception(e)</pre><pre class=\"line after\"><span class=\"ws\">            </span>except:  # noqa: B001</pre><pre class=\"line after\"><span class=\"ws\">                </span>error = sys.exc_info()[1]</pre><pre class=\"line after\"><span class=\"ws\">                </span>raise</pre><pre class=\"line after\"><span class=\"ws\">            </span>return response(environ, start_response)</pre><pre class=\"line after\"><span class=\"ws\">        </span>finally:</pre></div></div><li><div class=\"frame\" id=\"frame-140267016929056\"><h4>File <cite class=\"filename\">\"/usr/local/lib/python3.8/site-packages/flask/app.py\"</cite>,\n      line<em class=\"line\">1455</em>,\n      in<code class=\"function\">wsgi_app</code></h4><div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">        </span>ctx = self.request_context(environ)</pre><pre class=\"line before\"><span class=\"ws\">        </span>error: BaseException | None = None</pre><pre class=\"line before\"><span class=\"ws\">        </span>try:</pre><pre class=\"line before\"><span class=\"ws\">            </span>try:</pre><pre class=\"line before\"><span class=\"ws\">                </span>ctx.push()</pre><pre class=\"line current\"><span class=\"ws\">                </span>response = self.full_dispatch_request()</pre><pre class=\"line after\"><span class=\"ws\">            </span>except Exception as e:</pre><pre class=\"line after\"><span class=\"ws\">                </span>error = e</pre><pre class=\"line after\"><span class=\"ws\">                </span>response = self.handle_exception(e)</pre><pre class=\"line after\"><span class=\"ws\">            </span>except:  # noqa: B001</pre><pre class=\"line after\"><span class=\"ws\">                </span>error = sys.exc_info()[1]</pre></div></div><li><div class=\"frame\" id=\"frame-140267016761408\"><h4>File <cite class=\"filename\">\"/usr/local/lib/python3.8/site-packages/flask/app.py\"</cite>,\n      line<em class=\"line\">869</em>,\n      in<code class=\"function\">full_dispatch_request</code></h4><div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre><pre class=\"line before\"><span class=\"ws\">            </span>rv = self.preprocess_request()</pre><pre class=\"line before\"><span class=\"ws\">            </span>if rv is None:</pre><pre class=\"line before\"><span class=\"ws\">                </span>rv = self.dispatch_request()</pre><pre class=\"line before\"><span class=\"ws\">        </span>except Exception as e:</pre><pre class=\"line current\"><span class=\"ws\">            </span>rv = self.handle_user_exception(e)</pre><pre class=\"line after\"><span class=\"ws\">        </span>return self.finalize_request(rv)</pre><pre class=\"line after\"><span class=\"ws\"></span></pre><pre class=\"line after\"><span class=\"ws\">    </span>def finalize_request(</pre><pre class=\"line after\"><span class=\"ws\">        </span>self,</pre><pre class=\"line after\"><span class=\"ws\">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div></div><li><div class=\"frame\" id=\"frame-140267016761520\"><h4>File <cite class=\"filename\">\"/usr/local/lib/python3.8/site-packages/flask/app.py\"</cite>,\n      line<em class=\"line\">867</em>,\n      in<code class=\"function\">full_dispatch_request</code></h4><div class=\"source library\"><pre class=\"line before\"><span class=\"ws\"></span></pre><pre class=\"line before\"><span class=\"ws\">        </span>try:</pre><pre class=\"line before\"><span class=\"ws\">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre><pre class=\"line before\"><span class=\"ws\">            </span>rv = self.preprocess_request()</pre><pre class=\"line before\"><span class=\"ws\">            </span>if rv is None:</pre><pre class=\"line current\"><span class=\"ws\">                </span>rv = self.dispatch_request()</pre><pre class=\"line after\"><span class=\"ws\">        </span>except Exception as e:</pre><pre class=\"line after\"><span class=\"ws\">            </span>rv = self.handle_user_exception(e)</pre><pre class=\"line after\"><span class=\"ws\">        </span>return self.finalize_request(rv)</pre><pre class=\"line after\"><span class=\"ws\"></span></pre><pre class=\"line after\"><span class=\"ws\">    </span>def finalize_request(</pre></div></div><li><div class=\"frame\" id=\"frame-140267016761632\"><h4>File <cite class=\"filename\">\"/usr/local/lib/python3.8/site-packages/flask/app.py\"</cite>,\n      line<em class=\"line\">852</em>,\n      in<code class=\"function\">dispatch_request</code></h4><div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>and req.method == &#34;OPTIONS&#34;</pre><pre class=\"line before\"><span class=\"ws\">        </span>):</pre><pre class=\"line before\"><span class=\"ws\">            </span>return self.make_default_options_response()</pre><pre class=\"line before\"><span class=\"ws\">        </span># otherwise dispatch to the handler for that endpoint</pre><pre class=\"line before\"><span class=\"ws\">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><pre class=\"line current\"><span class=\"ws\">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><pre class=\"line after\"><span class=\"ws\"></span></pre><pre class=\"line after\"><span class=\"ws\">    </span>def full_dispatch_request(self) -&gt; Response:</pre><pre class=\"line after\"><span class=\"ws\">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><pre class=\"line after\"><span class=\"ws\">        </span>pre and postprocessing as well as HTTP exception catching and</pre><pre class=\"line after\"><span class=\"ws\">        </span>error handling.</pre></div></div><li><div class=\"frame\" id=\"frame-140267016761744\"><h4>File <cite class=\"filename\">\"/app/WebApp/blueprints/web_api_device.py\"</cite>,\n      line<em class=\"line\">65</em>,\n      in<code class=\"function\">device_iostats</code></h4><div class=\"source \"><pre class=\"line before\"><span class=\"ws\"></span>def device_iostats(uuid):</pre><pre class=\"line before\"><span class=\"ws\">    </span>devices = db_controller.get_storage_devices(uuid)</pre><pre class=\"line before\"><span class=\"ws\">    </span>if not devices:</pre><pre class=\"line before\"><span class=\"ws\">        </span>return utils.get_response_error(f&#34;devices not found: {uuid}&#34;, 404)</pre><pre class=\"line before\"><span class=\"ws\"></span></pre><pre class=\"line current\"><span class=\"ws\">    </span>stats = db_controller.get_device_stats(devices[0])</pre><pre class=\"line after\"><span class=\"ws\">    </span>data = []</pre><pre class=\"line after\"><span class=\"ws\">    </span>for st in stats:</pre><pre class=\"line after\"><span class=\"ws\">        </span>data.append(st.get_clean_dict())</pre><pre class=\"line after\"><span class=\"ws\">    </span>return utils.get_response(data)</pre><pre class=\"line after\"><span class=\"ws\"></span></pre></div></div></ul><blockquote>TypeError: &#39;NVMeDevice&#39; object is not subscriptable\n</blockquote></div><div class=\"plain\"><p>\n      This is the Copy/Paste friendly version of the traceback.\n    </p><textarea cols=\"50\" rows=\"10\" name=\"code\" readonly>Traceback (most recent call last):\n  File &#34;/usr/local/lib/python3.8/site-packages/flask/app.py&#34;, line 1478, in __call__\n    return self.wsgi_app(environ, start_response)\n  File &#34;/usr/local/lib/python3.8/site-packages/flask/app.py&#34;, line 1458, in wsgi_app\n    response = self.handle_exception(e)\n  File &#34;/usr/local/lib/python3.8/site-packages/flask/app.py&#34;, line 1455, in wsgi_app\n    response = self.full_dispatch_request()\n  File &#34;/usr/local/lib/python3.8/site-packages/flask/app.py&#34;, line 869, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File &#34;/usr/local/lib/python3.8/site-packages/flask/app.py&#34;, line 867, in full_dispatch_request\n    rv = self.dispatch_request()\n  File &#34;/usr/local/lib/python3.8/site-packages/flask/app.py&#34;, line 852, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)\n  File &#34;/app/WebApp/blueprints/web_api_device.py&#34;, line 65, in device_iostats\n    stats = db_controller.get_device_stats(devices[0])\nTypeError: &#39;NVMeDevice&#39; object is not subscriptable\n</textarea></div><div class=\"explanation\">\n  The debugger caught an exception in your WSGI application.  You can now\n  look at the traceback which led to the error.  <span class=\"nojavascript\">\n  If you enable JavaScript you can also use additional features such as code\n  execution (if the evalex feature is enabled), automatic pasting of the\n  exceptions and much more.</span></div><div class=\"footer\">\n        Brought to you by <strong class=\"arthur\">DON'T PANIC</strong>, your\n        friendly Werkzeug powered traceback interpreter.</div>\n    </div><div class=\"pin-prompt\"><div class=\"inner\"><h3>Console Locked</h3><p>\n          The console is locked and needs to be unlocked by entering the PIN.\n          You can find the PIN printed out on the standard output of your\n          shell that runs the server.\n        <form><p>PIN:\n            <input type=text name=pin size=14><input type=submit name=btn value=\"Confirm Pin\">\n        </form>\n      </div>\n    </div>\n  </body></html>\n<!--\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.8/site-packages/flask/app.py\", line 1478, in __call__\n    return self.wsgi_app(environ, start_response)\n  File \"/usr/local/lib/python3.8/site-packages/flask/app.py\", line 1458, in wsgi_app\n    response = self.handle_exception(e)\n  File \"/usr/local/lib/python3.8/site-packages/flask/app.py\", line 1455, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"/usr/local/lib/python3.8/site-packages/flask/app.py\", line 869, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File \"/usr/local/lib/python3.8/site-packages/flask/app.py\", line 867, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"/usr/local/lib/python3.8/site-packages/flask/app.py\", line 852, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)\n  File \"/app/WebApp/blueprints/web_api_device.py\", line 65, in device_iostats\n    stats = db_controller.get_device_stats(devices[0])\nTypeError: 'NVMeDevice' object is not subscriptable\n\n\n-->\n"
                        }
                    ]
                },
                {
                    "name": "storage node device iostats history",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/device/iostats/1d4ecf3d-da0f-4913-b331-43046d42e678/history/1d",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "device",
                                "iostats",
                                "1d4ecf3d-da0f-4913-b331-43046d42e678",
                                "history",
                                "1d"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "storage node device iostats",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/device/iostats/19a8b4e4-c376-4b5b-9624-ddebbf92de3f",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "device",
                                        "iostats",
                                        "19a8b4e4-c376-4b5b-9624-ddebbf92de3f"
                                    ]
                                }
                            },
                            "status": "INTERNAL SERVER ERROR",
                            "code": 500,
                            "_postman_previewlanguage": "html",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:16 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "text/html; charset=utf-8"
                                },
                                {
                                    "key": "content-length",
                                    "value": "13093"
                                }
                            ],
                            "cookie": [],
                            "body": "<!doctype html><html lang=en><head><title>TypeError: &#39;NVMeDevice&#39; object is not subscriptable\n // Werkzeug Debugger</title><link rel=\"stylesheet\" href=\"?__debugger__=yes&amp;cmd=resource&amp;f=style.css\"><link rel=\"shortcut icon\"\n        href=\"?__debugger__=yes&amp;cmd=resource&amp;f=console.png\"><script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js\"></script><script>\n      var CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED = false,\n          SECRET = \"MuKdQXFWjw6cXpMK8BE0\";\n    </script></head><body style=\"background-color: #fff\"><div class=\"debugger\"><h1>TypeError</h1><div class=\"detail\"><p class=\"errormsg\">TypeError: &#39;NVMeDevice&#39; object is not subscriptable\n</p></div><h2 class=\"traceback\">Traceback <em>(most recent call last)</em></h2><div class=\"traceback\"><h3></h3><ul><li><div class=\"frame\" id=\"frame-140267016927936\"><h4>File <cite class=\"filename\">\"/usr/local/lib/python3.8/site-packages/flask/app.py\"</cite>,\n      line<em class=\"line\">1478</em>,\n      in<code class=\"function\">__call__</code></h4><div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><pre class=\"line before\"><span class=\"ws\">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><pre class=\"line before\"><span class=\"ws\">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><pre class=\"line before\"><span class=\"ws\">        </span>wrapped to apply middleware.</pre><pre class=\"line before\"><span class=\"ws\">        </span>&#34;&#34;&#34;</pre><pre class=\"line current\"><span class=\"ws\">        </span>return self.wsgi_app(environ, start_response)</pre></div></div><li><div class=\"frame\" id=\"frame-140267016928496\"><h4>File <cite class=\"filename\">\"/usr/local/lib/python3.8/site-packages/flask/app.py\"</cite>,\n      line<em class=\"line\">1458</em>,\n      in<code class=\"function\">wsgi_app</code></h4><div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>try:</pre><pre class=\"line before\"><span class=\"ws\">                </span>ctx.push()</pre><pre class=\"line before\"><span class=\"ws\">                </span>response = self.full_dispatch_request()</pre><pre class=\"line before\"><span class=\"ws\">            </span>except Exception as e:</pre><pre class=\"line before\"><span class=\"ws\">                </span>error = e</pre><pre class=\"line current\"><span class=\"ws\">                </span>response = self.handle_exception(e)</pre><pre class=\"line after\"><span class=\"ws\">            </span>except:  # noqa: B001</pre><pre class=\"line after\"><span class=\"ws\">                </span>error = sys.exc_info()[1]</pre><pre class=\"line after\"><span class=\"ws\">                </span>raise</pre><pre class=\"line after\"><span class=\"ws\">            </span>return response(environ, start_response)</pre><pre class=\"line after\"><span class=\"ws\">        </span>finally:</pre></div></div><li><div class=\"frame\" id=\"frame-140267016929056\"><h4>File <cite class=\"filename\">\"/usr/local/lib/python3.8/site-packages/flask/app.py\"</cite>,\n      line<em class=\"line\">1455</em>,\n      in<code class=\"function\">wsgi_app</code></h4><div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">        </span>ctx = self.request_context(environ)</pre><pre class=\"line before\"><span class=\"ws\">        </span>error: BaseException | None = None</pre><pre class=\"line before\"><span class=\"ws\">        </span>try:</pre><pre class=\"line before\"><span class=\"ws\">            </span>try:</pre><pre class=\"line before\"><span class=\"ws\">                </span>ctx.push()</pre><pre class=\"line current\"><span class=\"ws\">                </span>response = self.full_dispatch_request()</pre><pre class=\"line after\"><span class=\"ws\">            </span>except Exception as e:</pre><pre class=\"line after\"><span class=\"ws\">                </span>error = e</pre><pre class=\"line after\"><span class=\"ws\">                </span>response = self.handle_exception(e)</pre><pre class=\"line after\"><span class=\"ws\">            </span>except:  # noqa: B001</pre><pre class=\"line after\"><span class=\"ws\">                </span>error = sys.exc_info()[1]</pre></div></div><li><div class=\"frame\" id=\"frame-140267016761408\"><h4>File <cite class=\"filename\">\"/usr/local/lib/python3.8/site-packages/flask/app.py\"</cite>,\n      line<em class=\"line\">869</em>,\n      in<code class=\"function\">full_dispatch_request</code></h4><div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre><pre class=\"line before\"><span class=\"ws\">            </span>rv = self.preprocess_request()</pre><pre class=\"line before\"><span class=\"ws\">            </span>if rv is None:</pre><pre class=\"line before\"><span class=\"ws\">                </span>rv = self.dispatch_request()</pre><pre class=\"line before\"><span class=\"ws\">        </span>except Exception as e:</pre><pre class=\"line current\"><span class=\"ws\">            </span>rv = self.handle_user_exception(e)</pre><pre class=\"line after\"><span class=\"ws\">        </span>return self.finalize_request(rv)</pre><pre class=\"line after\"><span class=\"ws\"></span></pre><pre class=\"line after\"><span class=\"ws\">    </span>def finalize_request(</pre><pre class=\"line after\"><span class=\"ws\">        </span>self,</pre><pre class=\"line after\"><span class=\"ws\">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div></div><li><div class=\"frame\" id=\"frame-140267016761520\"><h4>File <cite class=\"filename\">\"/usr/local/lib/python3.8/site-packages/flask/app.py\"</cite>,\n      line<em class=\"line\">867</em>,\n      in<code class=\"function\">full_dispatch_request</code></h4><div class=\"source library\"><pre class=\"line before\"><span class=\"ws\"></span></pre><pre class=\"line before\"><span class=\"ws\">        </span>try:</pre><pre class=\"line before\"><span class=\"ws\">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre><pre class=\"line before\"><span class=\"ws\">            </span>rv = self.preprocess_request()</pre><pre class=\"line before\"><span class=\"ws\">            </span>if rv is None:</pre><pre class=\"line current\"><span class=\"ws\">                </span>rv = self.dispatch_request()</pre><pre class=\"line after\"><span class=\"ws\">        </span>except Exception as e:</pre><pre class=\"line after\"><span class=\"ws\">            </span>rv = self.handle_user_exception(e)</pre><pre class=\"line after\"><span class=\"ws\">        </span>return self.finalize_request(rv)</pre><pre class=\"line after\"><span class=\"ws\"></span></pre><pre class=\"line after\"><span class=\"ws\">    </span>def finalize_request(</pre></div></div><li><div class=\"frame\" id=\"frame-140267016761632\"><h4>File <cite class=\"filename\">\"/usr/local/lib/python3.8/site-packages/flask/app.py\"</cite>,\n      line<em class=\"line\">852</em>,\n      in<code class=\"function\">dispatch_request</code></h4><div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>and req.method == &#34;OPTIONS&#34;</pre><pre class=\"line before\"><span class=\"ws\">        </span>):</pre><pre class=\"line before\"><span class=\"ws\">            </span>return self.make_default_options_response()</pre><pre class=\"line before\"><span class=\"ws\">        </span># otherwise dispatch to the handler for that endpoint</pre><pre class=\"line before\"><span class=\"ws\">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><pre class=\"line current\"><span class=\"ws\">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><pre class=\"line after\"><span class=\"ws\"></span></pre><pre class=\"line after\"><span class=\"ws\">    </span>def full_dispatch_request(self) -&gt; Response:</pre><pre class=\"line after\"><span class=\"ws\">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><pre class=\"line after\"><span class=\"ws\">        </span>pre and postprocessing as well as HTTP exception catching and</pre><pre class=\"line after\"><span class=\"ws\">        </span>error handling.</pre></div></div><li><div class=\"frame\" id=\"frame-140267016761744\"><h4>File <cite class=\"filename\">\"/app/WebApp/blueprints/web_api_device.py\"</cite>,\n      line<em class=\"line\">65</em>,\n      in<code class=\"function\">device_iostats</code></h4><div class=\"source \"><pre class=\"line before\"><span class=\"ws\"></span>def device_iostats(uuid):</pre><pre class=\"line before\"><span class=\"ws\">    </span>devices = db_controller.get_storage_devices(uuid)</pre><pre class=\"line before\"><span class=\"ws\">    </span>if not devices:</pre><pre class=\"line before\"><span class=\"ws\">        </span>return utils.get_response_error(f&#34;devices not found: {uuid}&#34;, 404)</pre><pre class=\"line before\"><span class=\"ws\"></span></pre><pre class=\"line current\"><span class=\"ws\">    </span>stats = db_controller.get_device_stats(devices[0])</pre><pre class=\"line after\"><span class=\"ws\">    </span>data = []</pre><pre class=\"line after\"><span class=\"ws\">    </span>for st in stats:</pre><pre class=\"line after\"><span class=\"ws\">        </span>data.append(st.get_clean_dict())</pre><pre class=\"line after\"><span class=\"ws\">    </span>return utils.get_response(data)</pre><pre class=\"line after\"><span class=\"ws\"></span></pre></div></div></ul><blockquote>TypeError: &#39;NVMeDevice&#39; object is not subscriptable\n</blockquote></div><div class=\"plain\"><p>\n      This is the Copy/Paste friendly version of the traceback.\n    </p><textarea cols=\"50\" rows=\"10\" name=\"code\" readonly>Traceback (most recent call last):\n  File &#34;/usr/local/lib/python3.8/site-packages/flask/app.py&#34;, line 1478, in __call__\n    return self.wsgi_app(environ, start_response)\n  File &#34;/usr/local/lib/python3.8/site-packages/flask/app.py&#34;, line 1458, in wsgi_app\n    response = self.handle_exception(e)\n  File &#34;/usr/local/lib/python3.8/site-packages/flask/app.py&#34;, line 1455, in wsgi_app\n    response = self.full_dispatch_request()\n  File &#34;/usr/local/lib/python3.8/site-packages/flask/app.py&#34;, line 869, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File &#34;/usr/local/lib/python3.8/site-packages/flask/app.py&#34;, line 867, in full_dispatch_request\n    rv = self.dispatch_request()\n  File &#34;/usr/local/lib/python3.8/site-packages/flask/app.py&#34;, line 852, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)\n  File &#34;/app/WebApp/blueprints/web_api_device.py&#34;, line 65, in device_iostats\n    stats = db_controller.get_device_stats(devices[0])\nTypeError: &#39;NVMeDevice&#39; object is not subscriptable\n</textarea></div><div class=\"explanation\">\n  The debugger caught an exception in your WSGI application.  You can now\n  look at the traceback which led to the error.  <span class=\"nojavascript\">\n  If you enable JavaScript you can also use additional features such as code\n  execution (if the evalex feature is enabled), automatic pasting of the\n  exceptions and much more.</span></div><div class=\"footer\">\n        Brought to you by <strong class=\"arthur\">DON'T PANIC</strong>, your\n        friendly Werkzeug powered traceback interpreter.</div>\n    </div><div class=\"pin-prompt\"><div class=\"inner\"><h3>Console Locked</h3><p>\n          The console is locked and needs to be unlocked by entering the PIN.\n          You can find the PIN printed out on the standard output of your\n          shell that runs the server.\n        <form><p>PIN:\n            <input type=text name=pin size=14><input type=submit name=btn value=\"Confirm Pin\">\n        </form>\n      </div>\n    </div>\n  </body></html>\n<!--\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.8/site-packages/flask/app.py\", line 1478, in __call__\n    return self.wsgi_app(environ, start_response)\n  File \"/usr/local/lib/python3.8/site-packages/flask/app.py\", line 1458, in wsgi_app\n    response = self.handle_exception(e)\n  File \"/usr/local/lib/python3.8/site-packages/flask/app.py\", line 1455, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"/usr/local/lib/python3.8/site-packages/flask/app.py\", line 869, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File \"/usr/local/lib/python3.8/site-packages/flask/app.py\", line 867, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"/usr/local/lib/python3.8/site-packages/flask/app.py\", line 852, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)\n  File \"/app/WebApp/blueprints/web_api_device.py\", line 65, in device_iostats\n    stats = db_controller.get_device_stats(devices[0])\nTypeError: 'NVMeDevice' object is not subscriptable\n\n\n-->\n"
                        }
                    ]
                }
            ]
        },
        {
            "name": "Pool",
            "item": [
                {
                    "name": "pool list",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/pool/",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "pool",
                                ""
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "pool list",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/pool/",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "pool",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:25 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "553"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"deleted\": false,\n            \"groups\": [],\n            \"id\": \"c1bffbbf-09a8-4fe2-9cdb-901e303d470e\",\n            \"lvol_max_size\": \"\",\n            \"lvols\": [\n                \"061412bc-6903-4951-aab8-60b7edcef18f\"\n            ],\n            \"max_r_mbytes_per_sec\": 0,\n            \"max_rw_ios_per_sec\": 0,\n            \"max_rw_mbytes_per_sec\": 0,\n            \"max_w_mbytes_per_sec\": 0,\n            \"name\": \"Pool\",\n            \"object_type\": \"object\",\n            \"pool_max_size\": \"\",\n            \"pool_name\": \"pool01\",\n            \"secret\": \"\",\n            \"status\": \"active\",\n            \"users\": []\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "pool add",
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"name\": \"testing0\"}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{BASE_URL}}/pool/",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "pool",
                                ""
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "pool update",
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"lvol-max\": \"100G\"}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{BASE_URL}}/pool/3dec840c-f86e-4235-b505-4633681d3e04",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "pool",
                                "3dec840c-f86e-4235-b505-4633681d3e04"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "pool get by id",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/pool/3dec840c-f86e-4235-b505-4633681d3e04",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "pool",
                                "3dec840c-f86e-4235-b505-4633681d3e04"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "pool get by id",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/pool/c1bffbbf-09a8-4fe2-9cdb-901e303d470e",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "pool",
                                        "c1bffbbf-09a8-4fe2-9cdb-901e303d470e"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:44 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "553"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"deleted\": false,\n            \"groups\": [],\n            \"id\": \"c1bffbbf-09a8-4fe2-9cdb-901e303d470e\",\n            \"lvol_max_size\": \"\",\n            \"lvols\": [\n                \"061412bc-6903-4951-aab8-60b7edcef18f\"\n            ],\n            \"max_r_mbytes_per_sec\": 0,\n            \"max_rw_ios_per_sec\": 0,\n            \"max_rw_mbytes_per_sec\": 0,\n            \"max_w_mbytes_per_sec\": 0,\n            \"name\": \"Pool\",\n            \"object_type\": \"object\",\n            \"pool_max_size\": \"\",\n            \"pool_name\": \"pool01\",\n            \"secret\": \"\",\n            \"status\": \"active\",\n            \"users\": []\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "pool get io stats",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "secret",
                                "value": "XLZp2ZnRJEvIi60B1ztW",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{BASE_URL}}/pool/iostats/a559d656-3a48-4c82-8116-e062e0cdaad0",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "pool",
                                "iostats",
                                "a559d656-3a48-4c82-8116-e062e0cdaad0"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "pool get io stats",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/pool/iostats/c1bffbbf-09a8-4fe2-9cdb-901e303d470e",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "pool",
                                        "iostats",
                                        "c1bffbbf-09a8-4fe2-9cdb-901e303d470e"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:53 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "669"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"LVol name\": \"lvol01\",\n            \"bytes_read (MB/s)\": 47978496,\n            \"bytes_unmapped (MB/s)\": 0,\n            \"bytes_write (MB/s)\": 47435776,\n            \"num_read_ops (IOPS)\": 11713,\n            \"num_write_ops (IOPS)\": 11581,\n            \"read_latency_ticks\": 548849179111500,\n            \"write_latency_ticks\": 2012226750404704\n        },\n        {\n            \"LVol name\": \"Total\",\n            \"bytes_read (MB/s)\": 47978496,\n            \"bytes_unmapped (MB/s)\": 0,\n            \"bytes_write (MB/s)\": 47435776,\n            \"num_read_ops (IOPS)\": 11713,\n            \"num_write_ops (IOPS)\": 11581,\n            \"read_latency_ticks\": 548849179111500,\n            \"write_latency_ticks\": 2012226750404704\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "pool get capacity",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/pool/capacity/3dec840c-f86e-4235-b505-4633681d3e04",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "pool",
                                "capacity",
                                "3dec840c-f86e-4235-b505-4633681d3e04"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "pool get capacity",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/pool/capacity/c1bffbbf-09a8-4fe2-9cdb-901e303d470e",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "pool",
                                        "capacity",
                                        "c1bffbbf-09a8-4fe2-9cdb-901e303d470e"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:20:09 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "275"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"device name\": \"lvol01\",\n            \"provisioned\": \"100.0 GB\",\n            \"util\": 0,\n            \"util_percent\": 0\n        },\n        {\n            \"device name\": \"Total\",\n            \"provisioned\": \"100.0 GB\",\n            \"util\": 0,\n            \"util_percent\": 0\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "pool delete",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/pool/d21b46f4-66bf-4609-b79c-2ee423e2d950",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "pool",
                                "d21b46f4-66bf-4609-b79c-2ee423e2d950"
                            ]
                        }
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "LVol",
            "item": [
                {
                    "name": "LVol list",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/lvol/",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "lvol",
                                ""
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "pool list",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/pool/",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "pool",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:25 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "553"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"deleted\": false,\n            \"groups\": [],\n            \"id\": \"c1bffbbf-09a8-4fe2-9cdb-901e303d470e\",\n            \"lvol_max_size\": \"\",\n            \"lvols\": [\n                \"061412bc-6903-4951-aab8-60b7edcef18f\"\n            ],\n            \"max_r_mbytes_per_sec\": 0,\n            \"max_rw_ios_per_sec\": 0,\n            \"max_rw_mbytes_per_sec\": 0,\n            \"max_w_mbytes_per_sec\": 0,\n            \"name\": \"Pool\",\n            \"object_type\": \"object\",\n            \"pool_max_size\": \"\",\n            \"pool_name\": \"pool01\",\n            \"secret\": \"\",\n            \"status\": \"active\",\n            \"users\": []\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "Create Lvol",
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"pvc-bb9c95adf-498b-407d-a8b8-0c4a9a3442fe3ff\",\n    \"size\": \"256M\",\n    \"pool\": \"testing1\",\n    \"comp\": false,\n    \"crypto\": false,\n    \"max_rw_iops\": \"0\",\n    \"max_rw_mbytes\": \"0\",\n    \"max_r_mbytes\": \"0\",\n    \"max_w_mbytes\": \"0\",\n    \"distr-ndcs\": \"1\",\n    \"distr-npcs\": \"1\"\n}\n",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{BASE_URL}}/lvol/",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "lvol",
                                ""
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "Create Lvol",
                            "originalRequest": {
                                "method": "POST",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/pool/",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "pool",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:25 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "553"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"deleted\": false,\n            \"groups\": [],\n            \"id\": \"c1bffbbf-09a8-4fe2-9cdb-901e303d470e\",\n            \"lvol_max_size\": \"\",\n            \"lvols\": [\n                \"061412bc-6903-4951-aab8-60b7edcef18f\"\n            ],\n            \"max_r_mbytes_per_sec\": 0,\n            \"max_rw_ios_per_sec\": 0,\n            \"max_rw_mbytes_per_sec\": 0,\n            \"max_w_mbytes_per_sec\": 0,\n            \"name\": \"Pool\",\n            \"object_type\": \"object\",\n            \"pool_max_size\": \"\",\n            \"pool_name\": \"pool01\",\n            \"secret\": \"\",\n            \"status\": \"active\",\n            \"users\": []\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "Update LVol",
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"name\":\"lvol2\"}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{BASE_URL}}/lvol/b8497095-e125-4199-a0f7-29e3cda28831",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "lvol",
                                "b8497095-e125-4199-a0f7-29e3cda28831"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "Update LVol",
                            "originalRequest": {
                                "method": "POST",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/lvol/b8497095-e125-4199-a0f7-29e3cda28831",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "lvol",
                                        "b8497095-e125-4199-a0f7-29e3cda28831"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:25 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "553"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"deleted\": false,\n            \"groups\": [],\n            \"id\": \"c1bffbbf-09a8-4fe2-9cdb-901e303d470e\",\n            \"lvol_max_size\": \"\",\n            \"lvols\": [\n                \"061412bc-6903-4951-aab8-60b7edcef18f\"\n            ],\n            \"max_r_mbytes_per_sec\": 0,\n            \"max_rw_ios_per_sec\": 0,\n            \"max_rw_mbytes_per_sec\": 0,\n            \"max_w_mbytes_per_sec\": 0,\n            \"name\": \"Pool\",\n            \"object_type\": \"object\",\n            \"pool_max_size\": \"\",\n            \"pool_name\": \"pool01\",\n            \"secret\": \"\",\n            \"status\": \"active\",\n            \"users\": []\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "Delete LVol",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/lvol/b8497095-e125-4199-a0f7-29e3cda28831",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "lvol",
                                "b8497095-e125-4199-a0f7-29e3cda28831"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "Delete LVol",
                            "originalRequest": {
                                "method": "POST",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/lvol/b8497095-e125-4199-a0f7-29e3cda28831",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "lvol",
                                        "b8497095-e125-4199-a0f7-29e3cda28831"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:25 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "553"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"deleted\": false,\n            \"groups\": [],\n            \"id\": \"c1bffbbf-09a8-4fe2-9cdb-901e303d470e\",\n            \"lvol_max_size\": \"\",\n            \"lvols\": [\n                \"061412bc-6903-4951-aab8-60b7edcef18f\"\n            ],\n            \"max_r_mbytes_per_sec\": 0,\n            \"max_rw_ios_per_sec\": 0,\n            \"max_rw_mbytes_per_sec\": 0,\n            \"max_w_mbytes_per_sec\": 0,\n            \"name\": \"Pool\",\n            \"object_type\": \"object\",\n            \"pool_max_size\": \"\",\n            \"pool_name\": \"pool01\",\n            \"secret\": \"\",\n            \"status\": \"active\",\n            \"users\": []\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "Resize LVol",
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"size\":\"20G\"}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{BASE_URL}}/lvol/resize/b8497095-e125-4199-a0f7-29e3cda28831",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "lvol",
                                "resize",
                                "b8497095-e125-4199-a0f7-29e3cda28831"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "Resize LVol",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json",
                                        "name": "Content-Type",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"size\":\"20G\"}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{BASE_URL}}/lvol/resize/b8497095-e125-4199-a0f7-29e3cda28831",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "lvol",
                                        "resize",
                                        "b8497095-e125-4199-a0f7-29e3cda28831"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:25 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "553"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"deleted\": false,\n            \"groups\": [],\n            \"id\": \"c1bffbbf-09a8-4fe2-9cdb-901e303d470e\",\n            \"lvol_max_size\": \"\",\n            \"lvols\": [\n                \"061412bc-6903-4951-aab8-60b7edcef18f\"\n            ],\n            \"max_r_mbytes_per_sec\": 0,\n            \"max_rw_ios_per_sec\": 0,\n            \"max_rw_mbytes_per_sec\": 0,\n            \"max_w_mbytes_per_sec\": 0,\n            \"name\": \"Pool\",\n            \"object_type\": \"object\",\n            \"pool_max_size\": \"\",\n            \"pool_name\": \"pool01\",\n            \"secret\": \"\",\n            \"status\": \"active\",\n            \"users\": []\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "LVol set-read-only",
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/lvol/set-read-only/b8497095-e125-4199-a0f7-29e3cda28831",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "lvol",
                                "set-read-only",
                                "b8497095-e125-4199-a0f7-29e3cda28831"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "LVol set-read-only",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/lvol/set-read-only/b8497095-e125-4199-a0f7-29e3cda28831",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "lvol",
                                        "set-read-only",
                                        "b8497095-e125-4199-a0f7-29e3cda28831"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:25 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "553"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"deleted\": false,\n            \"groups\": [],\n            \"id\": \"c1bffbbf-09a8-4fe2-9cdb-901e303d470e\",\n            \"lvol_max_size\": \"\",\n            \"lvols\": [\n                \"061412bc-6903-4951-aab8-60b7edcef18f\"\n            ],\n            \"max_r_mbytes_per_sec\": 0,\n            \"max_rw_ios_per_sec\": 0,\n            \"max_rw_mbytes_per_sec\": 0,\n            \"max_w_mbytes_per_sec\": 0,\n            \"name\": \"Pool\",\n            \"object_type\": \"object\",\n            \"pool_max_size\": \"\",\n            \"pool_name\": \"pool01\",\n            \"secret\": \"\",\n            \"status\": \"active\",\n            \"users\": []\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "LVol create snapshot",
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"name\":\"snapshot1\"}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{BASE_URL}}/lvol/create-snapshot/b8497095-e125-4199-a0f7-29e3cda28831",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "lvol",
                                "create-snapshot",
                                "b8497095-e125-4199-a0f7-29e3cda28831"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "LVol create snapshot",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json",
                                        "name": "Content-Type",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"name\":\"snapshot1\"}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{BASE_URL}}/lvol/create-snapshot/b8497095-e125-4199-a0f7-29e3cda28831",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "lvol",
                                        "create-snapshot",
                                        "b8497095-e125-4199-a0f7-29e3cda28831"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:25 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "553"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"deleted\": false,\n            \"groups\": [],\n            \"id\": \"c1bffbbf-09a8-4fe2-9cdb-901e303d470e\",\n            \"lvol_max_size\": \"\",\n            \"lvols\": [\n                \"061412bc-6903-4951-aab8-60b7edcef18f\"\n            ],\n            \"max_r_mbytes_per_sec\": 0,\n            \"max_rw_ios_per_sec\": 0,\n            \"max_rw_mbytes_per_sec\": 0,\n            \"max_w_mbytes_per_sec\": 0,\n            \"name\": \"Pool\",\n            \"object_type\": \"object\",\n            \"pool_max_size\": \"\",\n            \"pool_name\": \"pool01\",\n            \"secret\": \"\",\n            \"status\": \"active\",\n            \"users\": []\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "LVol Clone",
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"snapshot_name\":\"snapshot1\", \"clone_name\":\"clone1\"}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{BASE_URL}}/lvol/clone/b8497095-e125-4199-a0f7-29e3cda28831",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "lvol",
                                "clone",
                                "b8497095-e125-4199-a0f7-29e3cda28831"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "LVol Clone",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json",
                                        "name": "Content-Type",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"snapshot_name\":\"snapshot1\", \"clone_name\":\"clone1\"}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{BASE_URL}}/lvol/clone/b8497095-e125-4199-a0f7-29e3cda28831",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "lvol",
                                        "clone",
                                        "b8497095-e125-4199-a0f7-29e3cda28831"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:25 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "553"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"deleted\": false,\n            \"groups\": [],\n            \"id\": \"c1bffbbf-09a8-4fe2-9cdb-901e303d470e\",\n            \"lvol_max_size\": \"\",\n            \"lvols\": [\n                \"061412bc-6903-4951-aab8-60b7edcef18f\"\n            ],\n            \"max_r_mbytes_per_sec\": 0,\n            \"max_rw_ios_per_sec\": 0,\n            \"max_rw_mbytes_per_sec\": 0,\n            \"max_w_mbytes_per_sec\": 0,\n            \"name\": \"Pool\",\n            \"object_type\": \"object\",\n            \"pool_max_size\": \"\",\n            \"pool_name\": \"pool01\",\n            \"secret\": \"\",\n            \"status\": \"active\",\n            \"users\": []\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "LVol get details",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/lvol/8eaf77ca-272c-4029-bbdc-7d3f58938bdf",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "lvol",
                                "8eaf77ca-272c-4029-bbdc-7d3f58938bdf"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "LVol get details",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/lvol/b8497095-e125-4199-a0f7-29e3cda28831/",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "lvol",
                                        "b8497095-e125-4199-a0f7-29e3cda28831",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:25 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "553"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"base_bdev\": \"distr_5793_lvolx1\",\n            \"bdev_stack\": [\n                {\n                    \"name\": \"distr_5793_lvolx1\",\n                    \"type\": \"distr\"\n                }\n            ],\n            \"cloned_from_snap\": \"\",\n            \"comp_bdev\": \"\",\n            \"crypto_bdev\": \"\",\n            \"crypto_key_name\": \"\",\n            \"deleted\": false,\n            \"distr_bs\": 4096,\n            \"distr_chunk_bs\": 4096,\n            \"distr_page_size\": 2097152,\n            \"guid\": \"434f3550416e784769414549587a4859\",\n            \"ha_type\": \"single\",\n            \"hostname\": \"ip-10-0-4-195\",\n            \"id\": \"b8497095-e125-4199-a0f7-29e3cda28831\",\n            \"lvol_bdev\": \"LVS_5793/lvolx1\",\n            \"lvol_name\": \"lvolx1\",\n            \"lvol_type\": \"lvol\",\n            \"lvs_name\": \"LVS_5793\",\n            \"mode\": \"read-write\",\n            \"name\": \"LVol\",\n            \"ndcs\": 2,\n            \"node_id\": \"8abecf8e-21ac-429b-81ff-c9e889c24e7b\",\n            \"nodes\": [],\n            \"npcs\": 2,\n            \"nqn\": \"nqn.2023-02.io.simplyblock:6bc41403-6d7e-45b7-9922-fee0b04a6dca:lvol:b8497095-e125-4199-a0f7-29e3cda28831\",\n            \"nvme_dev\": {\n                \"alceml_bdev\": \"\",\n                \"alloc_bdev\": \"\",\n                \"capacity\": -1,\n                \"cluster_device_order\": 0,\n                \"deleted\": false,\n                \"device_name\": \"\",\n                \"id\": \"\",\n                \"model_id\": \"\",\n                \"name\": \"NVMeDevice\",\n                \"node_id\": \"\",\n                \"nvme_bdev\": \"\",\n                \"nvmf_ip\": \"\",\n                \"nvmf_nqn\": \"\",\n                \"nvmf_port\": 0,\n                \"object_type\": \"object\",\n                \"overload_percentage\": 0,\n                \"partitions_count\": 0,\n                \"pcie_address\": \"\",\n                \"pt_bdev\": \"\",\n                \"remote_bdev\": \"\",\n                \"sequential_number\": 0,\n                \"serial_number\": \"\",\n                \"size\": -1,\n                \"status\": \"\",\n                \"testing_bdev\": \"\",\n                \"uuid\": \"\"\n            },\n            \"object_type\": \"object\",\n            \"pool_uuid\": \"3dec840c-f86e-4235-b505-4633681d3e04\",\n            \"r_mbytes_per_sec\": 0,\n            \"rw_ios_per_sec\": 0,\n            \"rw_mbytes_per_sec\": 0,\n            \"size\": 26843545600,\n            \"status\": \"online\",\n            \"top_bdev\": \"distr_5793_lvolx1\",\n            \"uuid\": \"b8497095-e125-4199-a0f7-29e3cda28831\",\n            \"vuid\": 5793,\n            \"w_mbytes_per_sec\": 0\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "LVol iostats",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "secret",
                                "value": "XLZp2ZnRJEvIi60B1ztW",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{BASE_URL}}/lvol/iostats/04e7230c-5176-4cf8-ace7-89f001f94fbd",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "lvol",
                                "iostats",
                                "04e7230c-5176-4cf8-ace7-89f001f94fbd"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "LVol iostats",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/lvol/iostats/b8497095-e125-4199-a0f7-29e3cda28831/",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "lvol",
                                        "iostats",
                                        "b8497095-e125-4199-a0f7-29e3cda28831",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:25 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "553"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702558721,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702558719,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702558717,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702558715,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702558713,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702558711,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702558709,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702558707,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702558705,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702558703,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702558701,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702558699,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702558697,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702558695,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702558693,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702558691,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702558689,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702558687,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702558685,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702558683,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "LVol iostats history",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/lvol/iostats/b8497095-e125-4199-a0f7-29e3cda28831/history/1h",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "lvol",
                                "iostats",
                                "b8497095-e125-4199-a0f7-29e3cda28831",
                                "history",
                                "1h"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "LVol iostats history",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/lvol/iostats/b8497095-e125-4199-a0f7-29e3cda28831/history/1h/",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "lvol",
                                        "iostats",
                                        "b8497095-e125-4199-a0f7-29e3cda28831",
                                        "history",
                                        "1h",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:25 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "553"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702558661,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702558480,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702558298,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702558116,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702557935,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702557753,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702557572,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702557390,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702557209,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702557027,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702556846,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702556664,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702556483,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702556301,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702556120,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702555938,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702555756,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702555575,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702555393,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        },\n        {\n            \"bytes_read\": 1609039872,\n            \"bytes_written\": 8629477376,\n            \"date\": 1702555212,\n            \"read_bytes_per_sec\": 0,\n            \"read_iops\": 0,\n            \"read_latency_ticks\": 680713008174,\n            \"unmapped_bytes_per_sec\": 0,\n            \"write_bytes_per_sec\": 0,\n            \"write_iops\": 0,\n            \"write_latency_ticks\": 2437735130942\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "LVol capacity",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/lvol/capacity/b8497095-e125-4199-a0f7-29e3cda28831",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "lvol",
                                "capacity",
                                "b8497095-e125-4199-a0f7-29e3cda28831"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "pool list",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/pool/",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "pool",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:25 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "553"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"deleted\": false,\n            \"groups\": [],\n            \"id\": \"c1bffbbf-09a8-4fe2-9cdb-901e303d470e\",\n            \"lvol_max_size\": \"\",\n            \"lvols\": [\n                \"061412bc-6903-4951-aab8-60b7edcef18f\"\n            ],\n            \"max_r_mbytes_per_sec\": 0,\n            \"max_rw_ios_per_sec\": 0,\n            \"max_rw_mbytes_per_sec\": 0,\n            \"max_w_mbytes_per_sec\": 0,\n            \"name\": \"Pool\",\n            \"object_type\": \"object\",\n            \"pool_max_size\": \"\",\n            \"pool_name\": \"pool01\",\n            \"secret\": \"\",\n            \"status\": \"active\",\n            \"users\": []\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "LVol get connection strings",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/lvol/connect/1d1a6285-8e1f-491b-81bd-deb039e88fa3",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "lvol",
                                "connect",
                                "1d1a6285-8e1f-491b-81bd-deb039e88fa3"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "pool list",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/pool/",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "pool",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:25 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "553"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"deleted\": false,\n            \"groups\": [],\n            \"id\": \"c1bffbbf-09a8-4fe2-9cdb-901e303d470e\",\n            \"lvol_max_size\": \"\",\n            \"lvols\": [\n                \"061412bc-6903-4951-aab8-60b7edcef18f\"\n            ],\n            \"max_r_mbytes_per_sec\": 0,\n            \"max_rw_ios_per_sec\": 0,\n            \"max_rw_mbytes_per_sec\": 0,\n            \"max_w_mbytes_per_sec\": 0,\n            \"name\": \"Pool\",\n            \"object_type\": \"object\",\n            \"pool_max_size\": \"\",\n            \"pool_name\": \"pool01\",\n            \"secret\": \"\",\n            \"status\": \"active\",\n            \"users\": []\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                }
            ]
        },
        {
            "name": "Mgmt Node",
            "item": [
                {
                    "name": "list mgmt nodes",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/mgmtnode",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "mgmtnode"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "list management nodes",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/mgmtnode",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "mgmtnode"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:14:28 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "2870"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"baseboard_sn\": \"\",\n            \"cluster_id\": \"6bc41403-6d7e-45b7-9922-fee0b04a6dca\",\n            \"deleted\": false,\n            \"docker_ip_port\": \"10.0.4.98:2375\",\n            \"hostname\": \"ip-10-0-4-98\",\n            \"id\": \"eb44a172-4854-4fc2-86bc-7f4cf51fd6e7\",\n            \"mgmt_ip\": \"10.0.4.98\",\n            \"name\": \"MgmtNode\",\n            \"object_type\": \"object\",\n            \"status\": \"online\",\n            \"status_code\": 0,\n            \"system_uuid\": \"eb44a172-4854-4fc2-86bc-7f4cf51fd6e7\",\n            \"updated_at\": \"2023-12-13 23:21:32.306085\"\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "mgmt node detail",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/mgmtnode",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "mgmtnode"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "mgmt node detail",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/mgmtnode/eb44a172-4854-4fc2-86bc-7f4cf51fd6e7",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "mgmtnode",
                                        "eb44a172-4854-4fc2-86bc-7f4cf51fd6e7"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:14:28 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "2870"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"baseboard_sn\": \"\",\n            \"cluster_id\": \"6bc41403-6d7e-45b7-9922-fee0b04a6dca\",\n            \"deleted\": false,\n            \"docker_ip_port\": \"10.0.4.98:2375\",\n            \"hostname\": \"ip-10-0-4-98\",\n            \"id\": \"eb44a172-4854-4fc2-86bc-7f4cf51fd6e7\",\n            \"mgmt_ip\": \"10.0.4.98\",\n            \"name\": \"MgmtNode\",\n            \"object_type\": \"object\",\n            \"status\": \"online\",\n            \"status_code\": 0,\n            \"system_uuid\": \"eb44a172-4854-4fc2-86bc-7f4cf51fd6e7\",\n            \"updated_at\": \"2023-12-13 23:21:32.306085\"\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                }
            ]
        },
        {
            "name": "CSI",
            "item": [
                {
                    "name": "CreateVolume",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "cluster",
                                "value": "{{CLUSTER_ID}}",
                                "type": "text"
                            },
                            {
                                "key": "secret",
                                "value": "{{CLUSTER_SECRET}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"compression\": \"False\",\n    \"encryption\": \"False\",\n    \"fsType\": \"ext4\",\n    \"pool_name\": \"pool01\",\n    \"qos_r_mbytes\": \"0\",\n    \"qos_rw_iops\": \"0\",\n    \"qos_rw_mbytes\": \"0\",\n    \"qos_w_mbytes\": \"0\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{BASE_URL}}/csi/create_volume/",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "csi",
                                "create_volume",
                                ""
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "GetPools",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "cluster",
                                "value": "{{CLUSTER_ID}}",
                                "type": "text"
                            },
                            {
                                "key": "secret",
                                "value": "{{CLUSTER_SECRET}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{BASE_URL}}/csi/get_pools/",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "csi",
                                "get_pools",
                                ""
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "GetVolumeInfo",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "cluster",
                                "value": "{{CLUSTER_ID}}",
                                "type": "text"
                            },
                            {
                                "key": "secret",
                                "value": "{{CLUSTER_SECRET}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{BASE_URL}}/csi/get_volume_info/b8497095-e125-4199-a0f7-29e3cda28831",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "csi",
                                "get_volume_info",
                                "b8497095-e125-4199-a0f7-29e3cda28831"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "DeleteVolume",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "cluster",
                                "value": "{{CLUSTER_ID}}",
                                "type": "text"
                            },
                            {
                                "key": "secret",
                                "value": "{{CLUSTER_SECRET}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{BASE_URL}}/csi/delete_lvol/b8497095-e125-4199-a0f7-29e3cda28831",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "csi",
                                "delete_lvol",
                                "b8497095-e125-4199-a0f7-29e3cda28831"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "ResizeVolume",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "cluster",
                                "value": "{{CLUSTER_ID}}",
                                "type": "text"
                            },
                            {
                                "key": "secret",
                                "value": "{{CLUSTER_SECRET}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{BASE_URL}}/csi/resize_lvol",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "csi",
                                "resize_lvol"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "ListSnapshots",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "cluster",
                                "value": "{{CLUSTER_ID}}",
                                "type": "text"
                            },
                            {
                                "key": "secret",
                                "value": "{{CLUSTER_SECRET}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{BASE_URL}}/csi/list_snapshots",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "csi",
                                "list_snapshots"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "DeleteSnapshot",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "cluster",
                                "value": "{{CLUSTER_ID}}",
                                "type": "text"
                            },
                            {
                                "key": "secret",
                                "value": "{{CLUSTER_SECRET}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{BASE_URL}}/csi/delete_snapshot/snapshot-id",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "csi",
                                "delete_snapshot",
                                "snapshot-id"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "CreateSnapshot",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "cluster",
                                "value": "{{CLUSTER_ID}}",
                                "type": "text"
                            },
                            {
                                "key": "secret",
                                "value": "{{CLUSTER_SECRET}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{BASE_URL}}/csi/create_snapshot",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "csi",
                                "create_snapshot"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "PublishVolume",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "cluster",
                                "value": "{{CLUSTER_ID}}",
                                "type": "text"
                            },
                            {
                                "key": "secret",
                                "value": "{{CLUSTER_SECRET}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{BASE_URL}}/csi/publish_volume",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "csi",
                                "publish_volume"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "UnPublishVolume",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "cluster",
                                "value": "{{CLUSTER_ID}}",
                                "type": "text"
                            },
                            {
                                "key": "secret",
                                "value": "{{CLUSTER_SECRET}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{BASE_URL}}/csi/unpublish_volume/06a22475-c392-491b-acb6-29cb7bcd12a8",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "csi",
                                "unpublish_volume",
                                "06a22475-c392-491b-acb6-29cb7bcd12a8"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "DeleteLvol",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "cluster",
                                "value": "{{CLUSTER_ID}}",
                                "type": "text"
                            },
                            {
                                "key": "secret",
                                "value": "{{CLUSTER_SECRET}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{BASE_URL}}/csi/delete_lvol/06a22475-c392-491b-acb6-29cb7bcd12a8",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "csi",
                                "delete_lvol",
                                "06a22475-c392-491b-acb6-29cb7bcd12a8"
                            ]
                        }
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Caching Node",
            "item": [
                {
                    "name": "List caching nodes",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/cachingnode/",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "cachingnode",
                                ""
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "pool list",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/pool/",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "pool",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:25 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "553"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"deleted\": false,\n            \"groups\": [],\n            \"id\": \"c1bffbbf-09a8-4fe2-9cdb-901e303d470e\",\n            \"lvol_max_size\": \"\",\n            \"lvols\": [\n                \"061412bc-6903-4951-aab8-60b7edcef18f\"\n            ],\n            \"max_r_mbytes_per_sec\": 0,\n            \"max_rw_ios_per_sec\": 0,\n            \"max_rw_mbytes_per_sec\": 0,\n            \"max_w_mbytes_per_sec\": 0,\n            \"name\": \"Pool\",\n            \"object_type\": \"object\",\n            \"pool_max_size\": \"\",\n            \"pool_name\": \"pool01\",\n            \"secret\": \"\",\n            \"status\": \"active\",\n            \"users\": []\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "Get caching node by id",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/cachingnode/ip-10-0-4-168",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "cachingnode",
                                "ip-10-0-4-168"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "pool list",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/pool/",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "pool",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:25 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "553"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"deleted\": false,\n            \"groups\": [],\n            \"id\": \"c1bffbbf-09a8-4fe2-9cdb-901e303d470e\",\n            \"lvol_max_size\": \"\",\n            \"lvols\": [\n                \"061412bc-6903-4951-aab8-60b7edcef18f\"\n            ],\n            \"max_r_mbytes_per_sec\": 0,\n            \"max_rw_ios_per_sec\": 0,\n            \"max_rw_mbytes_per_sec\": 0,\n            \"max_w_mbytes_per_sec\": 0,\n            \"name\": \"Pool\",\n            \"object_type\": \"object\",\n            \"pool_max_size\": \"\",\n            \"pool_name\": \"pool01\",\n            \"secret\": \"\",\n            \"status\": \"active\",\n            \"users\": []\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "Connect LVol to caching node",
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"lvol_id\": \"cbfe0f18-2c4f-4c0a-8a39-510e1b399a71\"}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{BASE_URL}}/cachingnode/connect/dabdd29e-05c6-4166-9eed-bdd753cde2e3",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "cachingnode",
                                "connect",
                                "dabdd29e-05c6-4166-9eed-bdd753cde2e3"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "pool list",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/pool/",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "pool",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:25 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "553"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"deleted\": false,\n            \"groups\": [],\n            \"id\": \"c1bffbbf-09a8-4fe2-9cdb-901e303d470e\",\n            \"lvol_max_size\": \"\",\n            \"lvols\": [\n                \"061412bc-6903-4951-aab8-60b7edcef18f\"\n            ],\n            \"max_r_mbytes_per_sec\": 0,\n            \"max_rw_ios_per_sec\": 0,\n            \"max_rw_mbytes_per_sec\": 0,\n            \"max_w_mbytes_per_sec\": 0,\n            \"name\": \"Pool\",\n            \"object_type\": \"object\",\n            \"pool_max_size\": \"\",\n            \"pool_name\": \"pool01\",\n            \"secret\": \"\",\n            \"status\": \"active\",\n            \"users\": []\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "Add Caching node to the cluster",
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "{\r\n    \"cluster_id\": \"e8092aee-b2d9-4f3d-872c-60e21bd227de\",\r\n    \"node_ip\": \"10.0.0.1:5000\",\r\n    \"iface_name\": \"eth0\"\r\n}\r\n",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{BASE_URL}}/cachingnode/",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "cachingnode",
                                ""
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "pool list",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/pool/",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "pool",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:25 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "553"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"deleted\": false,\n            \"groups\": [],\n            \"id\": \"c1bffbbf-09a8-4fe2-9cdb-901e303d470e\",\n            \"lvol_max_size\": \"\",\n            \"lvols\": [\n                \"061412bc-6903-4951-aab8-60b7edcef18f\"\n            ],\n            \"max_r_mbytes_per_sec\": 0,\n            \"max_rw_ios_per_sec\": 0,\n            \"max_rw_mbytes_per_sec\": 0,\n            \"max_w_mbytes_per_sec\": 0,\n            \"name\": \"Pool\",\n            \"object_type\": \"object\",\n            \"pool_max_size\": \"\",\n            \"pool_name\": \"pool01\",\n            \"secret\": \"\",\n            \"status\": \"active\",\n            \"users\": []\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "Recreate node",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/cachingnode/recreate/node_id",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "cachingnode",
                                "recreate",
                                "node_id"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "pool list",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/pool/",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "pool",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:25 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "553"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"deleted\": false,\n            \"groups\": [],\n            \"id\": \"c1bffbbf-09a8-4fe2-9cdb-901e303d470e\",\n            \"lvol_max_size\": \"\",\n            \"lvols\": [\n                \"061412bc-6903-4951-aab8-60b7edcef18f\"\n            ],\n            \"max_r_mbytes_per_sec\": 0,\n            \"max_rw_ios_per_sec\": 0,\n            \"max_rw_mbytes_per_sec\": 0,\n            \"max_w_mbytes_per_sec\": 0,\n            \"name\": \"Pool\",\n            \"object_type\": \"object\",\n            \"pool_max_size\": \"\",\n            \"pool_name\": \"pool01\",\n            \"secret\": \"\",\n            \"status\": \"active\",\n            \"users\": []\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "Disconnect LVol from caching node",
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"lvol_id\": \"e8092aee-b2d9-4f3d-872c-60e21bd227de\"}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{BASE_URL}}/cachingnode/disconnect/7ca33d01-2a29-465b-8e66-450c703ea7aa",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "cachingnode",
                                "disconnect",
                                "7ca33d01-2a29-465b-8e66-450c703ea7aa"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "pool list",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/pool/",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "pool",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:25 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "553"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"deleted\": false,\n            \"groups\": [],\n            \"id\": \"c1bffbbf-09a8-4fe2-9cdb-901e303d470e\",\n            \"lvol_max_size\": \"\",\n            \"lvols\": [\n                \"061412bc-6903-4951-aab8-60b7edcef18f\"\n            ],\n            \"max_r_mbytes_per_sec\": 0,\n            \"max_rw_ios_per_sec\": 0,\n            \"max_rw_mbytes_per_sec\": 0,\n            \"max_w_mbytes_per_sec\": 0,\n            \"name\": \"Pool\",\n            \"object_type\": \"object\",\n            \"pool_max_size\": \"\",\n            \"pool_name\": \"pool01\",\n            \"secret\": \"\",\n            \"status\": \"active\",\n            \"users\": []\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                },
                {
                    "name": "List LVols of caching node",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/cachingnode/lvols/7ca33d01-2a29-465b-8e66-450c703ea7aa",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                "cachingnode",
                                "lvols",
                                "7ca33d01-2a29-465b-8e66-450c703ea7aa"
                            ]
                        }
                    },
                    "response": [
                        {
                            "name": "pool list",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{BASE_URL}}/pool/",
                                    "host": [
                                        "{{BASE_URL}}"
                                    ],
                                    "path": [
                                        "pool",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "server",
                                    "value": "Werkzeug/3.0.1 Python/3.8.18"
                                },
                                {
                                    "key": "date",
                                    "value": "Fri, 24 Nov 2023 08:19:25 GMT"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "content-length",
                                    "value": "553"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n    \"results\": [\n        {\n            \"deleted\": false,\n            \"groups\": [],\n            \"id\": \"c1bffbbf-09a8-4fe2-9cdb-901e303d470e\",\n            \"lvol_max_size\": \"\",\n            \"lvols\": [\n                \"061412bc-6903-4951-aab8-60b7edcef18f\"\n            ],\n            \"max_r_mbytes_per_sec\": 0,\n            \"max_rw_ios_per_sec\": 0,\n            \"max_rw_mbytes_per_sec\": 0,\n            \"max_w_mbytes_per_sec\": 0,\n            \"name\": \"Pool\",\n            \"object_type\": \"object\",\n            \"pool_max_size\": \"\",\n            \"pool_name\": \"pool01\",\n            \"secret\": \"\",\n            \"status\": \"active\",\n            \"users\": []\n        }\n    ],\n    \"status\": true\n}"
                        }
                    ]
                }
            ]
        },
        {
            "name": "status",
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{BASE_URL}}/",
                    "host": [
                        "{{BASE_URL}}"
                    ],
                    "path": [
                        ""
                    ]
                }
            },
            "response": [
                {
                    "name": "status",
                    "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{BASE_URL}}/",
                            "host": [
                                "{{BASE_URL}}"
                            ],
                            "path": [
                                ""
                            ]
                        }
                    },
                    "status": "OK",
                    "code": 200,
                    "_postman_previewlanguage": "json",
                    "header": [
                        {
                            "key": "server",
                            "value": "Werkzeug/3.0.1 Python/3.8.18"
                        },
                        {
                            "key": "date",
                            "value": "Fri, 24 Nov 2023 08:20:18 GMT"
                        },
                        {
                            "key": "content-type",
                            "value": "application/json"
                        },
                        {
                            "key": "content-length",
                            "value": "42"
                        }
                    ],
                    "cookie": [],
                    "body": "{\n    \"results\": \"Live\",\n    \"status\": true\n}"
                }
            ]
        }
    ],
    "auth": {
        "type": "apikey",
        "apikey": [
            {
                "key": "value",
                "value": "{{CLUSTER_ID}} {{CLUSTER_SECRET}}",
                "type": "string"
            },
            {
                "key": "key",
                "value": "Authorization",
                "type": "string"
            }
        ]
    },
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        },
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        }
    ],
    "variable": [
        {
            "key": "BASE_URL",
            "value": "http://34.236.145.154/",
            "type": "string"
        },
        {
            "key": "CLUSTER_ID",
            "value": "792f98a8-75aa-420c-bd2e-be6359a660d1",
            "type": "string"
        },
        {
            "key": "CLUSTER_SECRET",
            "value": "pyIfdtkSpgHtzaj588pG",
            "type": "string"
        }
    ]
}
